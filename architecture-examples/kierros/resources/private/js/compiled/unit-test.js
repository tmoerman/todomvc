if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExecModule_(url);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in (obj)) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.8.34";
cljs.core._STAR_unchecked_if_STAR_ = false;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__8356__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__8356 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8357__i = 0, G__8357__a = new Array(arguments.length - 0);
        while (G__8357__i < G__8357__a.length) {
          G__8357__a[G__8357__i] = arguments[G__8357__i + 0];
          ++G__8357__i;
        }
        args = new cljs.core.IndexedSeq(G__8357__a, 0);
      }
      return G__8356__delegate.call(this, args);
    };
    G__8356.cljs$lang$maxFixedArity = 0;
    G__8356.cljs$lang$applyTo = function(arglist__8358) {
      var args = cljs.core.seq(arglist__8358);
      return G__8356__delegate(args);
    };
    G__8356.cljs$core$IFn$_invoke$arity$variadic = G__8356__delegate;
    return G__8356;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__8359__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__8359 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8360__i = 0, G__8360__a = new Array(arguments.length - 0);
        while (G__8360__i < G__8360__a.length) {
          G__8360__a[G__8360__i] = arguments[G__8360__i + 0];
          ++G__8360__i;
        }
        args = new cljs.core.IndexedSeq(G__8360__a, 0);
      }
      return G__8359__delegate.call(this, args);
    };
    G__8359.cljs$lang$maxFixedArity = 0;
    G__8359.cljs$lang$applyTo = function(arglist__8361) {
      var args = cljs.core.seq(arglist__8361);
      return G__8359__delegate(args);
    };
    G__8359.cljs$core$IFn$_invoke$arity$variadic = G__8359__delegate;
    return G__8359;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__6198__auto__ = ty;
    if (cljs.core.truth_(and__6198__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__6198__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args8362 = [];
  var len__7279__auto___8368 = arguments.length;
  var i__7280__auto___8369 = 0;
  while (true) {
    if (i__7280__auto___8369 < len__7279__auto___8368) {
      args8362.push(arguments[i__7280__auto___8369]);
      var G__8370 = i__7280__auto___8369 + 1;
      i__7280__auto___8369 = G__8370;
      continue;
    } else {
    }
    break;
  }
  var G__8367 = args8362.length;
  switch(G__8367) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8362.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__7124__auto___8372 = dimarray.length;
  var i_8373 = 0;
  while (true) {
    if (i_8373 < n__7124__auto___8372) {
      dimarray[i_8373] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__8374 = i_8373 + 1;
      i_8373 = G__8374;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq8363) {
  var G__8364 = cljs.core.first(seq8363);
  var seq8363__$1 = cljs.core.next(seq8363);
  var G__8365 = cljs.core.first(seq8363__$1);
  var seq8363__$2 = cljs.core.next(seq8363__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__8364, G__8365, seq8363__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__7124__auto___8375 = len;
  var i_8376 = 0;
  while (true) {
    if (i_8376 < n__7124__auto___8375) {
      new_arr[i_8376] = arr[i_8376];
      var G__8377 = i_8376 + 1;
      i_8376 = G__8377;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__8378 = i + 1;
      i = G__8378;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args8379 = [];
  var len__7279__auto___8388 = arguments.length;
  var i__7280__auto___8389 = 0;
  while (true) {
    if (i__7280__auto___8389 < len__7279__auto___8388) {
      args8379.push(arguments[i__7280__auto___8389]);
      var G__8390 = i__7280__auto___8389 + 1;
      i__7280__auto___8389 = G__8390;
      continue;
    } else {
    }
    break;
  }
  var G__8384 = args8379.length;
  switch(G__8384) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8379.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__8385 = cljs.core.aget;
  var G__8386 = array[i];
  var G__8387 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__8385, G__8386, G__8387) : cljs.core.apply.call(null, G__8385, G__8386, G__8387);
};
cljs.core.aget.cljs$lang$applyTo = function(seq8380) {
  var G__8381 = cljs.core.first(seq8380);
  var seq8380__$1 = cljs.core.next(seq8380);
  var G__8382 = cljs.core.first(seq8380__$1);
  var seq8380__$2 = cljs.core.next(seq8380__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__8381, G__8382, seq8380__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args8392 = [];
  var len__7279__auto___8403 = arguments.length;
  var i__7280__auto___8404 = 0;
  while (true) {
    if (i__7280__auto___8404 < len__7279__auto___8403) {
      args8392.push(arguments[i__7280__auto___8404]);
      var G__8405 = i__7280__auto___8404 + 1;
      i__7280__auto___8404 = G__8405;
      continue;
    } else {
    }
    break;
  }
  var G__8398 = args8392.length;
  switch(G__8398) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8392.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__8399 = cljs.core.aset;
  var G__8400 = array[idx];
  var G__8401 = idx2;
  var G__8402 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__8399, G__8400, G__8401, G__8402) : cljs.core.apply.call(null, G__8399, G__8400, G__8401, G__8402);
};
cljs.core.aset.cljs$lang$applyTo = function(seq8393) {
  var G__8394 = cljs.core.first(seq8393);
  var seq8393__$1 = cljs.core.next(seq8393);
  var G__8395 = cljs.core.first(seq8393__$1);
  var seq8393__$2 = cljs.core.next(seq8393__$1);
  var G__8396 = cljs.core.first(seq8393__$2);
  var seq8393__$3 = cljs.core.next(seq8393__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__8394, G__8395, G__8396, seq8393__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args8407 = [];
  var len__7279__auto___8413 = arguments.length;
  var i__7280__auto___8414 = 0;
  while (true) {
    if (i__7280__auto___8414 < len__7279__auto___8413) {
      args8407.push(arguments[i__7280__auto___8414]);
      var G__8415 = i__7280__auto___8414 + 1;
      i__7280__auto___8414 = G__8415;
      continue;
    } else {
    }
    break;
  }
  var G__8409 = args8407.length;
  switch(G__8409) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8407.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__8410 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__8411 = [];
  var G__8412 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8410, G__8411, G__8412) : cljs.core.reduce.call(null, G__8410, G__8411, G__8412);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___8420 = arguments.length;
  var i__7280__auto___8421 = 0;
  while (true) {
    if (i__7280__auto___8421 < len__7279__auto___8420) {
      args__7286__auto__.push(arguments[i__7280__auto___8421]);
      var G__8422 = i__7280__auto___8421 + 1;
      i__7280__auto___8421 = G__8422;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 2 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7287__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq8417) {
  var G__8418 = cljs.core.first(seq8417);
  var seq8417__$1 = cljs.core.next(seq8417);
  var G__8419 = cljs.core.first(seq8417__$1);
  var seq8417__$2 = cljs.core.next(seq8417__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__8418, G__8419, seq8417__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args8423 = [];
  var len__7279__auto___8426 = arguments.length;
  var i__7280__auto___8427 = 0;
  while (true) {
    if (i__7280__auto___8427 < len__7279__auto___8426) {
      args8423.push(arguments[i__7280__auto___8427]);
      var G__8428 = i__7280__auto___8427 + 1;
      i__7280__auto___8427 = G__8428;
      continue;
    } else {
    }
    break;
  }
  var G__8425 = args8423.length;
  switch(G__8425) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8423.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6874__auto__.call(null, this$, a);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__6874__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6874__auto__.call(null, this$, a, b);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__6874__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6874__auto__.call(null, this$, a, b, c);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__6874__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6874__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__6874__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$6 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6874__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__6874__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$7 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6874__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$8 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$9 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$10 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$11 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$12 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$13 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$14 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$15 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$16 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$17 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$18 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$19 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$20 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$21 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._invoke[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$22 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6874__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__6874__auto____$1 = cljs.core._invoke["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__6874__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__6873__auto__ = value == null ? null : value;
    var m__6874__auto__ = cljs.core._clone[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__6874__auto__.call(null, value);
    } else {
      var m__6874__auto____$1 = cljs.core._clone["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__6874__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._count[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._count["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._empty[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._empty["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._conj[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6874__auto__.call(null, coll, o);
    } else {
      var m__6874__auto____$1 = cljs.core._conj["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__6874__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args8430 = [];
  var len__7279__auto___8433 = arguments.length;
  var i__7280__auto___8434 = 0;
  while (true) {
    if (i__7280__auto___8434 < len__7279__auto___8433) {
      args8430.push(arguments[i__7280__auto___8434]);
      var G__8435 = i__7280__auto___8434 + 1;
      i__7280__auto___8434 = G__8435;
      continue;
    } else {
    }
    break;
  }
  var G__8432 = args8430.length;
  switch(G__8432) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8430.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._nth[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6874__auto__.call(null, coll, n);
    } else {
      var m__6874__auto____$1 = cljs.core._nth["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__6874__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._nth[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6874__auto__.call(null, coll, n, not_found);
    } else {
      var m__6874__auto____$1 = cljs.core._nth["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__6874__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._rest[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._rest["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._next[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._next["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args8437 = [];
  var len__7279__auto___8440 = arguments.length;
  var i__7280__auto___8441 = 0;
  while (true) {
    if (i__7280__auto___8441 < len__7279__auto___8440) {
      args8437.push(arguments[i__7280__auto___8441]);
      var G__8442 = i__7280__auto___8441 + 1;
      i__7280__auto___8441 = G__8442;
      continue;
    } else {
    }
    break;
  }
  var G__8439 = args8437.length;
  switch(G__8439) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8437.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._lookup[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__6874__auto__.call(null, o, k);
    } else {
      var m__6874__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__6874__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._lookup[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6874__auto__.call(null, o, k, not_found);
    } else {
      var m__6874__auto____$1 = cljs.core._lookup["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__6874__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto__.call(null, coll, k);
    } else {
      var m__6874__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._assoc[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6874__auto__.call(null, coll, k, v);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__6874__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._dissoc[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto__.call(null, coll, k);
    } else {
      var m__6874__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__6874__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._key[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._key["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._val[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._val["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._disjoin[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6874__auto__.call(null, coll, v);
    } else {
      var m__6874__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__6874__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._peek[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._peek["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._pop[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._pop["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._assoc_n[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6874__auto__.call(null, coll, n, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__6874__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._deref[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._deref["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6874__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__6874__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__6874__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._meta[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._meta["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._with_meta[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6874__auto__.call(null, o, meta);
    } else {
      var m__6874__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__6874__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args8444 = [];
  var len__7279__auto___8447 = arguments.length;
  var i__7280__auto___8448 = 0;
  while (true) {
    if (i__7280__auto___8448 < len__7279__auto___8447) {
      args8444.push(arguments[i__7280__auto___8448]);
      var G__8449 = i__7280__auto___8448 + 1;
      i__7280__auto___8448 = G__8449;
      continue;
    } else {
    }
    break;
  }
  var G__8446 = args8444.length;
  switch(G__8446) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8444.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6874__auto__.call(null, coll, f);
    } else {
      var m__6874__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__6874__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6874__auto__.call(null, coll, f, start);
    } else {
      var m__6874__auto____$1 = cljs.core._reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__6874__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._kv_reduce[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6874__auto__.call(null, coll, f, init);
    } else {
      var m__6874__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__6874__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._equiv[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__6874__auto__.call(null, o, other);
    } else {
      var m__6874__auto____$1 = cljs.core._equiv["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__6874__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._hash[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._hash["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._seq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto__.call(null, o);
    } else {
      var m__6874__auto____$1 = cljs.core._seq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__6874__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._rseq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._rseq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._sorted_seq[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6874__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__6874__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6874__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__6874__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._entry_key[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6874__auto__.call(null, coll, entry);
    } else {
      var m__6874__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__6874__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._comparator[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._comparator["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__6873__auto__ = writer == null ? null : writer;
    var m__6874__auto__ = cljs.core._write[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6874__auto__.call(null, writer, s);
    } else {
      var m__6874__auto____$1 = cljs.core._write["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__6874__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__6873__auto__ = writer == null ? null : writer;
    var m__6874__auto__ = cljs.core._flush[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__6874__auto__.call(null, writer);
    } else {
      var m__6874__auto____$1 = cljs.core._flush["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__6874__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._pr_writer[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6874__auto__.call(null, o, writer, opts);
    } else {
      var m__6874__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__6874__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._notify_watches[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6874__auto__.call(null, this$, oldval, newval);
    } else {
      var m__6874__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__6874__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._add_watch[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6874__auto__.call(null, this$, key, f);
    } else {
      var m__6874__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__6874__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core._remove_watch[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6874__auto__.call(null, this$, key);
    } else {
      var m__6874__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__6874__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._as_transient[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6874__auto__.call(null, tcoll, val);
    } else {
      var m__6874__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__6874__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto__.call(null, tcoll);
    } else {
      var m__6874__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6874__auto__.call(null, tcoll, key, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__6874__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6874__auto__.call(null, tcoll, key);
    } else {
      var m__6874__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__6874__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6874__auto__.call(null, tcoll, n, val);
    } else {
      var m__6874__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__6874__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto__.call(null, tcoll);
    } else {
      var m__6874__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__6874__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__6873__auto__ = tcoll == null ? null : tcoll;
    var m__6874__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6874__auto__.call(null, tcoll, v);
    } else {
      var m__6874__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__6874__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._compare[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__6874__auto__.call(null, x, y);
    } else {
      var m__6874__auto____$1 = cljs.core._compare["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__6874__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._drop_first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_first[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_rest[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._chunked_next[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._name[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._name["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._namespace[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._namespace["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto__.call(null, o, new_value);
    } else {
      var m__6874__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args8451 = [];
  var len__7279__auto___8454 = arguments.length;
  var i__7280__auto___8455 = 0;
  while (true) {
    if (i__7280__auto___8455 < len__7279__auto___8454) {
      args8451.push(arguments[i__7280__auto___8455]);
      var G__8456 = i__7280__auto___8455 + 1;
      i__7280__auto___8455 = G__8456;
      continue;
    } else {
    }
    break;
  }
  var G__8453 = args8451.length;
  switch(G__8453) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8451.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__6874__auto__.call(null, o, f);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__6874__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6874__auto__.call(null, o, f, a);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__6874__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6874__auto__.call(null, o, f, a, b);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__6874__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6874__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__6874__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__6874__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__6873__auto__ = o == null ? null : o;
    var m__6874__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto__.call(null, o, new_value);
    } else {
      var m__6874__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__6874__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__6873__auto__ = coll == null ? null : coll;
    var m__6874__auto__ = cljs.core._iterator[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto__.call(null, coll);
    } else {
      var m__6874__auto____$1 = cljs.core._iterator["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__6874__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__8458 = i + 2;
        var G__8459 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__8458;
        h1 = G__8459;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__8462 = i + 1;
          var G__8463 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__8462;
          hash = G__8463;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__8471 = o;
        switch(G__8471) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = cljs.core.not(a.ns);
      if (and__6198__auto__) {
        return b.ns;
      } else {
        return and__6198__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__8479 = a.ns;
            var G__8480 = b.ns;
            return goog.array.defaultCompare(G__8479, G__8480);
          }();
          if (0 === nsc) {
            var G__8481 = a.name;
            var G__8482 = b.name;
            return goog.array.defaultCompare(G__8481, G__8482);
          } else {
            return nsc;
          }
        }
      } else {
        var G__8483 = a.name;
        var G__8484 = b.name;
        return goog.array.defaultCompare(G__8483, G__8484);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__8486 = null;
  var G__8486__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__8486__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__8486 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8486__2.call(this, self__, coll);
      case 3:
        return G__8486__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8486.cljs$core$IFn$_invoke$arity$2 = G__8486__2;
  G__8486.cljs$core$IFn$_invoke$arity$3 = G__8486__3;
  return G__8486;
}();
cljs.core.Symbol.prototype.apply = function(self__, args8485) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8485)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__6645__auto__ = self__._hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args8487 = [];
  var len__7279__auto___8490 = arguments.length;
  var i__7280__auto___8491 = 0;
  while (true) {
    if (i__7280__auto___8491 < len__7279__auto___8490) {
      args8487.push(arguments[i__7280__auto___8491]);
      var G__8492 = i__7280__auto___8491 + 1;
      i__7280__auto___8491 = G__8492;
      continue;
    } else {
    }
    break;
  }
  var G__8489 = args8487.length;
  switch(G__8489) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8487.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__8495 = this$__$1.sym;
    var G__8496 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__8495, G__8496) : cljs.core._EQ_.call(null, G__8495, G__8496);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__8541 = null;
  var G__8541__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__8541__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__8541__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__8541__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__8541__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__8541__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__8541__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__8541__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__8541__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__8541__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__8541__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__8541__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__8541__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__8541__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__8541__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__8541__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__8541__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__8541__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__8541__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__8541__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__8541__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__8541__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__8497 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__8498 = a;
    var G__8499 = b;
    var G__8500 = c;
    var G__8501 = d;
    var G__8502 = e;
    var G__8503 = f;
    var G__8504 = g;
    var G__8505 = h;
    var G__8506 = i;
    var G__8507 = j;
    var G__8508 = k;
    var G__8509 = l;
    var G__8510 = m;
    var G__8511 = n;
    var G__8512 = o;
    var G__8513 = p;
    var G__8514 = q;
    var G__8515 = r;
    var G__8516 = s;
    var G__8517 = t;
    var G__8518 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8497, G__8498, G__8499, G__8500, G__8501, G__8502, G__8503, G__8504, G__8505, G__8506, G__8507, G__8508, G__8509, G__8510, G__8511, G__8512, G__8513, G__8514, G__8515, G__8516, G__8517, G__8518) : cljs.core.apply.call(null, G__8497, G__8498, G__8499, G__8500, G__8501, G__8502, G__8503, G__8504, G__8505, G__8506, G__8507, G__8508, G__8509, G__8510, G__8511, G__8512, G__8513, G__8514, G__8515, 
    G__8516, G__8517, G__8518);
  };
  G__8541 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__8541__1.call(this, self__);
      case 2:
        return G__8541__2.call(this, self__, a);
      case 3:
        return G__8541__3.call(this, self__, a, b);
      case 4:
        return G__8541__4.call(this, self__, a, b, c);
      case 5:
        return G__8541__5.call(this, self__, a, b, c, d);
      case 6:
        return G__8541__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__8541__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__8541__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__8541__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__8541__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__8541__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__8541__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__8541__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__8541__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__8541__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__8541__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__8541__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__8541__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__8541__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__8541__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__8541__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__8541__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8541.cljs$core$IFn$_invoke$arity$1 = G__8541__1;
  G__8541.cljs$core$IFn$_invoke$arity$2 = G__8541__2;
  G__8541.cljs$core$IFn$_invoke$arity$3 = G__8541__3;
  G__8541.cljs$core$IFn$_invoke$arity$4 = G__8541__4;
  G__8541.cljs$core$IFn$_invoke$arity$5 = G__8541__5;
  G__8541.cljs$core$IFn$_invoke$arity$6 = G__8541__6;
  G__8541.cljs$core$IFn$_invoke$arity$7 = G__8541__7;
  G__8541.cljs$core$IFn$_invoke$arity$8 = G__8541__8;
  G__8541.cljs$core$IFn$_invoke$arity$9 = G__8541__9;
  G__8541.cljs$core$IFn$_invoke$arity$10 = G__8541__10;
  G__8541.cljs$core$IFn$_invoke$arity$11 = G__8541__11;
  G__8541.cljs$core$IFn$_invoke$arity$12 = G__8541__12;
  G__8541.cljs$core$IFn$_invoke$arity$13 = G__8541__13;
  G__8541.cljs$core$IFn$_invoke$arity$14 = G__8541__14;
  G__8541.cljs$core$IFn$_invoke$arity$15 = G__8541__15;
  G__8541.cljs$core$IFn$_invoke$arity$16 = G__8541__16;
  G__8541.cljs$core$IFn$_invoke$arity$17 = G__8541__17;
  G__8541.cljs$core$IFn$_invoke$arity$18 = G__8541__18;
  G__8541.cljs$core$IFn$_invoke$arity$19 = G__8541__19;
  G__8541.cljs$core$IFn$_invoke$arity$20 = G__8541__20;
  G__8541.cljs$core$IFn$_invoke$arity$21 = G__8541__21;
  G__8541.cljs$core$IFn$_invoke$arity$22 = G__8541__22;
  return G__8541;
}();
cljs.core.Var.prototype.apply = function(self__, args8494) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8494)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__8519 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__8520 = a;
  var G__8521 = b;
  var G__8522 = c;
  var G__8523 = d;
  var G__8524 = e;
  var G__8525 = f;
  var G__8526 = g;
  var G__8527 = h;
  var G__8528 = i;
  var G__8529 = j;
  var G__8530 = k;
  var G__8531 = l;
  var G__8532 = m;
  var G__8533 = n;
  var G__8534 = o;
  var G__8535 = p;
  var G__8536 = q;
  var G__8537 = r;
  var G__8538 = s;
  var G__8539 = t;
  var G__8540 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8519, G__8520, G__8521, G__8522, G__8523, G__8524, G__8525, G__8526, G__8527, G__8528, G__8529, G__8530, G__8531, G__8532, G__8533, G__8534, G__8535, G__8536, G__8537, G__8538, G__8539, G__8540) : cljs.core.apply.call(null, G__8519, G__8520, G__8521, G__8522, G__8523, G__8524, G__8525, G__8526, G__8527, G__8528, G__8529, G__8530, G__8531, G__8532, G__8533, G__8534, G__8535, G__8536, G__8537, 
  G__8538, G__8539, G__8540);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args8554 = [];
  var len__7279__auto___8560 = arguments.length;
  var i__7280__auto___8561 = 0;
  while (true) {
    if (i__7280__auto___8561 < len__7279__auto___8560) {
      args8554.push(arguments[i__7280__auto___8561]);
      var G__8562 = i__7280__auto___8561 + 1;
      i__7280__auto___8561 = G__8562;
      continue;
    } else {
    }
    break;
  }
  var G__8559 = args8554.length;
  switch(G__8559) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8554.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__8564 = y;
        var G__8565 = cljs.core.first(more);
        var G__8566 = cljs.core.next(more);
        x = G__8564;
        y = G__8565;
        more = G__8566;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq8555) {
  var G__8556 = cljs.core.first(seq8555);
  var seq8555__$1 = cljs.core.next(seq8555);
  var G__8557 = cljs.core.first(seq8555__$1);
  var seq8555__$2 = cljs.core.next(seq8555__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__8556, G__8557, seq8555__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__8567 = n + 1;
      var G__8568 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__8569 = cljs.core.next(coll__$1);
      n = G__8567;
      hash_code = G__8568;
      coll__$1 = G__8569;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__8570 = n + 1;
      var G__8571 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__8572 = cljs.core.next(coll__$1);
      n = G__8570;
      hash_code = G__8571;
      coll__$1 = G__8572;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__8573 = this$__$1.valueOf();
    var G__8574 = other.valueOf();
    return goog.array.defaultCompare(G__8573, G__8574);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args8575 = [];
  var len__7279__auto___8584 = arguments.length;
  var i__7280__auto___8585 = 0;
  while (true) {
    if (i__7280__auto___8585 < len__7279__auto___8584) {
      args8575.push(arguments[i__7280__auto___8585]);
      var G__8586 = i__7280__auto___8585 + 1;
      i__7280__auto___8585 = G__8586;
      continue;
    } else {
    }
    break;
  }
  var G__8577 = args8575.length;
  switch(G__8577) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8575.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__8578 = val;
          var G__8579 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8578, G__8579) : f.call(null, G__8578, G__8579);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__8588 = nval;
          var G__8589 = n + 1;
          val = G__8588;
          n = G__8589;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8580 = val__$1;
        var G__8581 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8580, G__8581) : f.call(null, G__8580, G__8581);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8590 = nval;
        var G__8591 = n + 1;
        val__$1 = G__8590;
        n = G__8591;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8582 = val__$1;
        var G__8583 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8582, G__8583) : f.call(null, G__8582, G__8583);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8592 = nval;
        var G__8593 = n + 1;
        val__$1 = G__8592;
        n = G__8593;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args8594 = [];
  var len__7279__auto___8603 = arguments.length;
  var i__7280__auto___8604 = 0;
  while (true) {
    if (i__7280__auto___8604 < len__7279__auto___8603) {
      args8594.push(arguments[i__7280__auto___8604]);
      var G__8605 = i__7280__auto___8604 + 1;
      i__7280__auto___8604 = G__8605;
      continue;
    } else {
    }
    break;
  }
  var G__8596 = args8594.length;
  switch(G__8596) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8594.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__8597 = val;
          var G__8598 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8597, G__8598) : f.call(null, G__8597, G__8598);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__8607 = nval;
          var G__8608 = n + 1;
          val = G__8607;
          n = G__8608;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8599 = val__$1;
        var G__8600 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8599, G__8600) : f.call(null, G__8599, G__8600);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8609 = nval;
        var G__8610 = n + 1;
        val__$1 = G__8609;
        n = G__8610;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__8601 = val__$1;
        var G__8602 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8601, G__8602) : f.call(null, G__8601, G__8602);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8611 = nval;
        var G__8612 = n + 1;
        val__$1 = G__8611;
        n = G__8612;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args8617 = [];
  var len__7279__auto___8620 = arguments.length;
  var i__7280__auto___8621 = 0;
  while (true) {
    if (i__7280__auto___8621 < len__7279__auto___8620) {
      args8617.push(arguments[i__7280__auto___8621]);
      var G__8622 = i__7280__auto___8621 + 1;
      i__7280__auto___8621 = G__8622;
      continue;
    } else {
    }
    break;
  }
  var G__8619 = args8617.length;
  switch(G__8619) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8617.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__6541__auto__ = 0;
      var y__6542__auto__ = start + len;
      return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__8624 = idx + 1;
          idx = G__8624;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args8625 = [];
  var len__7279__auto___8628 = arguments.length;
  var i__7280__auto___8629 = 0;
  while (true) {
    if (i__7280__auto___8629 < len__7279__auto___8628) {
      args8625.push(arguments[i__7280__auto___8629]);
      var G__8630 = i__7280__auto___8629 + 1;
      i__7280__auto___8629 = G__8630;
      continue;
    } else {
    }
    break;
  }
  var G__8627 = args8625.length;
  switch(G__8627) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8625.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__6548__auto__ = len - 1;
      var y__6549__auto__ = start;
      return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__8632 = idx - 1;
          idx = G__8632;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__8633 = null;
  var G__8633__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__8633__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8633 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8633__1.call(this, x);
      case 2:
        return G__8633__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8633.cljs$core$IFn$_invoke$arity$1 = G__8633__1;
  G__8633.cljs$core$IFn$_invoke$arity$2 = G__8633__2;
  return G__8633;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__8634 = null;
  var G__8634__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__8634__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8634 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8634__1.call(this, x);
      case 2:
        return G__8634__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8634.cljs$core$IFn$_invoke$arity$1 = G__8634__1;
  G__8634.cljs$core$IFn$_invoke$arity$2 = G__8634__2;
  return G__8634;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__6541__auto__ = 0;
  var y__6542__auto__ = self__.arr.length - self__.i;
  return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args8635 = [];
  var len__7279__auto___8638 = arguments.length;
  var i__7280__auto___8639 = 0;
  while (true) {
    if (i__7280__auto___8639 < len__7279__auto___8638) {
      args8635.push(arguments[i__7280__auto___8639]);
      var G__8640 = i__7280__auto___8639 + 1;
      i__7280__auto___8639 = G__8640;
      continue;
    } else {
    }
    break;
  }
  var G__8637 = args8635.length;
  switch(G__8637) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8635.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args8642 = [];
  var len__7279__auto___8645 = arguments.length;
  var i__7280__auto___8646 = 0;
  while (true) {
    if (i__7280__auto___8646 < len__7279__auto___8645) {
      args8642.push(arguments[i__7280__auto___8646]);
      var G__8647 = i__7280__auto___8646 + 1;
      i__7280__auto___8646 = G__8647;
      continue;
    } else {
    }
    break;
  }
  var G__8644 = args8642.length;
  switch(G__8644) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8642.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__8651 = null;
  var G__8651__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__8651__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8651 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8651__1.call(this, x);
      case 2:
        return G__8651__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8651.cljs$core$IFn$_invoke$arity$1 = G__8651__1;
  G__8651.cljs$core$IFn$_invoke$arity$2 = G__8651__2;
  return G__8651;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__8652 = null;
  var G__8652__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__8652__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8652 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8652__1.call(this, x);
      case 2:
        return G__8652__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8652.cljs$core$IFn$_invoke$arity$1 = G__8652__1;
  G__8652.cljs$core$IFn$_invoke$arity$2 = G__8652__2;
  return G__8652;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__8649 = cljs.core.List.EMPTY;
  var G__8650 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__8649, G__8650) : cljs.core.with_meta.call(null, G__8649, G__8650);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__8653 = sn;
      s = G__8653;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args8654 = [];
  var len__7279__auto___8660 = arguments.length;
  var i__7280__auto___8661 = 0;
  while (true) {
    if (i__7280__auto___8661 < len__7279__auto___8660) {
      args8654.push(arguments[i__7280__auto___8661]);
      var G__8662 = i__7280__auto___8661 + 1;
      i__7280__auto___8661 = G__8662;
      continue;
    } else {
    }
    break;
  }
  var G__8659 = args8654.length;
  switch(G__8659) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8654.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__8664 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__8665 = cljs.core.first(xs);
      var G__8666 = cljs.core.next(xs);
      coll = G__8664;
      x = G__8665;
      xs = G__8666;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq8655) {
  var G__8656 = cljs.core.first(seq8655);
  var seq8655__$1 = cljs.core.next(seq8655);
  var G__8657 = cljs.core.first(seq8655__$1);
  var seq8655__$2 = cljs.core.next(seq8655__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__8656, G__8657, seq8655__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__8667 = cljs.core.next(s);
      var G__8668 = acc + 1;
      s = G__8667;
      acc = G__8668;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args8673 = [];
  var len__7279__auto___8676 = arguments.length;
  var i__7280__auto___8677 = 0;
  while (true) {
    if (i__7280__auto___8677 < len__7279__auto___8676) {
      args8673.push(arguments[i__7280__auto___8677]);
      var G__8678 = i__7280__auto___8677 + 1;
      i__7280__auto___8677 = G__8678;
      continue;
    } else {
    }
    break;
  }
  var G__8675 = args8673.length;
  switch(G__8675) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8673.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__8680 = cljs.core.next(coll);
            var G__8681 = n - 1;
            coll = G__8680;
            n = G__8681;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__8682 = cljs.core.next(coll);
            var G__8683 = n - 1;
            var G__8684 = not_found;
            coll = G__8682;
            n = G__8683;
            not_found = G__8684;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args8685 = [];
  var len__7279__auto___8692 = arguments.length;
  var i__7280__auto___8693 = 0;
  while (true) {
    if (i__7280__auto___8693 < len__7279__auto___8692) {
      args8685.push(arguments[i__7280__auto___8693]);
      var G__8694 = i__7280__auto___8693 + 1;
      i__7280__auto___8693 = G__8694;
      continue;
    } else {
    }
    break;
  }
  var G__8687 = args8685.length;
  switch(G__8687) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8685.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__8696 = n__$1 - 1;
      var G__8697 = cljs.core.rest(xs);
      n__$1 = G__8696;
      xs = G__8697;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args8698 = [];
  var len__7279__auto___8703 = arguments.length;
  var i__7280__auto___8704 = 0;
  while (true) {
    if (i__7280__auto___8704 < len__7279__auto___8703) {
      args8698.push(arguments[i__7280__auto___8704]);
      var G__8705 = i__7280__auto___8704 + 1;
      i__7280__auto___8704 = G__8705;
      continue;
    } else {
    }
    break;
  }
  var G__8700 = args8698.length;
  switch(G__8700) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8698.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args8707 = [];
  var len__7279__auto___8714 = arguments.length;
  var i__7280__auto___8715 = 0;
  while (true) {
    if (i__7280__auto___8715 < len__7279__auto___8714) {
      args8707.push(arguments[i__7280__auto___8715]);
      var G__8716 = i__7280__auto___8715 + 1;
      i__7280__auto___8715 = G__8716;
      continue;
    } else {
    }
    break;
  }
  var G__8713 = args8707.length;
  switch(G__8713) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8707.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__8718 = ret;
      var G__8719 = cljs.core.first(kvs);
      var G__8720 = cljs.core.second(kvs);
      var G__8721 = cljs.core.nnext(kvs);
      coll = G__8718;
      k = G__8719;
      v = G__8720;
      kvs = G__8721;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq8708) {
  var G__8709 = cljs.core.first(seq8708);
  var seq8708__$1 = cljs.core.next(seq8708);
  var G__8710 = cljs.core.first(seq8708__$1);
  var seq8708__$2 = cljs.core.next(seq8708__$1);
  var G__8711 = cljs.core.first(seq8708__$2);
  var seq8708__$3 = cljs.core.next(seq8708__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__8709, G__8710, G__8711, seq8708__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args8722 = [];
  var len__7279__auto___8728 = arguments.length;
  var i__7280__auto___8729 = 0;
  while (true) {
    if (i__7280__auto___8729 < len__7279__auto___8728) {
      args8722.push(arguments[i__7280__auto___8729]);
      var G__8730 = i__7280__auto___8729 + 1;
      i__7280__auto___8729 = G__8730;
      continue;
    } else {
    }
    break;
  }
  var G__8727 = args8722.length;
  switch(G__8727) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8722.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__8732 = ret;
        var G__8733 = cljs.core.first(ks);
        var G__8734 = cljs.core.next(ks);
        coll = G__8732;
        k = G__8733;
        ks = G__8734;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq8723) {
  var G__8724 = cljs.core.first(seq8723);
  var seq8723__$1 = cljs.core.next(seq8723);
  var G__8725 = cljs.core.first(seq8723__$1);
  var seq8723__$2 = cljs.core.next(seq8723__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__8724, G__8725, seq8723__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__6210__auto__ = goog.isFunction(f);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__8740 = null;
  var G__8740__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__8740__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__8740__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__8740__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__8740__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__8740__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__8740__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__8740__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__8740__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__8740__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__8740__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__8740__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__8740__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__8740__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__8740__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__8740__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__8740__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__8740__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__8740__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__8740__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__8740__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__8740__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__8740 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__8740__1.call(this, self__);
      case 2:
        return G__8740__2.call(this, self__, a);
      case 3:
        return G__8740__3.call(this, self__, a, b);
      case 4:
        return G__8740__4.call(this, self__, a, b, c);
      case 5:
        return G__8740__5.call(this, self__, a, b, c, d);
      case 6:
        return G__8740__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__8740__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__8740__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__8740__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__8740__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__8740__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__8740__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__8740__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__8740__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__8740__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__8740__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__8740__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__8740__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__8740__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__8740__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__8740__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__8740__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8740.cljs$core$IFn$_invoke$arity$1 = G__8740__1;
  G__8740.cljs$core$IFn$_invoke$arity$2 = G__8740__2;
  G__8740.cljs$core$IFn$_invoke$arity$3 = G__8740__3;
  G__8740.cljs$core$IFn$_invoke$arity$4 = G__8740__4;
  G__8740.cljs$core$IFn$_invoke$arity$5 = G__8740__5;
  G__8740.cljs$core$IFn$_invoke$arity$6 = G__8740__6;
  G__8740.cljs$core$IFn$_invoke$arity$7 = G__8740__7;
  G__8740.cljs$core$IFn$_invoke$arity$8 = G__8740__8;
  G__8740.cljs$core$IFn$_invoke$arity$9 = G__8740__9;
  G__8740.cljs$core$IFn$_invoke$arity$10 = G__8740__10;
  G__8740.cljs$core$IFn$_invoke$arity$11 = G__8740__11;
  G__8740.cljs$core$IFn$_invoke$arity$12 = G__8740__12;
  G__8740.cljs$core$IFn$_invoke$arity$13 = G__8740__13;
  G__8740.cljs$core$IFn$_invoke$arity$14 = G__8740__14;
  G__8740.cljs$core$IFn$_invoke$arity$15 = G__8740__15;
  G__8740.cljs$core$IFn$_invoke$arity$16 = G__8740__16;
  G__8740.cljs$core$IFn$_invoke$arity$17 = G__8740__17;
  G__8740.cljs$core$IFn$_invoke$arity$18 = G__8740__18;
  G__8740.cljs$core$IFn$_invoke$arity$19 = G__8740__19;
  G__8740.cljs$core$IFn$_invoke$arity$20 = G__8740__20;
  G__8740.cljs$core$IFn$_invoke$arity$21 = G__8740__21;
  G__8740.cljs$core$IFn$_invoke$arity$22 = G__8740__22;
  return G__8740;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args8739) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8739)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__6198__auto__ = !(o == null);
    if (and__6198__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__6198__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args8745 = [];
  var len__7279__auto___8751 = arguments.length;
  var i__7280__auto___8752 = 0;
  while (true) {
    if (i__7280__auto___8752 < len__7279__auto___8751) {
      args8745.push(arguments[i__7280__auto___8752]);
      var G__8753 = i__7280__auto___8752 + 1;
      i__7280__auto___8752 = G__8753;
      continue;
    } else {
    }
    break;
  }
  var G__8750 = args8745.length;
  switch(G__8750) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8745.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__8755 = ret;
        var G__8756 = cljs.core.first(ks);
        var G__8757 = cljs.core.next(ks);
        coll = G__8755;
        k = G__8756;
        ks = G__8757;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq8746) {
  var G__8747 = cljs.core.first(seq8746);
  var seq8746__$1 = cljs.core.next(seq8746);
  var G__8748 = cljs.core.first(seq8746__$1);
  var seq8746__$2 = cljs.core.next(seq8746__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__8747, G__8748, seq8746__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args8778 = [];
  var len__7279__auto___8784 = arguments.length;
  var i__7280__auto___8785 = 0;
  while (true) {
    if (i__7280__auto___8785 < len__7279__auto___8784) {
      args8778.push(arguments[i__7280__auto___8785]);
      var G__8786 = i__7280__auto___8785 + 1;
      i__7280__auto___8785 = G__8786;
      continue;
    } else {
    }
    break;
  }
  var G__8781 = args8778.length;
  switch(G__8781) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8778.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__7298__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq8779) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8779));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__8790_8792 = obj;
  var G__8791_8793 = function(G__8790_8792, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__8790_8792, keys);
  goog.object.forEach(G__8790_8792, G__8791_8793);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__8794 = i__$1 + 1;
      var G__8795 = j__$1 + 1;
      var G__8796 = len__$1 - 1;
      i__$1 = G__8794;
      j__$1 = G__8795;
      len__$1 = G__8796;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__8797 = i__$1 - 1;
      var G__8798 = j__$1 - 1;
      var G__8799 = len__$1 - 1;
      i__$1 = G__8797;
      j__$1 = G__8798;
      len__$1 = G__8799;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__6210__auto__ = cljs.core.fn_QMARK_(f);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args8810 = [];
  var len__7279__auto___8816 = arguments.length;
  var i__7280__auto___8817 = 0;
  while (true) {
    if (i__7280__auto___8817 < len__7279__auto___8816) {
      args8810.push(arguments[i__7280__auto___8817]);
      var G__8818 = i__7280__auto___8817 + 1;
      i__7280__auto___8817 = G__8818;
      continue;
    } else {
    }
    break;
  }
  var G__8815 = args8810.length;
  switch(G__8815) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8810.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__8820 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__8821 = etc;
          s = G__8820;
          xs = G__8821;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq8811) {
  var G__8812 = cljs.core.first(seq8811);
  var seq8811__$1 = cljs.core.next(seq8811);
  var G__8813 = cljs.core.first(seq8811__$1);
  var seq8811__$2 = cljs.core.next(seq8811__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__8812, G__8813, seq8811__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args8824 = [];
  var len__7279__auto___8827 = arguments.length;
  var i__7280__auto___8828 = 0;
  while (true) {
    if (i__7280__auto___8828 < len__7279__auto___8827) {
      args8824.push(arguments[i__7280__auto___8828]);
      var G__8829 = i__7280__auto___8828 + 1;
      i__7280__auto___8828 = G__8829;
      continue;
    } else {
    }
    break;
  }
  var G__8826 = args8824.length;
  switch(G__8826) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8824.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__8831 = xs;
      var G__8832 = ys;
      var G__8833 = len;
      var G__8834 = n + 1;
      xs = G__8831;
      ys = G__8832;
      len = G__8833;
      n = G__8834;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args8835 = [];
  var len__7279__auto___8840 = arguments.length;
  var i__7280__auto___8841 = 0;
  while (true) {
    if (i__7280__auto___8841 < len__7279__auto___8840) {
      args8835.push(arguments[i__7280__auto___8841]);
      var G__8842 = i__7280__auto___8841 + 1;
      i__7280__auto___8841 = G__8842;
      continue;
    } else {
    }
    break;
  }
  var G__8837 = args8835.length;
  switch(G__8837) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8835.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__8838_8844 = a;
    var G__8839_8845 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__8838_8844, G__8839_8845);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args8846 = [];
  var len__7279__auto___8849 = arguments.length;
  var i__7280__auto___8850 = 0;
  while (true) {
    if (i__7280__auto___8850 < len__7279__auto___8849) {
      args8846.push(arguments[i__7280__auto___8850]);
      var G__8851 = i__7280__auto___8850 + 1;
      i__7280__auto___8850 = G__8851;
      continue;
    } else {
    }
    break;
  }
  var G__8848 = args8846.length;
  switch(G__8848) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8846.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args8853 = [];
  var len__7279__auto___8861 = arguments.length;
  var i__7280__auto___8862 = 0;
  while (true) {
    if (i__7280__auto___8862 < len__7279__auto___8861) {
      args8853.push(arguments[i__7280__auto___8862]);
      var G__8863 = i__7280__auto___8862 + 1;
      i__7280__auto___8862 = G__8863;
      continue;
    } else {
    }
    break;
  }
  var G__8855 = args8853.length;
  switch(G__8855) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8853.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__8856 = f;
    var G__8857 = cljs.core.first(s);
    var G__8858 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8856, G__8857, G__8858) : cljs.core.reduce.call(null, G__8856, G__8857, G__8858);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__8859 = val__$1;
        var G__8860 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8859, G__8860) : f.call(null, G__8859, G__8860);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__8865 = nval;
        var G__8866 = cljs.core.next(coll__$1);
        val__$1 = G__8865;
        coll__$1 = G__8866;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args8867 = [];
  var len__7279__auto___8872 = arguments.length;
  var i__7280__auto___8873 = 0;
  while (true) {
    if (i__7280__auto___8873 < len__7279__auto___8872) {
      args8867.push(arguments[i__7280__auto___8873]);
      var G__8874 = i__7280__auto___8873 + 1;
      i__7280__auto___8873 = G__8874;
      continue;
    } else {
    }
    break;
  }
  var G__8869 = args8867.length;
  switch(G__8869) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8867.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args8876 = [];
  var len__7279__auto___8879 = arguments.length;
  var i__7280__auto___8880 = 0;
  while (true) {
    if (i__7280__auto___8880 < len__7279__auto___8879) {
      args8876.push(arguments[i__7280__auto___8880]);
      var G__8881 = i__7280__auto___8880 + 1;
      i__7280__auto___8880 = G__8881;
      continue;
    } else {
    }
    break;
  }
  var G__8878 = args8876.length;
  switch(G__8878) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8876.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__8883 = null;
    var G__8883__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__8883__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__8883__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__8883 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__8883__0.call(this);
        case 1:
          return G__8883__1.call(this, x);
        case 2:
          return G__8883__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8883.cljs$core$IFn$_invoke$arity$0 = G__8883__0;
    G__8883.cljs$core$IFn$_invoke$arity$1 = G__8883__1;
    G__8883.cljs$core$IFn$_invoke$arity$2 = G__8883__2;
    return G__8883;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args8884 = [];
  var len__7279__auto___8887 = arguments.length;
  var i__7280__auto___8888 = 0;
  while (true) {
    if (i__7280__auto___8888 < len__7279__auto___8887) {
      args8884.push(arguments[i__7280__auto___8888]);
      var G__8889 = i__7280__auto___8888 + 1;
      i__7280__auto___8888 = G__8889;
      continue;
    } else {
    }
    break;
  }
  var G__8886 = args8884.length;
  switch(G__8886) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8884.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args8891 = [];
  var len__7279__auto___8897 = arguments.length;
  var i__7280__auto___8898 = 0;
  while (true) {
    if (i__7280__auto___8898 < len__7279__auto___8897) {
      args8891.push(arguments[i__7280__auto___8898]);
      var G__8899 = i__7280__auto___8898 + 1;
      i__7280__auto___8898 = G__8899;
      continue;
    } else {
    }
    break;
  }
  var G__8896 = args8891.length;
  switch(G__8896) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8891.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq8892) {
  var G__8893 = cljs.core.first(seq8892);
  var seq8892__$1 = cljs.core.next(seq8892);
  var G__8894 = cljs.core.first(seq8892__$1);
  var seq8892__$2 = cljs.core.next(seq8892__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__8893, G__8894, seq8892__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args8901 = [];
  var len__7279__auto___8907 = arguments.length;
  var i__7280__auto___8908 = 0;
  while (true) {
    if (i__7280__auto___8908 < len__7279__auto___8907) {
      args8901.push(arguments[i__7280__auto___8908]);
      var G__8909 = i__7280__auto___8908 + 1;
      i__7280__auto___8908 = G__8909;
      continue;
    } else {
    }
    break;
  }
  var G__8906 = args8901.length;
  switch(G__8906) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8901.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq8902) {
  var G__8903 = cljs.core.first(seq8902);
  var seq8902__$1 = cljs.core.next(seq8902);
  var G__8904 = cljs.core.first(seq8902__$1);
  var seq8902__$2 = cljs.core.next(seq8902__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__8903, G__8904, seq8902__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args8911 = [];
  var len__7279__auto___8917 = arguments.length;
  var i__7280__auto___8918 = 0;
  while (true) {
    if (i__7280__auto___8918 < len__7279__auto___8917) {
      args8911.push(arguments[i__7280__auto___8918]);
      var G__8919 = i__7280__auto___8918 + 1;
      i__7280__auto___8918 = G__8919;
      continue;
    } else {
    }
    break;
  }
  var G__8916 = args8911.length;
  switch(G__8916) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8911.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq8912) {
  var G__8913 = cljs.core.first(seq8912);
  var seq8912__$1 = cljs.core.next(seq8912);
  var G__8914 = cljs.core.first(seq8912__$1);
  var seq8912__$2 = cljs.core.next(seq8912__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__8913, G__8914, seq8912__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args8921 = [];
  var len__7279__auto___8927 = arguments.length;
  var i__7280__auto___8928 = 0;
  while (true) {
    if (i__7280__auto___8928 < len__7279__auto___8927) {
      args8921.push(arguments[i__7280__auto___8928]);
      var G__8929 = i__7280__auto___8928 + 1;
      i__7280__auto___8928 = G__8929;
      continue;
    } else {
    }
    break;
  }
  var G__8926 = args8921.length;
  switch(G__8926) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8921.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq8922) {
  var G__8923 = cljs.core.first(seq8922);
  var seq8922__$1 = cljs.core.next(seq8922);
  var G__8924 = cljs.core.first(seq8922__$1);
  var seq8922__$2 = cljs.core.next(seq8922__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__8923, G__8924, seq8922__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args8931 = [];
  var len__7279__auto___8937 = arguments.length;
  var i__7280__auto___8938 = 0;
  while (true) {
    if (i__7280__auto___8938 < len__7279__auto___8937) {
      args8931.push(arguments[i__7280__auto___8938]);
      var G__8939 = i__7280__auto___8938 + 1;
      i__7280__auto___8938 = G__8939;
      continue;
    } else {
    }
    break;
  }
  var G__8936 = args8931.length;
  switch(G__8936) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8931.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__8941 = y;
        var G__8942 = cljs.core.first(more);
        var G__8943 = cljs.core.next(more);
        x = G__8941;
        y = G__8942;
        more = G__8943;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq8932) {
  var G__8933 = cljs.core.first(seq8932);
  var seq8932__$1 = cljs.core.next(seq8932);
  var G__8934 = cljs.core.first(seq8932__$1);
  var seq8932__$2 = cljs.core.next(seq8932__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__8933, G__8934, seq8932__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args8944 = [];
  var len__7279__auto___8950 = arguments.length;
  var i__7280__auto___8951 = 0;
  while (true) {
    if (i__7280__auto___8951 < len__7279__auto___8950) {
      args8944.push(arguments[i__7280__auto___8951]);
      var G__8952 = i__7280__auto___8951 + 1;
      i__7280__auto___8951 = G__8952;
      continue;
    } else {
    }
    break;
  }
  var G__8949 = args8944.length;
  switch(G__8949) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8944.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__8954 = y;
        var G__8955 = cljs.core.first(more);
        var G__8956 = cljs.core.next(more);
        x = G__8954;
        y = G__8955;
        more = G__8956;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq8945) {
  var G__8946 = cljs.core.first(seq8945);
  var seq8945__$1 = cljs.core.next(seq8945);
  var G__8947 = cljs.core.first(seq8945__$1);
  var seq8945__$2 = cljs.core.next(seq8945__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__8946, G__8947, seq8945__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args8957 = [];
  var len__7279__auto___8963 = arguments.length;
  var i__7280__auto___8964 = 0;
  while (true) {
    if (i__7280__auto___8964 < len__7279__auto___8963) {
      args8957.push(arguments[i__7280__auto___8964]);
      var G__8965 = i__7280__auto___8964 + 1;
      i__7280__auto___8964 = G__8965;
      continue;
    } else {
    }
    break;
  }
  var G__8962 = args8957.length;
  switch(G__8962) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8957.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__8967 = y;
        var G__8968 = cljs.core.first(more);
        var G__8969 = cljs.core.next(more);
        x = G__8967;
        y = G__8968;
        more = G__8969;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq8958) {
  var G__8959 = cljs.core.first(seq8958);
  var seq8958__$1 = cljs.core.next(seq8958);
  var G__8960 = cljs.core.first(seq8958__$1);
  var seq8958__$2 = cljs.core.next(seq8958__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__8959, G__8960, seq8958__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args8970 = [];
  var len__7279__auto___8976 = arguments.length;
  var i__7280__auto___8977 = 0;
  while (true) {
    if (i__7280__auto___8977 < len__7279__auto___8976) {
      args8970.push(arguments[i__7280__auto___8977]);
      var G__8978 = i__7280__auto___8977 + 1;
      i__7280__auto___8977 = G__8978;
      continue;
    } else {
    }
    break;
  }
  var G__8975 = args8970.length;
  switch(G__8975) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8970.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__8980 = y;
        var G__8981 = cljs.core.first(more);
        var G__8982 = cljs.core.next(more);
        x = G__8980;
        y = G__8981;
        more = G__8982;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq8971) {
  var G__8972 = cljs.core.first(seq8971);
  var seq8971__$1 = cljs.core.next(seq8971);
  var G__8973 = cljs.core.first(seq8971__$1);
  var seq8971__$2 = cljs.core.next(seq8971__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__8972, G__8973, seq8971__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args8983 = [];
  var len__7279__auto___8989 = arguments.length;
  var i__7280__auto___8990 = 0;
  while (true) {
    if (i__7280__auto___8990 < len__7279__auto___8989) {
      args8983.push(arguments[i__7280__auto___8990]);
      var G__8991 = i__7280__auto___8990 + 1;
      i__7280__auto___8990 = G__8991;
      continue;
    } else {
    }
    break;
  }
  var G__8988 = args8983.length;
  switch(G__8988) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8983.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__6541__auto__ = x;
  var y__6542__auto__ = y;
  return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__6541__auto__ = x;
    var y__6542__auto__ = y;
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq8984) {
  var G__8985 = cljs.core.first(seq8984);
  var seq8984__$1 = cljs.core.next(seq8984);
  var G__8986 = cljs.core.first(seq8984__$1);
  var seq8984__$2 = cljs.core.next(seq8984__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__8985, G__8986, seq8984__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args8993 = [];
  var len__7279__auto___8999 = arguments.length;
  var i__7280__auto___9000 = 0;
  while (true) {
    if (i__7280__auto___9000 < len__7279__auto___8999) {
      args8993.push(arguments[i__7280__auto___9000]);
      var G__9001 = i__7280__auto___9000 + 1;
      i__7280__auto___9000 = G__9001;
      continue;
    } else {
    }
    break;
  }
  var G__8998 = args8993.length;
  switch(G__8998) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args8993.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__6548__auto__ = x;
  var y__6549__auto__ = y;
  return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__6548__auto__ = x;
    var y__6549__auto__ = y;
    return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq8994) {
  var G__8995 = cljs.core.first(seq8994);
  var seq8994__$1 = cljs.core.next(seq8994);
  var G__8996 = cljs.core.first(seq8994__$1);
  var seq8994__$2 = cljs.core.next(seq8994__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__8995, G__8996, seq8994__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args9003 = [];
  var len__7279__auto___9009 = arguments.length;
  var i__7280__auto___9010 = 0;
  while (true) {
    if (i__7280__auto___9010 < len__7279__auto___9009) {
      args9003.push(arguments[i__7280__auto___9010]);
      var G__9011 = i__7280__auto___9010 + 1;
      i__7280__auto___9010 = G__9011;
      continue;
    } else {
    }
    break;
  }
  var G__9008 = args9003.length;
  switch(G__9008) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9003.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq9004) {
  var G__9005 = cljs.core.first(seq9004);
  var seq9004__$1 = cljs.core.next(seq9004);
  var G__9006 = cljs.core.first(seq9004__$1);
  var seq9004__$2 = cljs.core.next(seq9004__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__9005, G__9006, seq9004__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args9013 = [];
  var len__7279__auto___9019 = arguments.length;
  var i__7280__auto___9020 = 0;
  while (true) {
    if (i__7280__auto___9020 < len__7279__auto___9019) {
      args9013.push(arguments[i__7280__auto___9020]);
      var G__9021 = i__7280__auto___9020 + 1;
      i__7280__auto___9020 = G__9021;
      continue;
    } else {
    }
    break;
  }
  var G__9018 = args9013.length;
  switch(G__9018) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9013.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq9014) {
  var G__9015 = cljs.core.first(seq9014);
  var seq9014__$1 = cljs.core.next(seq9014);
  var G__9016 = cljs.core.first(seq9014__$1);
  var seq9014__$2 = cljs.core.next(seq9014__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__9015, G__9016, seq9014__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args9023 = [];
  var len__7279__auto___9029 = arguments.length;
  var i__7280__auto___9030 = 0;
  while (true) {
    if (i__7280__auto___9030 < len__7279__auto___9029) {
      args9023.push(arguments[i__7280__auto___9030]);
      var G__9031 = i__7280__auto___9030 + 1;
      i__7280__auto___9030 = G__9031;
      continue;
    } else {
    }
    break;
  }
  var G__9028 = args9023.length;
  switch(G__9028) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9023.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq9024) {
  var G__9025 = cljs.core.first(seq9024);
  var seq9024__$1 = cljs.core.next(seq9024);
  var G__9026 = cljs.core.first(seq9024__$1);
  var seq9024__$2 = cljs.core.next(seq9024__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__9025, G__9026, seq9024__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args9033 = [];
  var len__7279__auto___9039 = arguments.length;
  var i__7280__auto___9040 = 0;
  while (true) {
    if (i__7280__auto___9040 < len__7279__auto___9039) {
      args9033.push(arguments[i__7280__auto___9040]);
      var G__9041 = i__7280__auto___9040 + 1;
      i__7280__auto___9040 = G__9041;
      continue;
    } else {
    }
    break;
  }
  var G__9038 = args9033.length;
  switch(G__9038) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9033.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq9034) {
  var G__9035 = cljs.core.first(seq9034);
  var seq9034__$1 = cljs.core.next(seq9034);
  var G__9036 = cljs.core.first(seq9034__$1);
  var seq9034__$2 = cljs.core.next(seq9034__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__9035, G__9036, seq9034__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args9043 = [];
  var len__7279__auto___9049 = arguments.length;
  var i__7280__auto___9050 = 0;
  while (true) {
    if (i__7280__auto___9050 < len__7279__auto___9049) {
      args9043.push(arguments[i__7280__auto___9050]);
      var G__9051 = i__7280__auto___9050 + 1;
      i__7280__auto___9050 = G__9051;
      continue;
    } else {
    }
    break;
  }
  var G__9048 = args9043.length;
  switch(G__9048) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9043.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq9044) {
  var G__9045 = cljs.core.first(seq9044);
  var seq9044__$1 = cljs.core.next(seq9044);
  var G__9046 = cljs.core.first(seq9044__$1);
  var seq9044__$2 = cljs.core.next(seq9044__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__9045, G__9046, seq9044__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args9053 = [];
  var len__7279__auto___9059 = arguments.length;
  var i__7280__auto___9060 = 0;
  while (true) {
    if (i__7280__auto___9060 < len__7279__auto___9059) {
      args9053.push(arguments[i__7280__auto___9060]);
      var G__9061 = i__7280__auto___9060 + 1;
      i__7280__auto___9060 = G__9061;
      continue;
    } else {
    }
    break;
  }
  var G__9058 = args9053.length;
  switch(G__9058) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9053.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq9054) {
  var G__9055 = cljs.core.first(seq9054);
  var seq9054__$1 = cljs.core.next(seq9054);
  var G__9056 = cljs.core.first(seq9054__$1);
  var seq9054__$2 = cljs.core.next(seq9054__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__9055, G__9056, seq9054__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args9063 = [];
  var len__7279__auto___9069 = arguments.length;
  var i__7280__auto___9070 = 0;
  while (true) {
    if (i__7280__auto___9070 < len__7279__auto___9069) {
      args9063.push(arguments[i__7280__auto___9070]);
      var G__9071 = i__7280__auto___9070 + 1;
      i__7280__auto___9070 = G__9071;
      continue;
    } else {
    }
    break;
  }
  var G__9068 = args9063.length;
  switch(G__9068) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9063.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq9064) {
  var G__9065 = cljs.core.first(seq9064);
  var seq9064__$1 = cljs.core.next(seq9064);
  var G__9066 = cljs.core.first(seq9064__$1);
  var seq9064__$2 = cljs.core.next(seq9064__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__9065, G__9066, seq9064__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args9073 = [];
  var len__7279__auto___9079 = arguments.length;
  var i__7280__auto___9080 = 0;
  while (true) {
    if (i__7280__auto___9080 < len__7279__auto___9079) {
      args9073.push(arguments[i__7280__auto___9080]);
      var G__9081 = i__7280__auto___9080 + 1;
      i__7280__auto___9080 = G__9081;
      continue;
    } else {
    }
    break;
  }
  var G__9078 = args9073.length;
  switch(G__9078) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9073.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq9074) {
  var G__9075 = cljs.core.first(seq9074);
  var seq9074__$1 = cljs.core.next(seq9074);
  var G__9076 = cljs.core.first(seq9074__$1);
  var seq9074__$2 = cljs.core.next(seq9074__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__9075, G__9076, seq9074__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args9083 = [];
  var len__7279__auto___9089 = arguments.length;
  var i__7280__auto___9090 = 0;
  while (true) {
    if (i__7280__auto___9090 < len__7279__auto___9089) {
      args9083.push(arguments[i__7280__auto___9090]);
      var G__9091 = i__7280__auto___9090 + 1;
      i__7280__auto___9090 = G__9091;
      continue;
    } else {
    }
    break;
  }
  var G__9088 = args9083.length;
  switch(G__9088) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9083.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq9084) {
  var G__9085 = cljs.core.first(seq9084);
  var seq9084__$1 = cljs.core.next(seq9084);
  var G__9086 = cljs.core.first(seq9084__$1);
  var seq9084__$2 = cljs.core.next(seq9084__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__9085, G__9086, seq9084__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args9093 = [];
  var len__7279__auto___9099 = arguments.length;
  var i__7280__auto___9100 = 0;
  while (true) {
    if (i__7280__auto___9100 < len__7279__auto___9099) {
      args9093.push(arguments[i__7280__auto___9100]);
      var G__9101 = i__7280__auto___9100 + 1;
      i__7280__auto___9100 = G__9101;
      continue;
    } else {
    }
    break;
  }
  var G__9098 = args9093.length;
  switch(G__9098) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9093.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq9094) {
  var G__9095 = cljs.core.first(seq9094);
  var seq9094__$1 = cljs.core.next(seq9094);
  var G__9096 = cljs.core.first(seq9094__$1);
  var seq9094__$2 = cljs.core.next(seq9094__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__9095, G__9096, seq9094__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args9103 = [];
  var len__7279__auto___9109 = arguments.length;
  var i__7280__auto___9110 = 0;
  while (true) {
    if (i__7280__auto___9110 < len__7279__auto___9109) {
      args9103.push(arguments[i__7280__auto___9110]);
      var G__9111 = i__7280__auto___9110 + 1;
      i__7280__auto___9110 = G__9111;
      continue;
    } else {
    }
    break;
  }
  var G__9108 = args9103.length;
  switch(G__9108) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9103.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq9104) {
  var G__9105 = cljs.core.first(seq9104);
  var seq9104__$1 = cljs.core.next(seq9104);
  var G__9106 = cljs.core.first(seq9104__$1);
  var seq9104__$2 = cljs.core.next(seq9104__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__9105, G__9106, seq9104__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args9113 = [];
  var len__7279__auto___9119 = arguments.length;
  var i__7280__auto___9120 = 0;
  while (true) {
    if (i__7280__auto___9120 < len__7279__auto___9119) {
      args9113.push(arguments[i__7280__auto___9120]);
      var G__9121 = i__7280__auto___9120 + 1;
      i__7280__auto___9120 = G__9121;
      continue;
    } else {
    }
    break;
  }
  var G__9118 = args9113.length;
  switch(G__9118) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9113.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__9123 = y;
        var G__9124 = cljs.core.first(more);
        var G__9125 = cljs.core.next(more);
        x = G__9123;
        y = G__9124;
        more = G__9125;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq9114) {
  var G__9115 = cljs.core.first(seq9114);
  var seq9114__$1 = cljs.core.next(seq9114);
  var G__9116 = cljs.core.first(seq9114__$1);
  var seq9114__$2 = cljs.core.next(seq9114__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9115, G__9116, seq9114__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__9126 = n__$1 - 1;
      var G__9127 = cljs.core.next(xs);
      n__$1 = G__9126;
      xs = G__9127;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args9128 = [];
  var len__7279__auto___9133 = arguments.length;
  var i__7280__auto___9134 = 0;
  while (true) {
    if (i__7280__auto___9134 < len__7279__auto___9133) {
      args9128.push(arguments[i__7280__auto___9134]);
      var G__9135 = i__7280__auto___9134 + 1;
      i__7280__auto___9134 = G__9135;
      continue;
    } else {
    }
    break;
  }
  var G__9132 = args9128.length;
  switch(G__9132) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9128.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__9137 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__9138 = cljs.core.next(more);
      sb = G__9137;
      more = G__9138;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq9129) {
  var G__9130 = cljs.core.first(seq9129);
  var seq9129__$1 = cljs.core.next(seq9129);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__9130, seq9129__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args9139 = [];
  var len__7279__auto___9142 = arguments.length;
  var i__7280__auto___9143 = 0;
  while (true) {
    if (i__7280__auto___9143 < len__7279__auto___9142) {
      args9139.push(arguments[i__7280__auto___9143]);
      var G__9144 = i__7280__auto___9143 + 1;
      i__7280__auto___9143 = G__9144;
      continue;
    } else {
    }
    break;
  }
  var G__9141 = args9139.length;
  switch(G__9141) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9139.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__9146 = cljs.core.next(xs);
            var G__9147 = cljs.core.next(ys);
            xs = G__9146;
            ys = G__9147;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__9148 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__9149 = cljs.core.next(s);
        res = G__9148;
        s = G__9149;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__9150 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__9151 = cljs.core.next(s);
      h = G__9150;
      s = G__9151;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__9152 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__9153 = cljs.core.next(s__$1);
      h = G__9152;
      s__$1 = G__9153;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__9160_9166 = cljs.core.seq(fn_map);
  var chunk__9161_9167 = null;
  var count__9162_9168 = 0;
  var i__9163_9169 = 0;
  while (true) {
    if (i__9163_9169 < count__9162_9168) {
      var vec__9164_9170 = chunk__9161_9167.cljs$core$IIndexed$_nth$arity$2(null, i__9163_9169);
      var key_name_9171 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9164_9170, 0, null);
      var f_9172 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9164_9170, 1, null);
      var str_name_9173 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_9171) : cljs.core.name.call(null, key_name_9171);
      obj[str_name_9173] = f_9172;
      var G__9174 = seq__9160_9166;
      var G__9175 = chunk__9161_9167;
      var G__9176 = count__9162_9168;
      var G__9177 = i__9163_9169 + 1;
      seq__9160_9166 = G__9174;
      chunk__9161_9167 = G__9175;
      count__9162_9168 = G__9176;
      i__9163_9169 = G__9177;
      continue;
    } else {
      var temp__4657__auto___9178 = cljs.core.seq(seq__9160_9166);
      if (temp__4657__auto___9178) {
        var seq__9160_9179__$1 = temp__4657__auto___9178;
        if (cljs.core.chunked_seq_QMARK_(seq__9160_9179__$1)) {
          var c__7021__auto___9180 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__9160_9179__$1) : cljs.core.chunk_first.call(null, seq__9160_9179__$1);
          var G__9181 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__9160_9179__$1) : cljs.core.chunk_rest.call(null, seq__9160_9179__$1);
          var G__9182 = c__7021__auto___9180;
          var G__9183 = cljs.core.count(c__7021__auto___9180);
          var G__9184 = 0;
          seq__9160_9166 = G__9181;
          chunk__9161_9167 = G__9182;
          count__9162_9168 = G__9183;
          i__9163_9169 = G__9184;
          continue;
        } else {
          var vec__9165_9185 = cljs.core.first(seq__9160_9179__$1);
          var key_name_9186 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9165_9185, 0, null);
          var f_9187 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9165_9185, 1, null);
          var str_name_9188 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_9186) : cljs.core.name.call(null, key_name_9186);
          obj[str_name_9188] = f_9187;
          var G__9189 = cljs.core.next(seq__9160_9179__$1);
          var G__9190 = null;
          var G__9191 = 0;
          var G__9192 = 0;
          seq__9160_9166 = G__9189;
          chunk__9161_9167 = G__9190;
          count__9162_9168 = G__9191;
          i__9163_9169 = G__9192;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__9193 = null;
  var G__9193__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__9193__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9193 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9193__1.call(this, x);
      case 2:
        return G__9193__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9193.cljs$core$IFn$_invoke$arity$1 = G__9193__1;
  G__9193.cljs$core$IFn$_invoke$arity$2 = G__9193__2;
  return G__9193;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__9194 = null;
  var G__9194__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__9194__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9194 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9194__1.call(this, x);
      case 2:
        return G__9194__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9194.cljs$core$IFn$_invoke$arity$1 = G__9194__1;
  G__9194.cljs$core$IFn$_invoke$arity$2 = G__9194__2;
  return G__9194;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__9197 = null;
  var G__9197__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__9197__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9197 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9197__1.call(this, x);
      case 2:
        return G__9197__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9197.cljs$core$IFn$_invoke$arity$1 = G__9197__1;
  G__9197.cljs$core$IFn$_invoke$arity$2 = G__9197__2;
  return G__9197;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__9198 = null;
  var G__9198__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__9198__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9198 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9198__1.call(this, x);
      case 2:
        return G__9198__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9198.cljs$core$IFn$_invoke$arity$1 = G__9198__1;
  G__9198.cljs$core$IFn$_invoke$arity$2 = G__9198__2;
  return G__9198;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___9202 = arguments.length;
  var i__7280__auto___9203 = 0;
  while (true) {
    if (i__7280__auto___9203 < len__7279__auto___9202) {
      args__7286__auto__.push(arguments[i__7280__auto___9203]);
      var G__9204 = i__7280__auto___9203 + 1;
      i__7280__auto___9203 = G__9204;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__9205 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__9205;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__9206 = i - 1;
      var G__9207 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__9206;
      r = G__9207;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq9201) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9201));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__9208 = null;
  var G__9208__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__9208__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9208 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9208__1.call(this, x);
      case 2:
        return G__9208__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9208.cljs$core$IFn$_invoke$arity$1 = G__9208__1;
  G__9208.cljs$core$IFn$_invoke$arity$2 = G__9208__2;
  return G__9208;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__9209 = null;
  var G__9209__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__9209__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9209 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9209__1.call(this, x);
      case 2:
        return G__9209__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9209.cljs$core$IFn$_invoke$arity$1 = G__9209__1;
  G__9209.cljs$core$IFn$_invoke$arity$2 = G__9209__2;
  return G__9209;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__6210__auto__ = coll == null;
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = cljs.core.not(a.ns);
      if (and__6198__auto__) {
        return b.ns;
      } else {
        return and__6198__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__9220 = a.ns;
            var G__9221 = b.ns;
            return goog.array.defaultCompare(G__9220, G__9221);
          }();
          if (0 === nsc) {
            var G__9222 = a.name;
            var G__9223 = b.name;
            return goog.array.defaultCompare(G__9222, G__9223);
          } else {
            return nsc;
          }
        }
      } else {
        var G__9224 = a.name;
        var G__9225 = b.name;
        return goog.array.defaultCompare(G__9224, G__9225);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__9227 = null;
  var G__9227__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__9227__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__9227 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9227__2.call(this, self__, coll);
      case 3:
        return G__9227__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9227.cljs$core$IFn$_invoke$arity$2 = G__9227__2;
  G__9227.cljs$core$IFn$_invoke$arity$3 = G__9227__3;
  return G__9227;
}();
cljs.core.Keyword.prototype.apply = function(self__, args9226) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9226)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__6645__auto__ = self__._hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args9230 = [];
  var len__7279__auto___9233 = arguments.length;
  var i__7280__auto___9234 = 0;
  while (true) {
    if (i__7280__auto___9234 < len__7279__auto___9233) {
      args9230.push(arguments[i__7280__auto___9234]);
      var G__9235 = i__7280__auto___9234 + 1;
      i__7280__auto___9234 = G__9235;
      continue;
    } else {
    }
    break;
  }
  var G__9232 = args9230.length;
  switch(G__9232) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9230.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__9237 = null;
  var G__9237__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__9237__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9237 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9237__1.call(this, x);
      case 2:
        return G__9237__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9237.cljs$core$IFn$_invoke$arity$1 = G__9237__1;
  G__9237.cljs$core$IFn$_invoke$arity$2 = G__9237__2;
  return G__9237;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__9238 = null;
  var G__9238__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__9238__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9238 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9238__1.call(this, x);
      case 2:
        return G__9238__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9238.cljs$core$IFn$_invoke$arity$1 = G__9238__1;
  G__9238.cljs$core$IFn$_invoke$arity$2 = G__9238__2;
  return G__9238;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__9239 = ls.sval();
        ls = G__9239;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args9240 = [];
  var len__7279__auto___9243 = arguments.length;
  var i__7280__auto___9244 = 0;
  while (true) {
    if (i__7280__auto___9244 < len__7279__auto___9243) {
      args9240.push(arguments[i__7280__auto___9244]);
      var G__9245 = i__7280__auto___9244 + 1;
      i__7280__auto___9244 = G__9245;
      continue;
    } else {
    }
    break;
  }
  var G__9242 = args9240.length;
  switch(G__9242) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9240.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__9247 = null;
  var G__9247__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__9247__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9247 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9247__1.call(this, x);
      case 2:
        return G__9247__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9247.cljs$core$IFn$_invoke$arity$1 = G__9247__1;
  G__9247.cljs$core$IFn$_invoke$arity$2 = G__9247__2;
  return G__9247;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__9248 = null;
  var G__9248__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__9248__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9248 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9248__1.call(this, x);
      case 2:
        return G__9248__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9248.cljs$core$IFn$_invoke$arity$1 = G__9248__1;
  G__9248.cljs$core$IFn$_invoke$arity$2 = G__9248__2;
  return G__9248;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__9251 = cljs.core.next(s__$1);
      s__$1 = G__9251;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_9252 = 0;
  var xs_9253 = cljs.core.seq(coll);
  while (true) {
    if (xs_9253) {
      ret[i_9252] = cljs.core.to_array(cljs.core.first(xs_9253));
      var G__9254 = i_9252 + 1;
      var G__9255 = cljs.core.next(xs_9253);
      i_9252 = G__9254;
      xs_9253 = G__9255;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args9256 = [];
  var len__7279__auto___9259 = arguments.length;
  var i__7280__auto___9260 = 0;
  while (true) {
    if (i__7280__auto___9260 < len__7279__auto___9259) {
      args9256.push(arguments[i__7280__auto___9260]);
      var G__9261 = i__7280__auto___9260 + 1;
      i__7280__auto___9260 = G__9261;
      continue;
    } else {
    }
    break;
  }
  var G__9258 = args9256.length;
  switch(G__9258) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9256.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9263 = i + 1;
        var G__9264 = cljs.core.next(s__$1);
        i = G__9263;
        s__$1 = G__9264;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___9265 = size;
    var i_9266 = 0;
    while (true) {
      if (i_9266 < n__7124__auto___9265) {
        a[i_9266] = init_val_or_seq;
        var G__9267 = i_9266 + 1;
        i_9266 = G__9267;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args9268 = [];
  var len__7279__auto___9271 = arguments.length;
  var i__7280__auto___9272 = 0;
  while (true) {
    if (i__7280__auto___9272 < len__7279__auto___9271) {
      args9268.push(arguments[i__7280__auto___9272]);
      var G__9273 = i__7280__auto___9272 + 1;
      i__7280__auto___9272 = G__9273;
      continue;
    } else {
    }
    break;
  }
  var G__9270 = args9268.length;
  switch(G__9270) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9268.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9275 = i + 1;
        var G__9276 = cljs.core.next(s__$1);
        i = G__9275;
        s__$1 = G__9276;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___9277 = size;
    var i_9278 = 0;
    while (true) {
      if (i_9278 < n__7124__auto___9277) {
        a[i_9278] = init_val_or_seq;
        var G__9279 = i_9278 + 1;
        i_9278 = G__9279;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args9280 = [];
  var len__7279__auto___9283 = arguments.length;
  var i__7280__auto___9284 = 0;
  while (true) {
    if (i__7280__auto___9284 < len__7279__auto___9283) {
      args9280.push(arguments[i__7280__auto___9284]);
      var G__9285 = i__7280__auto___9284 + 1;
      i__7280__auto___9284 = G__9285;
      continue;
    } else {
    }
    break;
  }
  var G__9282 = args9280.length;
  switch(G__9282) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9280.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9287 = i + 1;
        var G__9288 = cljs.core.next(s__$1);
        i = G__9287;
        s__$1 = G__9288;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___9289 = size;
    var i_9290 = 0;
    while (true) {
      if (i_9290 < n__7124__auto___9289) {
        a[i_9290] = init_val_or_seq;
        var G__9291 = i_9290 + 1;
        i_9290 = G__9291;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args9292 = [];
  var len__7279__auto___9295 = arguments.length;
  var i__7280__auto___9296 = 0;
  while (true) {
    if (i__7280__auto___9296 < len__7279__auto___9295) {
      args9292.push(arguments[i__7280__auto___9296]);
      var G__9297 = i__7280__auto___9296 + 1;
      i__7280__auto___9296 = G__9297;
      continue;
    } else {
    }
    break;
  }
  var G__9294 = args9292.length;
  switch(G__9294) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9292.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9299 = i + 1;
        var G__9300 = cljs.core.next(s__$1);
        i = G__9299;
        s__$1 = G__9300;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__7124__auto___9301 = size;
    var i_9302 = 0;
    while (true) {
      if (i_9302 < n__7124__auto___9301) {
        a[i_9302] = init_val_or_seq;
        var G__9303 = i_9302 + 1;
        i_9302 = G__9303;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__9304 = cljs.core.next(s__$1);
        var G__9305 = i - 1;
        var G__9306 = sum + 1;
        s__$1 = G__9304;
        i = G__9305;
        sum = G__9306;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args9308 = [];
  var len__7279__auto___9320 = arguments.length;
  var i__7280__auto___9321 = 0;
  while (true) {
    if (i__7280__auto___9321 < len__7279__auto___9320) {
      args9308.push(arguments[i__7280__auto___9321]);
      var G__9322 = i__7280__auto___9321 + 1;
      i__7280__auto___9321 = G__9322;
      continue;
    } else {
    }
    break;
  }
  var G__9313 = args9308.length;
  switch(G__9313) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9308.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq9309) {
  var G__9310 = cljs.core.first(seq9309);
  var seq9309__$1 = cljs.core.next(seq9309);
  var G__9311 = cljs.core.first(seq9309__$1);
  var seq9309__$2 = cljs.core.next(seq9309__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__9310, G__9311, seq9309__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args9324 = [];
  var len__7279__auto___9332 = arguments.length;
  var i__7280__auto___9333 = 0;
  while (true) {
    if (i__7280__auto___9333 < len__7279__auto___9332) {
      args9324.push(arguments[i__7280__auto___9333]);
      var G__9334 = i__7280__auto___9333 + 1;
      i__7280__auto___9333 = G__9334;
      continue;
    } else {
    }
    break;
  }
  var G__9331 = args9324.length;
  switch(G__9331) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9324.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq9325) {
  var G__9326 = cljs.core.first(seq9325);
  var seq9325__$1 = cljs.core.next(seq9325);
  var G__9327 = cljs.core.first(seq9325__$1);
  var seq9325__$2 = cljs.core.next(seq9325__$1);
  var G__9328 = cljs.core.first(seq9325__$2);
  var seq9325__$3 = cljs.core.next(seq9325__$2);
  var G__9329 = cljs.core.first(seq9325__$3);
  var seq9325__$4 = cljs.core.next(seq9325__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__9326, G__9327, G__9328, G__9329, seq9325__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args9336 = [];
  var len__7279__auto___9342 = arguments.length;
  var i__7280__auto___9343 = 0;
  while (true) {
    if (i__7280__auto___9343 < len__7279__auto___9342) {
      args9336.push(arguments[i__7280__auto___9343]);
      var G__9344 = i__7280__auto___9343 + 1;
      i__7280__auto___9343 = G__9344;
      continue;
    } else {
    }
    break;
  }
  var G__9341 = args9336.length;
  switch(G__9341) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9336.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__9346 = ntcoll;
      var G__9347 = cljs.core.first(vals);
      var G__9348 = cljs.core.next(vals);
      tcoll = G__9346;
      val = G__9347;
      vals = G__9348;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq9337) {
  var G__9338 = cljs.core.first(seq9337);
  var seq9337__$1 = cljs.core.next(seq9337);
  var G__9339 = cljs.core.first(seq9337__$1);
  var seq9337__$2 = cljs.core.next(seq9337__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9338, G__9339, seq9337__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args9349 = [];
  var len__7279__auto___9356 = arguments.length;
  var i__7280__auto___9357 = 0;
  while (true) {
    if (i__7280__auto___9357 < len__7279__auto___9356) {
      args9349.push(arguments[i__7280__auto___9357]);
      var G__9358 = i__7280__auto___9357 + 1;
      i__7280__auto___9357 = G__9358;
      continue;
    } else {
    }
    break;
  }
  var G__9355 = args9349.length;
  switch(G__9355) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9349.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__9360 = ntcoll;
      var G__9361 = cljs.core.first(kvs);
      var G__9362 = cljs.core.second(kvs);
      var G__9363 = cljs.core.nnext(kvs);
      tcoll = G__9360;
      key = G__9361;
      val = G__9362;
      kvs = G__9363;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq9350) {
  var G__9351 = cljs.core.first(seq9350);
  var seq9350__$1 = cljs.core.next(seq9350);
  var G__9352 = cljs.core.first(seq9350__$1);
  var seq9350__$2 = cljs.core.next(seq9350__$1);
  var G__9353 = cljs.core.first(seq9350__$2);
  var seq9350__$3 = cljs.core.next(seq9350__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9351, G__9352, G__9353, seq9350__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args9364 = [];
  var len__7279__auto___9370 = arguments.length;
  var i__7280__auto___9371 = 0;
  while (true) {
    if (i__7280__auto___9371 < len__7279__auto___9370) {
      args9364.push(arguments[i__7280__auto___9371]);
      var G__9372 = i__7280__auto___9371 + 1;
      i__7280__auto___9371 = G__9372;
      continue;
    } else {
    }
    break;
  }
  var G__9369 = args9364.length;
  switch(G__9369) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9364.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__9374 = ntcoll;
      var G__9375 = cljs.core.first(ks);
      var G__9376 = cljs.core.next(ks);
      tcoll = G__9374;
      key = G__9375;
      ks = G__9376;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq9365) {
  var G__9366 = cljs.core.first(seq9365);
  var seq9365__$1 = cljs.core.next(seq9365);
  var G__9367 = cljs.core.first(seq9365__$1);
  var seq9365__$2 = cljs.core.next(seq9365__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9366, G__9367, seq9365__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args9377 = [];
  var len__7279__auto___9383 = arguments.length;
  var i__7280__auto___9384 = 0;
  while (true) {
    if (i__7280__auto___9384 < len__7279__auto___9383) {
      args9377.push(arguments[i__7280__auto___9384]);
      var G__9385 = i__7280__auto___9384 + 1;
      i__7280__auto___9384 = G__9385;
      continue;
    } else {
    }
    break;
  }
  var G__9382 = args9377.length;
  switch(G__9382) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9377.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__9387 = ntcoll;
      var G__9388 = cljs.core.first(vals);
      var G__9389 = cljs.core.next(vals);
      tcoll = G__9387;
      val = G__9388;
      vals = G__9389;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq9378) {
  var G__9379 = cljs.core.first(seq9378);
  var seq9378__$1 = cljs.core.next(seq9378);
  var G__9380 = cljs.core.first(seq9378__$1);
  var seq9378__$2 = cljs.core.next(seq9378__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9379, G__9380, seq9378__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a7168 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a7168);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a7168) : f.call(null, a7168);
      }
    } else {
      var b7169 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a7168, b7169);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a7168, b7169) : f.call(null, a7168, b7169);
        }
      } else {
        var c7170 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a7168, b7169, c7170);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a7168, b7169, c7170) : f.call(null, a7168, b7169, c7170);
          }
        } else {
          var d7171 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a7168, b7169, c7170, d7171);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a7168, b7169, c7170, d7171) : f.call(null, a7168, b7169, c7170, d7171);
            }
          } else {
            var e7172 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a7168, b7169, c7170, d7171, e7172);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a7168, b7169, c7170, d7171, e7172) : f.call(null, a7168, b7169, c7170, d7171, e7172);
              }
            } else {
              var f7173 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a7168, b7169, c7170, d7171, e7172, f7173);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a7168, b7169, c7170, d7171, e7172, f7173) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173);
                }
              } else {
                var g7174 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a7168, b7169, c7170, d7171, e7172, f7173, g7174);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a7168, b7169, c7170, d7171, e7172, f7173, g7174) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174);
                  }
                } else {
                  var h7175 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175);
                    }
                  } else {
                    var i7176 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176);
                      }
                    } else {
                      var j7177 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177);
                        }
                      } else {
                        var k7178 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178);
                          }
                        } else {
                          var l7179 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179);
                            }
                          } else {
                            var m7180 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180);
                              }
                            } else {
                              var n7181 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181);
                                }
                              } else {
                                var o7182 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182);
                                  }
                                } else {
                                  var p7183 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183);
                                    }
                                  } else {
                                    var q7184 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184);
                                      }
                                    } else {
                                      var r7185 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185);
                                        }
                                      } else {
                                        var s7186 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186);
                                          }
                                        } else {
                                          var t7187 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186, t7187);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186, t7187) : f.call(null, a7168, b7169, c7170, d7171, e7172, f7173, g7174, h7175, i7176, j7177, k7178, l7179, m7180, n7181, o7182, p7183, q7184, r7185, s7186, t7187);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args9390 = [];
  var len__7279__auto___9399 = arguments.length;
  var i__7280__auto___9400 = 0;
  while (true) {
    if (i__7280__auto___9400 < len__7279__auto___9399) {
      args9390.push(arguments[i__7280__auto___9400]);
      var G__9401 = i__7280__auto___9400 + 1;
      i__7280__auto___9400 = G__9401;
      continue;
    } else {
    }
    break;
  }
  var G__9398 = args9390.length;
  switch(G__9398) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9390.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__7298__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq9391) {
  var G__9392 = cljs.core.first(seq9391);
  var seq9391__$1 = cljs.core.next(seq9391);
  var G__9393 = cljs.core.first(seq9391__$1);
  var seq9391__$2 = cljs.core.next(seq9391__$1);
  var G__9394 = cljs.core.first(seq9391__$2);
  var seq9391__$3 = cljs.core.next(seq9391__$2);
  var G__9395 = cljs.core.first(seq9391__$3);
  var seq9391__$4 = cljs.core.next(seq9391__$3);
  var G__9396 = cljs.core.first(seq9391__$4);
  var seq9391__$5 = cljs.core.next(seq9391__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__9392, G__9393, G__9394, G__9395, G__9396, seq9391__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args9403 = [];
  var len__7279__auto___9428 = arguments.length;
  var i__7280__auto___9429 = 0;
  while (true) {
    if (i__7280__auto___9429 < len__7279__auto___9428) {
      args9403.push(arguments[i__7280__auto___9429]);
      var G__9430 = i__7280__auto___9429 + 1;
      i__7280__auto___9429 = G__9430;
      continue;
    } else {
    }
    break;
  }
  var G__9412 = args9403.length;
  switch(G__9412) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9403.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7298__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__9413 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9413) : f.call(null, G__9413);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__9414 = cljs.core.meta(obj);
    var G__9415 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9414, G__9415) : f.call(null, G__9414, G__9415);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__9416 = cljs.core.meta(obj);
    var G__9417 = a;
    var G__9418 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9416, G__9417, G__9418) : f.call(null, G__9416, G__9417, G__9418);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__9419 = cljs.core.meta(obj);
    var G__9420 = a;
    var G__9421 = b;
    var G__9422 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9419, G__9420, G__9421, G__9422) : f.call(null, G__9419, G__9420, G__9421, G__9422);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__9423 = cljs.core.meta(obj);
    var G__9424 = a;
    var G__9425 = b;
    var G__9426 = c;
    var G__9427 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9423, G__9424, G__9425, G__9426, G__9427) : f.call(null, G__9423, G__9424, G__9425, G__9426, G__9427);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq9404) {
  var G__9405 = cljs.core.first(seq9404);
  var seq9404__$1 = cljs.core.next(seq9404);
  var G__9406 = cljs.core.first(seq9404__$1);
  var seq9404__$2 = cljs.core.next(seq9404__$1);
  var G__9407 = cljs.core.first(seq9404__$2);
  var seq9404__$3 = cljs.core.next(seq9404__$2);
  var G__9408 = cljs.core.first(seq9404__$3);
  var seq9404__$4 = cljs.core.next(seq9404__$3);
  var G__9409 = cljs.core.first(seq9404__$4);
  var seq9404__$5 = cljs.core.next(seq9404__$4);
  var G__9410 = cljs.core.first(seq9404__$5);
  var seq9404__$6 = cljs.core.next(seq9404__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__9405, G__9406, G__9407, G__9408, G__9409, G__9410, seq9404__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args9432 = [];
  var len__7279__auto___9438 = arguments.length;
  var i__7280__auto___9439 = 0;
  while (true) {
    if (i__7280__auto___9439 < len__7279__auto___9438) {
      args9432.push(arguments[i__7280__auto___9439]);
      var G__9440 = i__7280__auto___9439 + 1;
      i__7280__auto___9439 = G__9440;
      continue;
    } else {
    }
    break;
  }
  var G__9437 = args9432.length;
  switch(G__9437) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9432.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq9433) {
  var G__9434 = cljs.core.first(seq9433);
  var seq9433__$1 = cljs.core.next(seq9433);
  var G__9435 = cljs.core.first(seq9433__$1);
  var seq9433__$2 = cljs.core.next(seq9433__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9434, G__9435, seq9433__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core9445 !== "undefined") {
  } else {
    cljs.core.t_cljs$core9445 = function(nil_iter, meta9446) {
      this.nil_iter = nil_iter;
      this.meta9446 = meta9446;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core9445.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9447, meta9446__$1) {
      var self__ = this;
      var _9447__$1 = this;
      return new cljs.core.t_cljs$core9445(self__.nil_iter, meta9446__$1);
    };
    cljs.core.t_cljs$core9445.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9447) {
      var self__ = this;
      var _9447__$1 = this;
      return self__.meta9446;
    };
    cljs.core.t_cljs$core9445.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core9445.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core9445.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core9445.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta9446", "meta9446", -2026875576, null)], 
      null);
    };
    cljs.core.t_cljs$core9445.cljs$lang$type = true;
    cljs.core.t_cljs$core9445.cljs$lang$ctorStr = "cljs.core/t_cljs$core9445";
    cljs.core.t_cljs$core9445.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write(writer__6817__auto__, "cljs.core/t_cljs$core9445");
    };
    cljs.core.__GT_t_cljs$core9445 = function cljs$core$nil_iter_$___GT_t_cljs$core9445(nil_iter__$1, meta9446) {
      return new cljs.core.t_cljs$core9445(nil_iter__$1, meta9446);
    };
  }
  return new cljs.core.t_cljs$core9445(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = !(lt.stepper == null);
      if (and__6198__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__9448 = lt;
        var G__9449 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9448, G__9449) : self__.xform.call(null, G__9448, G__9449);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__9450 = cljs.core.next(iters__$1);
        iters__$1 = G__9450;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__7124__auto___9451 = self__.iters.length;
  var i_9452 = 0;
  while (true) {
    if (i_9452 < n__7124__auto___9451) {
      self__.nexts[i_9452] = self__.iters[i_9452].next();
      var G__9453 = i_9452 + 1;
      i_9452 = G__9453;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = !(lt.stepper == null);
      if (and__6198__auto__) {
        return this$.hasNext();
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args9454 = [];
  var len__7279__auto___9457 = arguments.length;
  var i__7280__auto___9458 = 0;
  while (true) {
    if (i__7280__auto___9458 < len__7279__auto___9457) {
      args9454.push(arguments[i__7280__auto___9458]);
      var G__9459 = i__7280__auto___9458 + 1;
      i__7280__auto___9458 = G__9459;
      continue;
    } else {
    }
    break;
  }
  var G__9456 = args9454.length;
  switch(G__9456) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9454.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__9461 = null;
  var G__9461__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__9461__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9461 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9461__1.call(this, x);
      case 2:
        return G__9461__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9461.cljs$core$IFn$_invoke$arity$1 = G__9461__1;
  G__9461.cljs$core$IFn$_invoke$arity$2 = G__9461__2;
  return G__9461;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__9462 = null;
  var G__9462__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__9462__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__9462 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__9462__1.call(this, x);
      case 2:
        return G__9462__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9462.cljs$core$IFn$_invoke$arity$1 = G__9462__1;
  G__9462.cljs$core$IFn$_invoke$arity$2 = G__9462__2;
  return G__9462;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__9463_9467 = cljs.core.seq(colls);
  var chunk__9464_9468 = null;
  var count__9465_9469 = 0;
  var i__9466_9470 = 0;
  while (true) {
    if (i__9466_9470 < count__9465_9469) {
      var coll_9471 = chunk__9464_9468.cljs$core$IIndexed$_nth$arity$2(null, i__9466_9470);
      iters.push(cljs.core.iter(coll_9471));
      var G__9472 = seq__9463_9467;
      var G__9473 = chunk__9464_9468;
      var G__9474 = count__9465_9469;
      var G__9475 = i__9466_9470 + 1;
      seq__9463_9467 = G__9472;
      chunk__9464_9468 = G__9473;
      count__9465_9469 = G__9474;
      i__9466_9470 = G__9475;
      continue;
    } else {
      var temp__4657__auto___9476 = cljs.core.seq(seq__9463_9467);
      if (temp__4657__auto___9476) {
        var seq__9463_9477__$1 = temp__4657__auto___9476;
        if (cljs.core.chunked_seq_QMARK_(seq__9463_9477__$1)) {
          var c__7021__auto___9478 = cljs.core.chunk_first(seq__9463_9477__$1);
          var G__9479 = cljs.core.chunk_rest(seq__9463_9477__$1);
          var G__9480 = c__7021__auto___9478;
          var G__9481 = cljs.core.count(c__7021__auto___9478);
          var G__9482 = 0;
          seq__9463_9467 = G__9479;
          chunk__9464_9468 = G__9480;
          count__9465_9469 = G__9481;
          i__9466_9470 = G__9482;
          continue;
        } else {
          var coll_9483 = cljs.core.first(seq__9463_9477__$1);
          iters.push(cljs.core.iter(coll_9483));
          var G__9484 = cljs.core.next(seq__9463_9477__$1);
          var G__9485 = null;
          var G__9486 = 0;
          var G__9487 = 0;
          seq__9463_9467 = G__9484;
          chunk__9464_9468 = G__9485;
          count__9465_9469 = G__9486;
          i__9466_9470 = G__9487;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args9488 = [];
  var len__7279__auto___9494 = arguments.length;
  var i__7280__auto___9495 = 0;
  while (true) {
    if (i__7280__auto___9495 < len__7279__auto___9494) {
      args9488.push(arguments[i__7280__auto___9495]);
      var G__9496 = i__7280__auto___9495 + 1;
      i__7280__auto___9495 = G__9496;
      continue;
    } else {
    }
    break;
  }
  var G__9493 = args9488.length;
  switch(G__9493) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9488.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__6210__auto__ = cljs.core.seq(coll);
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq9489) {
  var G__9490 = cljs.core.first(seq9489);
  var seq9489__$1 = cljs.core.next(seq9489);
  var G__9491 = cljs.core.first(seq9489__$1);
  var seq9489__$2 = cljs.core.next(seq9489__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__9490, G__9491, seq9489__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__9499 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9499) : pred.call(null, G__9499);
      }())) {
        var G__9500 = pred;
        var G__9501 = cljs.core.next(coll);
        pred = G__9500;
        coll = G__9501;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__6210__auto__ = function() {
        var G__9505 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9505) : pred.call(null, G__9505);
      }();
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var G__9506 = pred;
        var G__9507 = cljs.core.next(coll);
        pred = G__9506;
        coll = G__9507;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__9508 = null;
    var G__9508__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__9508__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__9508__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__9508__3 = function() {
      var G__9509__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__9509 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__9510__i = 0, G__9510__a = new Array(arguments.length - 2);
          while (G__9510__i < G__9510__a.length) {
            G__9510__a[G__9510__i] = arguments[G__9510__i + 2];
            ++G__9510__i;
          }
          zs = new cljs.core.IndexedSeq(G__9510__a, 0);
        }
        return G__9509__delegate.call(this, x, y, zs);
      };
      G__9509.cljs$lang$maxFixedArity = 2;
      G__9509.cljs$lang$applyTo = function(arglist__9511) {
        var x = cljs.core.first(arglist__9511);
        arglist__9511 = cljs.core.next(arglist__9511);
        var y = cljs.core.first(arglist__9511);
        var zs = cljs.core.rest(arglist__9511);
        return G__9509__delegate(x, y, zs);
      };
      G__9509.cljs$core$IFn$_invoke$arity$variadic = G__9509__delegate;
      return G__9509;
    }();
    G__9508 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9508__0.call(this);
        case 1:
          return G__9508__1.call(this, x);
        case 2:
          return G__9508__2.call(this, x, y);
        default:
          var G__9512 = null;
          if (arguments.length > 2) {
            var G__9513__i = 0, G__9513__a = new Array(arguments.length - 2);
            while (G__9513__i < G__9513__a.length) {
              G__9513__a[G__9513__i] = arguments[G__9513__i + 2];
              ++G__9513__i;
            }
            G__9512 = new cljs.core.IndexedSeq(G__9513__a, 0);
          }
          return G__9508__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__9512);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9508.cljs$lang$maxFixedArity = 2;
    G__9508.cljs$lang$applyTo = G__9508__3.cljs$lang$applyTo;
    G__9508.cljs$core$IFn$_invoke$arity$0 = G__9508__0;
    G__9508.cljs$core$IFn$_invoke$arity$1 = G__9508__1;
    G__9508.cljs$core$IFn$_invoke$arity$2 = G__9508__2;
    G__9508.cljs$core$IFn$_invoke$arity$variadic = G__9508__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__9508;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__9514__delegate = function(args) {
      return x;
    };
    var G__9514 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__9515__i = 0, G__9515__a = new Array(arguments.length - 0);
        while (G__9515__i < G__9515__a.length) {
          G__9515__a[G__9515__i] = arguments[G__9515__i + 0];
          ++G__9515__i;
        }
        args = new cljs.core.IndexedSeq(G__9515__a, 0);
      }
      return G__9514__delegate.call(this, args);
    };
    G__9514.cljs$lang$maxFixedArity = 0;
    G__9514.cljs$lang$applyTo = function(arglist__9516) {
      var args = cljs.core.seq(arglist__9516);
      return G__9514__delegate(args);
    };
    G__9514.cljs$core$IFn$_invoke$arity$variadic = G__9514__delegate;
    return G__9514;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args9517 = [];
  var len__7279__auto___9544 = arguments.length;
  var i__7280__auto___9545 = 0;
  while (true) {
    if (i__7280__auto___9545 < len__7279__auto___9544) {
      args9517.push(arguments[i__7280__auto___9545]);
      var G__9546 = i__7280__auto___9545 + 1;
      i__7280__auto___9545 = G__9546;
      continue;
    } else {
    }
    break;
  }
  var G__9523 = args9517.length;
  switch(G__9523) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9517.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__9548 = null;
    var G__9548__0 = function() {
      var G__9524 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9524) : f.call(null, G__9524);
    };
    var G__9548__1 = function(x) {
      var G__9525 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9525) : f.call(null, G__9525);
    };
    var G__9548__2 = function(x, y) {
      var G__9526 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9526) : f.call(null, G__9526);
    };
    var G__9548__3 = function(x, y, z) {
      var G__9527 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9527) : f.call(null, G__9527);
    };
    var G__9548__4 = function() {
      var G__9549__delegate = function(x, y, z, args) {
        var G__9528 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9528) : f.call(null, G__9528);
      };
      var G__9549 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9550__i = 0, G__9550__a = new Array(arguments.length - 3);
          while (G__9550__i < G__9550__a.length) {
            G__9550__a[G__9550__i] = arguments[G__9550__i + 3];
            ++G__9550__i;
          }
          args = new cljs.core.IndexedSeq(G__9550__a, 0);
        }
        return G__9549__delegate.call(this, x, y, z, args);
      };
      G__9549.cljs$lang$maxFixedArity = 3;
      G__9549.cljs$lang$applyTo = function(arglist__9551) {
        var x = cljs.core.first(arglist__9551);
        arglist__9551 = cljs.core.next(arglist__9551);
        var y = cljs.core.first(arglist__9551);
        arglist__9551 = cljs.core.next(arglist__9551);
        var z = cljs.core.first(arglist__9551);
        var args = cljs.core.rest(arglist__9551);
        return G__9549__delegate(x, y, z, args);
      };
      G__9549.cljs$core$IFn$_invoke$arity$variadic = G__9549__delegate;
      return G__9549;
    }();
    G__9548 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__9548__0.call(this);
        case 1:
          return G__9548__1.call(this, x);
        case 2:
          return G__9548__2.call(this, x, y);
        case 3:
          return G__9548__3.call(this, x, y, z);
        default:
          var G__9552 = null;
          if (arguments.length > 3) {
            var G__9553__i = 0, G__9553__a = new Array(arguments.length - 3);
            while (G__9553__i < G__9553__a.length) {
              G__9553__a[G__9553__i] = arguments[G__9553__i + 3];
              ++G__9553__i;
            }
            G__9552 = new cljs.core.IndexedSeq(G__9553__a, 0);
          }
          return G__9548__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9552);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9548.cljs$lang$maxFixedArity = 3;
    G__9548.cljs$lang$applyTo = G__9548__4.cljs$lang$applyTo;
    G__9548.cljs$core$IFn$_invoke$arity$0 = G__9548__0;
    G__9548.cljs$core$IFn$_invoke$arity$1 = G__9548__1;
    G__9548.cljs$core$IFn$_invoke$arity$2 = G__9548__2;
    G__9548.cljs$core$IFn$_invoke$arity$3 = G__9548__3;
    G__9548.cljs$core$IFn$_invoke$arity$variadic = G__9548__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9548;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__9554 = null;
    var G__9554__0 = function() {
      var G__9530 = function() {
        var G__9531 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9531) : g.call(null, G__9531);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9530) : f.call(null, G__9530);
    };
    var G__9554__1 = function(x) {
      var G__9533 = function() {
        var G__9534 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9534) : g.call(null, G__9534);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9533) : f.call(null, G__9533);
    };
    var G__9554__2 = function(x, y) {
      var G__9536 = function() {
        var G__9537 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9537) : g.call(null, G__9537);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9536) : f.call(null, G__9536);
    };
    var G__9554__3 = function(x, y, z) {
      var G__9539 = function() {
        var G__9540 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9540) : g.call(null, G__9540);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9539) : f.call(null, G__9539);
    };
    var G__9554__4 = function() {
      var G__9555__delegate = function(x, y, z, args) {
        var G__9542 = function() {
          var G__9543 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9543) : g.call(null, G__9543);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9542) : f.call(null, G__9542);
      };
      var G__9555 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9556__i = 0, G__9556__a = new Array(arguments.length - 3);
          while (G__9556__i < G__9556__a.length) {
            G__9556__a[G__9556__i] = arguments[G__9556__i + 3];
            ++G__9556__i;
          }
          args = new cljs.core.IndexedSeq(G__9556__a, 0);
        }
        return G__9555__delegate.call(this, x, y, z, args);
      };
      G__9555.cljs$lang$maxFixedArity = 3;
      G__9555.cljs$lang$applyTo = function(arglist__9557) {
        var x = cljs.core.first(arglist__9557);
        arglist__9557 = cljs.core.next(arglist__9557);
        var y = cljs.core.first(arglist__9557);
        arglist__9557 = cljs.core.next(arglist__9557);
        var z = cljs.core.first(arglist__9557);
        var args = cljs.core.rest(arglist__9557);
        return G__9555__delegate(x, y, z, args);
      };
      G__9555.cljs$core$IFn$_invoke$arity$variadic = G__9555__delegate;
      return G__9555;
    }();
    G__9554 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__9554__0.call(this);
        case 1:
          return G__9554__1.call(this, x);
        case 2:
          return G__9554__2.call(this, x, y);
        case 3:
          return G__9554__3.call(this, x, y, z);
        default:
          var G__9558 = null;
          if (arguments.length > 3) {
            var G__9559__i = 0, G__9559__a = new Array(arguments.length - 3);
            while (G__9559__i < G__9559__a.length) {
              G__9559__a[G__9559__i] = arguments[G__9559__i + 3];
              ++G__9559__i;
            }
            G__9558 = new cljs.core.IndexedSeq(G__9559__a, 0);
          }
          return G__9554__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9558);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9554.cljs$lang$maxFixedArity = 3;
    G__9554.cljs$lang$applyTo = G__9554__4.cljs$lang$applyTo;
    G__9554.cljs$core$IFn$_invoke$arity$0 = G__9554__0;
    G__9554.cljs$core$IFn$_invoke$arity$1 = G__9554__1;
    G__9554.cljs$core$IFn$_invoke$arity$2 = G__9554__2;
    G__9554.cljs$core$IFn$_invoke$arity$3 = G__9554__3;
    G__9554.cljs$core$IFn$_invoke$arity$variadic = G__9554__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9554;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__9560__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__9561 = cljs.core.first(fs__$2).call(null, ret);
            var G__9562 = cljs.core.next(fs__$2);
            ret = G__9561;
            fs__$2 = G__9562;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__9560 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__9563__i = 0, G__9563__a = new Array(arguments.length - 0);
          while (G__9563__i < G__9563__a.length) {
            G__9563__a[G__9563__i] = arguments[G__9563__i + 0];
            ++G__9563__i;
          }
          args = new cljs.core.IndexedSeq(G__9563__a, 0);
        }
        return G__9560__delegate.call(this, args);
      };
      G__9560.cljs$lang$maxFixedArity = 0;
      G__9560.cljs$lang$applyTo = function(arglist__9564) {
        var args = cljs.core.seq(arglist__9564);
        return G__9560__delegate(args);
      };
      G__9560.cljs$core$IFn$_invoke$arity$variadic = G__9560__delegate;
      return G__9560;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq9518) {
  var G__9519 = cljs.core.first(seq9518);
  var seq9518__$1 = cljs.core.next(seq9518);
  var G__9520 = cljs.core.first(seq9518__$1);
  var seq9518__$2 = cljs.core.next(seq9518__$1);
  var G__9521 = cljs.core.first(seq9518__$2);
  var seq9518__$3 = cljs.core.next(seq9518__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__9519, G__9520, G__9521, seq9518__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args9565 = [];
  var len__7279__auto___9573 = arguments.length;
  var i__7280__auto___9574 = 0;
  while (true) {
    if (i__7280__auto___9574 < len__7279__auto___9573) {
      args9565.push(arguments[i__7280__auto___9574]);
      var G__9575 = i__7280__auto___9574 + 1;
      i__7280__auto___9574 = G__9575;
      continue;
    } else {
    }
    break;
  }
  var G__9572 = args9565.length;
  switch(G__9572) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9565.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__9577 = null;
    var G__9577__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__9577__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__9577__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__9577__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__9577__4 = function() {
      var G__9578__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__9578 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9579__i = 0, G__9579__a = new Array(arguments.length - 3);
          while (G__9579__i < G__9579__a.length) {
            G__9579__a[G__9579__i] = arguments[G__9579__i + 3];
            ++G__9579__i;
          }
          args = new cljs.core.IndexedSeq(G__9579__a, 0);
        }
        return G__9578__delegate.call(this, x, y, z, args);
      };
      G__9578.cljs$lang$maxFixedArity = 3;
      G__9578.cljs$lang$applyTo = function(arglist__9580) {
        var x = cljs.core.first(arglist__9580);
        arglist__9580 = cljs.core.next(arglist__9580);
        var y = cljs.core.first(arglist__9580);
        arglist__9580 = cljs.core.next(arglist__9580);
        var z = cljs.core.first(arglist__9580);
        var args = cljs.core.rest(arglist__9580);
        return G__9578__delegate(x, y, z, args);
      };
      G__9578.cljs$core$IFn$_invoke$arity$variadic = G__9578__delegate;
      return G__9578;
    }();
    G__9577 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__9577__0.call(this);
        case 1:
          return G__9577__1.call(this, x);
        case 2:
          return G__9577__2.call(this, x, y);
        case 3:
          return G__9577__3.call(this, x, y, z);
        default:
          var G__9581 = null;
          if (arguments.length > 3) {
            var G__9582__i = 0, G__9582__a = new Array(arguments.length - 3);
            while (G__9582__i < G__9582__a.length) {
              G__9582__a[G__9582__i] = arguments[G__9582__i + 3];
              ++G__9582__i;
            }
            G__9581 = new cljs.core.IndexedSeq(G__9582__a, 0);
          }
          return G__9577__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9581);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9577.cljs$lang$maxFixedArity = 3;
    G__9577.cljs$lang$applyTo = G__9577__4.cljs$lang$applyTo;
    G__9577.cljs$core$IFn$_invoke$arity$0 = G__9577__0;
    G__9577.cljs$core$IFn$_invoke$arity$1 = G__9577__1;
    G__9577.cljs$core$IFn$_invoke$arity$2 = G__9577__2;
    G__9577.cljs$core$IFn$_invoke$arity$3 = G__9577__3;
    G__9577.cljs$core$IFn$_invoke$arity$variadic = G__9577__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9577;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__9583 = null;
    var G__9583__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__9583__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__9583__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__9583__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__9583__4 = function() {
      var G__9584__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__9584 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9585__i = 0, G__9585__a = new Array(arguments.length - 3);
          while (G__9585__i < G__9585__a.length) {
            G__9585__a[G__9585__i] = arguments[G__9585__i + 3];
            ++G__9585__i;
          }
          args = new cljs.core.IndexedSeq(G__9585__a, 0);
        }
        return G__9584__delegate.call(this, x, y, z, args);
      };
      G__9584.cljs$lang$maxFixedArity = 3;
      G__9584.cljs$lang$applyTo = function(arglist__9586) {
        var x = cljs.core.first(arglist__9586);
        arglist__9586 = cljs.core.next(arglist__9586);
        var y = cljs.core.first(arglist__9586);
        arglist__9586 = cljs.core.next(arglist__9586);
        var z = cljs.core.first(arglist__9586);
        var args = cljs.core.rest(arglist__9586);
        return G__9584__delegate(x, y, z, args);
      };
      G__9584.cljs$core$IFn$_invoke$arity$variadic = G__9584__delegate;
      return G__9584;
    }();
    G__9583 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__9583__0.call(this);
        case 1:
          return G__9583__1.call(this, x);
        case 2:
          return G__9583__2.call(this, x, y);
        case 3:
          return G__9583__3.call(this, x, y, z);
        default:
          var G__9587 = null;
          if (arguments.length > 3) {
            var G__9588__i = 0, G__9588__a = new Array(arguments.length - 3);
            while (G__9588__i < G__9588__a.length) {
              G__9588__a[G__9588__i] = arguments[G__9588__i + 3];
              ++G__9588__i;
            }
            G__9587 = new cljs.core.IndexedSeq(G__9588__a, 0);
          }
          return G__9583__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9587);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9583.cljs$lang$maxFixedArity = 3;
    G__9583.cljs$lang$applyTo = G__9583__4.cljs$lang$applyTo;
    G__9583.cljs$core$IFn$_invoke$arity$0 = G__9583__0;
    G__9583.cljs$core$IFn$_invoke$arity$1 = G__9583__1;
    G__9583.cljs$core$IFn$_invoke$arity$2 = G__9583__2;
    G__9583.cljs$core$IFn$_invoke$arity$3 = G__9583__3;
    G__9583.cljs$core$IFn$_invoke$arity$variadic = G__9583__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9583;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__9589 = null;
    var G__9589__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__9589__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__9589__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__9589__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__9589__4 = function() {
      var G__9590__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__9590 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9591__i = 0, G__9591__a = new Array(arguments.length - 3);
          while (G__9591__i < G__9591__a.length) {
            G__9591__a[G__9591__i] = arguments[G__9591__i + 3];
            ++G__9591__i;
          }
          args = new cljs.core.IndexedSeq(G__9591__a, 0);
        }
        return G__9590__delegate.call(this, x, y, z, args);
      };
      G__9590.cljs$lang$maxFixedArity = 3;
      G__9590.cljs$lang$applyTo = function(arglist__9592) {
        var x = cljs.core.first(arglist__9592);
        arglist__9592 = cljs.core.next(arglist__9592);
        var y = cljs.core.first(arglist__9592);
        arglist__9592 = cljs.core.next(arglist__9592);
        var z = cljs.core.first(arglist__9592);
        var args = cljs.core.rest(arglist__9592);
        return G__9590__delegate(x, y, z, args);
      };
      G__9590.cljs$core$IFn$_invoke$arity$variadic = G__9590__delegate;
      return G__9590;
    }();
    G__9589 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__9589__0.call(this);
        case 1:
          return G__9589__1.call(this, x);
        case 2:
          return G__9589__2.call(this, x, y);
        case 3:
          return G__9589__3.call(this, x, y, z);
        default:
          var G__9593 = null;
          if (arguments.length > 3) {
            var G__9594__i = 0, G__9594__a = new Array(arguments.length - 3);
            while (G__9594__i < G__9594__a.length) {
              G__9594__a[G__9594__i] = arguments[G__9594__i + 3];
              ++G__9594__i;
            }
            G__9593 = new cljs.core.IndexedSeq(G__9594__a, 0);
          }
          return G__9589__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9593);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9589.cljs$lang$maxFixedArity = 3;
    G__9589.cljs$lang$applyTo = G__9589__4.cljs$lang$applyTo;
    G__9589.cljs$core$IFn$_invoke$arity$0 = G__9589__0;
    G__9589.cljs$core$IFn$_invoke$arity$1 = G__9589__1;
    G__9589.cljs$core$IFn$_invoke$arity$2 = G__9589__2;
    G__9589.cljs$core$IFn$_invoke$arity$3 = G__9589__3;
    G__9589.cljs$core$IFn$_invoke$arity$variadic = G__9589__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9589;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__9595__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__9595 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__9596__i = 0, G__9596__a = new Array(arguments.length - 0);
        while (G__9596__i < G__9596__a.length) {
          G__9596__a[G__9596__i] = arguments[G__9596__i + 0];
          ++G__9596__i;
        }
        args = new cljs.core.IndexedSeq(G__9596__a, 0);
      }
      return G__9595__delegate.call(this, args);
    };
    G__9595.cljs$lang$maxFixedArity = 0;
    G__9595.cljs$lang$applyTo = function(arglist__9597) {
      var args = cljs.core.seq(arglist__9597);
      return G__9595__delegate(args);
    };
    G__9595.cljs$core$IFn$_invoke$arity$variadic = G__9595__delegate;
    return G__9595;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq9566) {
  var G__9567 = cljs.core.first(seq9566);
  var seq9566__$1 = cljs.core.next(seq9566);
  var G__9568 = cljs.core.first(seq9566__$1);
  var seq9566__$2 = cljs.core.next(seq9566__$1);
  var G__9569 = cljs.core.first(seq9566__$2);
  var seq9566__$3 = cljs.core.next(seq9566__$2);
  var G__9570 = cljs.core.first(seq9566__$3);
  var seq9566__$4 = cljs.core.next(seq9566__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__9567, G__9568, G__9569, G__9570, seq9566__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args9598 = [];
  var len__7279__auto___9617 = arguments.length;
  var i__7280__auto___9618 = 0;
  while (true) {
    if (i__7280__auto___9618 < len__7279__auto___9617) {
      args9598.push(arguments[i__7280__auto___9618]);
      var G__9619 = i__7280__auto___9618 + 1;
      i__7280__auto___9618 = G__9619;
      continue;
    } else {
    }
    break;
  }
  var G__9600 = args9598.length;
  switch(G__9600) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9598.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__9621 = null;
    var G__9621__1 = function(a) {
      var G__9601 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9601) : f.call(null, G__9601);
    };
    var G__9621__2 = function(a, b) {
      var G__9602 = a == null ? x : a;
      var G__9603 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9602, G__9603) : f.call(null, G__9602, G__9603);
    };
    var G__9621__3 = function(a, b, c) {
      var G__9604 = a == null ? x : a;
      var G__9605 = b;
      var G__9606 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9604, G__9605, G__9606) : f.call(null, G__9604, G__9605, G__9606);
    };
    var G__9621__4 = function() {
      var G__9622__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__9622 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__9623__i = 0, G__9623__a = new Array(arguments.length - 3);
          while (G__9623__i < G__9623__a.length) {
            G__9623__a[G__9623__i] = arguments[G__9623__i + 3];
            ++G__9623__i;
          }
          ds = new cljs.core.IndexedSeq(G__9623__a, 0);
        }
        return G__9622__delegate.call(this, a, b, c, ds);
      };
      G__9622.cljs$lang$maxFixedArity = 3;
      G__9622.cljs$lang$applyTo = function(arglist__9624) {
        var a = cljs.core.first(arglist__9624);
        arglist__9624 = cljs.core.next(arglist__9624);
        var b = cljs.core.first(arglist__9624);
        arglist__9624 = cljs.core.next(arglist__9624);
        var c = cljs.core.first(arglist__9624);
        var ds = cljs.core.rest(arglist__9624);
        return G__9622__delegate(a, b, c, ds);
      };
      G__9622.cljs$core$IFn$_invoke$arity$variadic = G__9622__delegate;
      return G__9622;
    }();
    G__9621 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__9621__1.call(this, a);
        case 2:
          return G__9621__2.call(this, a, b);
        case 3:
          return G__9621__3.call(this, a, b, c);
        default:
          var G__9625 = null;
          if (arguments.length > 3) {
            var G__9626__i = 0, G__9626__a = new Array(arguments.length - 3);
            while (G__9626__i < G__9626__a.length) {
              G__9626__a[G__9626__i] = arguments[G__9626__i + 3];
              ++G__9626__i;
            }
            G__9625 = new cljs.core.IndexedSeq(G__9626__a, 0);
          }
          return G__9621__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__9625);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9621.cljs$lang$maxFixedArity = 3;
    G__9621.cljs$lang$applyTo = G__9621__4.cljs$lang$applyTo;
    G__9621.cljs$core$IFn$_invoke$arity$1 = G__9621__1;
    G__9621.cljs$core$IFn$_invoke$arity$2 = G__9621__2;
    G__9621.cljs$core$IFn$_invoke$arity$3 = G__9621__3;
    G__9621.cljs$core$IFn$_invoke$arity$variadic = G__9621__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9621;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__9627 = null;
    var G__9627__2 = function(a, b) {
      var G__9607 = a == null ? x : a;
      var G__9608 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9607, G__9608) : f.call(null, G__9607, G__9608);
    };
    var G__9627__3 = function(a, b, c) {
      var G__9609 = a == null ? x : a;
      var G__9610 = b == null ? y : b;
      var G__9611 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9609, G__9610, G__9611) : f.call(null, G__9609, G__9610, G__9611);
    };
    var G__9627__4 = function() {
      var G__9628__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__9628 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__9629__i = 0, G__9629__a = new Array(arguments.length - 3);
          while (G__9629__i < G__9629__a.length) {
            G__9629__a[G__9629__i] = arguments[G__9629__i + 3];
            ++G__9629__i;
          }
          ds = new cljs.core.IndexedSeq(G__9629__a, 0);
        }
        return G__9628__delegate.call(this, a, b, c, ds);
      };
      G__9628.cljs$lang$maxFixedArity = 3;
      G__9628.cljs$lang$applyTo = function(arglist__9630) {
        var a = cljs.core.first(arglist__9630);
        arglist__9630 = cljs.core.next(arglist__9630);
        var b = cljs.core.first(arglist__9630);
        arglist__9630 = cljs.core.next(arglist__9630);
        var c = cljs.core.first(arglist__9630);
        var ds = cljs.core.rest(arglist__9630);
        return G__9628__delegate(a, b, c, ds);
      };
      G__9628.cljs$core$IFn$_invoke$arity$variadic = G__9628__delegate;
      return G__9628;
    }();
    G__9627 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__9627__2.call(this, a, b);
        case 3:
          return G__9627__3.call(this, a, b, c);
        default:
          var G__9631 = null;
          if (arguments.length > 3) {
            var G__9632__i = 0, G__9632__a = new Array(arguments.length - 3);
            while (G__9632__i < G__9632__a.length) {
              G__9632__a[G__9632__i] = arguments[G__9632__i + 3];
              ++G__9632__i;
            }
            G__9631 = new cljs.core.IndexedSeq(G__9632__a, 0);
          }
          return G__9627__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__9631);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9627.cljs$lang$maxFixedArity = 3;
    G__9627.cljs$lang$applyTo = G__9627__4.cljs$lang$applyTo;
    G__9627.cljs$core$IFn$_invoke$arity$2 = G__9627__2;
    G__9627.cljs$core$IFn$_invoke$arity$3 = G__9627__3;
    G__9627.cljs$core$IFn$_invoke$arity$variadic = G__9627__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9627;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__9633 = null;
    var G__9633__2 = function(a, b) {
      var G__9612 = a == null ? x : a;
      var G__9613 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9612, G__9613) : f.call(null, G__9612, G__9613);
    };
    var G__9633__3 = function(a, b, c) {
      var G__9614 = a == null ? x : a;
      var G__9615 = b == null ? y : b;
      var G__9616 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9614, G__9615, G__9616) : f.call(null, G__9614, G__9615, G__9616);
    };
    var G__9633__4 = function() {
      var G__9634__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__9634 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__9635__i = 0, G__9635__a = new Array(arguments.length - 3);
          while (G__9635__i < G__9635__a.length) {
            G__9635__a[G__9635__i] = arguments[G__9635__i + 3];
            ++G__9635__i;
          }
          ds = new cljs.core.IndexedSeq(G__9635__a, 0);
        }
        return G__9634__delegate.call(this, a, b, c, ds);
      };
      G__9634.cljs$lang$maxFixedArity = 3;
      G__9634.cljs$lang$applyTo = function(arglist__9636) {
        var a = cljs.core.first(arglist__9636);
        arglist__9636 = cljs.core.next(arglist__9636);
        var b = cljs.core.first(arglist__9636);
        arglist__9636 = cljs.core.next(arglist__9636);
        var c = cljs.core.first(arglist__9636);
        var ds = cljs.core.rest(arglist__9636);
        return G__9634__delegate(a, b, c, ds);
      };
      G__9634.cljs$core$IFn$_invoke$arity$variadic = G__9634__delegate;
      return G__9634;
    }();
    G__9633 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__9633__2.call(this, a, b);
        case 3:
          return G__9633__3.call(this, a, b, c);
        default:
          var G__9637 = null;
          if (arguments.length > 3) {
            var G__9638__i = 0, G__9638__a = new Array(arguments.length - 3);
            while (G__9638__i < G__9638__a.length) {
              G__9638__a[G__9638__i] = arguments[G__9638__i + 3];
              ++G__9638__i;
            }
            G__9637 = new cljs.core.IndexedSeq(G__9638__a, 0);
          }
          return G__9633__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__9637);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9633.cljs$lang$maxFixedArity = 3;
    G__9633.cljs$lang$applyTo = G__9633__4.cljs$lang$applyTo;
    G__9633.cljs$core$IFn$_invoke$arity$2 = G__9633__2;
    G__9633.cljs$core$IFn$_invoke$arity$3 = G__9633__3;
    G__9633.cljs$core$IFn$_invoke$arity$variadic = G__9633__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__9633;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args9639 = [];
  var len__7279__auto___9672 = arguments.length;
  var i__7280__auto___9673 = 0;
  while (true) {
    if (i__7280__auto___9673 < len__7279__auto___9672) {
      args9639.push(arguments[i__7280__auto___9673]);
      var G__9674 = i__7280__auto___9673 + 1;
      i__7280__auto___9673 = G__9674;
      continue;
    } else {
    }
    break;
  }
  var G__9641 = args9639.length;
  switch(G__9641) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9639.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__9676 = null;
        var G__9676__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9676__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9676__2 = function(result, input) {
          var G__9644 = result;
          var G__9645 = function() {
            var G__9646 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__9647 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9646, G__9647) : f.call(null, G__9646, G__9647);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9644, G__9645) : rf.call(null, G__9644, G__9645);
        };
        G__9676 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9676__0.call(this);
            case 1:
              return G__9676__1.call(this, result);
            case 2:
              return G__9676__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9676.cljs$core$IFn$_invoke$arity$0 = G__9676__0;
        G__9676.cljs$core$IFn$_invoke$arity$1 = G__9676__1;
        G__9676.cljs$core$IFn$_invoke$arity$2 = G__9676__2;
        return G__9676;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7124__auto___9677 = size;
          var i_9678 = 0;
          while (true) {
            if (i_9678 < n__7124__auto___9677) {
              cljs.core.chunk_append(b, function() {
                var G__9668 = idx + i_9678;
                var G__9669 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9678);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9668, G__9669) : f.call(null, G__9668, G__9669);
              }());
              var G__9679 = i_9678 + 1;
              i_9678 = G__9679;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__9670 = idx;
            var G__9671 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9670, G__9671) : f.call(null, G__9670, G__9671);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args9680 = [];
  var len__7279__auto___9685 = arguments.length;
  var i__7280__auto___9686 = 0;
  while (true) {
    if (i__7280__auto___9686 < len__7279__auto___9685) {
      args9680.push(arguments[i__7280__auto___9686]);
      var G__9687 = i__7280__auto___9686 + 1;
      i__7280__auto___9686 = G__9687;
      continue;
    } else {
    }
    break;
  }
  var G__9682 = args9680.length;
  switch(G__9682) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9680.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__9689 = null;
      var G__9689__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9689__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__9689__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__9689 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9689__0.call(this);
          case 1:
            return G__9689__1.call(this, result);
          case 2:
            return G__9689__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9689.cljs$core$IFn$_invoke$arity$0 = G__9689__0;
      G__9689.cljs$core$IFn$_invoke$arity$1 = G__9689__1;
      G__9689.cljs$core$IFn$_invoke$arity$2 = G__9689__2;
      return G__9689;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7124__auto___9690 = size;
        var i_9691 = 0;
        while (true) {
          if (i_9691 < n__7124__auto___9690) {
            var x_9692 = function() {
              var G__9683 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9691);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9683) : f.call(null, G__9683);
            }();
            if (x_9692 == null) {
            } else {
              cljs.core.chunk_append(b, x_9692);
            }
            var G__9693 = i_9691 + 1;
            i_9691 = G__9693;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__9684 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9684) : f.call(null, G__9684);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__9694 = cljs.core.seq(self__.watches);
  var chunk__9695 = null;
  var count__9696 = 0;
  var i__9697 = 0;
  while (true) {
    if (i__9697 < count__9696) {
      var vec__9698 = chunk__9695.cljs$core$IIndexed$_nth$arity$2(null, i__9697);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9698, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9698, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__9700 = seq__9694;
      var G__9701 = chunk__9695;
      var G__9702 = count__9696;
      var G__9703 = i__9697 + 1;
      seq__9694 = G__9700;
      chunk__9695 = G__9701;
      count__9696 = G__9702;
      i__9697 = G__9703;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__9694);
      if (temp__4657__auto__) {
        var seq__9694__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9694__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__9694__$1);
          var G__9704 = cljs.core.chunk_rest(seq__9694__$1);
          var G__9705 = c__7021__auto__;
          var G__9706 = cljs.core.count(c__7021__auto__);
          var G__9707 = 0;
          seq__9694 = G__9704;
          chunk__9695 = G__9705;
          count__9696 = G__9706;
          i__9697 = G__9707;
          continue;
        } else {
          var vec__9699 = cljs.core.first(seq__9694__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9699, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9699, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__9708 = cljs.core.next(seq__9694__$1);
          var G__9709 = null;
          var G__9710 = 0;
          var G__9711 = 0;
          seq__9694 = G__9708;
          chunk__9695 = G__9709;
          count__9696 = G__9710;
          i__9697 = G__9711;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args9712 = [];
  var len__7279__auto___9720 = arguments.length;
  var i__7280__auto___9721 = 0;
  while (true) {
    if (i__7280__auto___9721 < len__7279__auto___9720) {
      args9712.push(arguments[i__7280__auto___9721]);
      var G__9722 = i__7280__auto___9721 + 1;
      i__7280__auto___9721 = G__9722;
      continue;
    } else {
    }
    break;
  }
  var G__9716 = args9712.length;
  switch(G__9716) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9712.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__9717) {
  var map__9718 = p__9717;
  var map__9718__$1 = (!(map__9718 == null) ? map__9718.cljs$lang$protocol_mask$partition0$ & 64 || map__9718.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9718) : map__9718;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9718__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9718__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq9713) {
  var G__9714 = cljs.core.first(seq9713);
  var seq9713__$1 = cljs.core.next(seq9713);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__9714, seq9713__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str("(validate new-value)")].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args9724 = [];
  var len__7279__auto___9738 = arguments.length;
  var i__7280__auto___9739 = 0;
  while (true) {
    if (i__7280__auto___9739 < len__7279__auto___9738) {
      args9724.push(arguments[i__7280__auto___9739]);
      var G__9740 = i__7280__auto___9739 + 1;
      i__7280__auto___9739 = G__9740;
      continue;
    } else {
    }
    break;
  }
  var G__9731 = args9724.length;
  switch(G__9731) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9724.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__9732 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9732) : f.call(null, G__9732);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__9733 = a.state;
      var G__9734 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9733, G__9734) : f.call(null, G__9733, G__9734);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__9735 = a.state;
      var G__9736 = x;
      var G__9737 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9735, G__9736, G__9737) : f.call(null, G__9735, G__9736, G__9737);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq9725) {
  var G__9726 = cljs.core.first(seq9725);
  var seq9725__$1 = cljs.core.next(seq9725);
  var G__9727 = cljs.core.first(seq9725__$1);
  var seq9725__$2 = cljs.core.next(seq9725__$1);
  var G__9728 = cljs.core.first(seq9725__$2);
  var seq9725__$3 = cljs.core.next(seq9725__$2);
  var G__9729 = cljs.core.first(seq9725__$3);
  var seq9725__$4 = cljs.core.next(seq9725__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9726, G__9727, G__9728, G__9729, seq9725__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args9742 = [];
  var len__7279__auto___9773 = arguments.length;
  var i__7280__auto___9774 = 0;
  while (true) {
    if (i__7280__auto___9774 < len__7279__auto___9773) {
      args9742.push(arguments[i__7280__auto___9774]);
      var G__9775 = i__7280__auto___9774 + 1;
      i__7280__auto___9774 = G__9775;
      continue;
    } else {
    }
    break;
  }
  var G__9744 = args9742.length;
  switch(G__9744) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9742.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__9777 = null;
        var G__9777__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9777__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9777__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__9777 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9777__0.call(this);
            case 1:
              return G__9777__1.call(this, result);
            case 2:
              return G__9777__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9777.cljs$core$IFn$_invoke$arity$0 = G__9777__0;
        G__9777.cljs$core$IFn$_invoke$arity$1 = G__9777__1;
        G__9777.cljs$core$IFn$_invoke$arity$2 = G__9777__2;
        return G__9777;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__7124__auto___9778 = size;
          var i_9779 = 0;
          while (true) {
            if (i_9779 < n__7124__auto___9778) {
              var x_9780 = function() {
                var G__9769 = idx + i_9779;
                var G__9770 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9779);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9769, G__9770) : f.call(null, G__9769, G__9770);
              }();
              if (x_9780 == null) {
              } else {
                cljs.core.chunk_append(b, x_9780);
              }
              var G__9781 = i_9779 + 1;
              i_9779 = G__9781;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__9771 = idx;
            var G__9772 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9771, G__9772) : f.call(null, G__9771, G__9772);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args9788 = [];
  var len__7279__auto___9795 = arguments.length;
  var i__7280__auto___9796 = 0;
  while (true) {
    if (i__7280__auto___9796 < len__7279__auto___9795) {
      args9788.push(arguments[i__7280__auto___9796]);
      var G__9797 = i__7280__auto___9796 + 1;
      i__7280__auto___9796 = G__9797;
      continue;
    } else {
    }
    break;
  }
  var G__9794 = args9788.length;
  switch(G__9794) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9788.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__9799__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__9799 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9800__i = 0, G__9800__a = new Array(arguments.length - 3);
          while (G__9800__i < G__9800__a.length) {
            G__9800__a[G__9800__i] = arguments[G__9800__i + 3];
            ++G__9800__i;
          }
          args = new cljs.core.IndexedSeq(G__9800__a, 0);
        }
        return G__9799__delegate.call(this, x, y, z, args);
      };
      G__9799.cljs$lang$maxFixedArity = 3;
      G__9799.cljs$lang$applyTo = function(arglist__9801) {
        var x = cljs.core.first(arglist__9801);
        arglist__9801 = cljs.core.next(arglist__9801);
        var y = cljs.core.first(arglist__9801);
        arglist__9801 = cljs.core.next(arglist__9801);
        var z = cljs.core.first(arglist__9801);
        var args = cljs.core.rest(arglist__9801);
        return G__9799__delegate(x, y, z, args);
      };
      G__9799.cljs$core$IFn$_invoke$arity$variadic = G__9799__delegate;
      return G__9799;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__9802 = null;
          if (arguments.length > 3) {
            var G__9803__i = 0, G__9803__a = new Array(arguments.length - 3);
            while (G__9803__i < G__9803__a.length) {
              G__9803__a[G__9803__i] = arguments[G__9803__i + 3];
              ++G__9803__i;
            }
            G__9802 = new cljs.core.IndexedSeq(G__9803__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9802);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__9804__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(function(and__6198__auto__) {
              return function(p1__9782_SHARP_) {
                var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__9782_SHARP_) : p1.call(null, p1__9782_SHARP_);
                if (cljs.core.truth_(and__6198__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__9782_SHARP_) : p2.call(null, p1__9782_SHARP_);
                } else {
                  return and__6198__auto____$1;
                }
              };
            }(and__6198__auto__), args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__9804 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9805__i = 0, G__9805__a = new Array(arguments.length - 3);
          while (G__9805__i < G__9805__a.length) {
            G__9805__a[G__9805__i] = arguments[G__9805__i + 3];
            ++G__9805__i;
          }
          args = new cljs.core.IndexedSeq(G__9805__a, 0);
        }
        return G__9804__delegate.call(this, x, y, z, args);
      };
      G__9804.cljs$lang$maxFixedArity = 3;
      G__9804.cljs$lang$applyTo = function(arglist__9806) {
        var x = cljs.core.first(arglist__9806);
        arglist__9806 = cljs.core.next(arglist__9806);
        var y = cljs.core.first(arglist__9806);
        arglist__9806 = cljs.core.next(arglist__9806);
        var z = cljs.core.first(arglist__9806);
        var args = cljs.core.rest(arglist__9806);
        return G__9804__delegate(x, y, z, args);
      };
      G__9804.cljs$core$IFn$_invoke$arity$variadic = G__9804__delegate;
      return G__9804;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__9807 = null;
          if (arguments.length > 3) {
            var G__9808__i = 0, G__9808__a = new Array(arguments.length - 3);
            while (G__9808__i < G__9808__a.length) {
              G__9808__a[G__9808__i] = arguments[G__9808__i + 3];
              ++G__9808__i;
            }
            G__9807 = new cljs.core.IndexedSeq(G__9808__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9807);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__6198__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__6198__auto____$1)) {
            var and__6198__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__6198__auto____$2)) {
              var and__6198__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$3)) {
                var and__6198__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__6198__auto____$4)) {
                  var and__6198__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__6198__auto____$5)) {
                    var and__6198__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__6198__auto____$6)) {
                      var and__6198__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__6198__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__6198__auto____$7;
                      }
                    } else {
                      return and__6198__auto____$6;
                    }
                  } else {
                    return and__6198__auto____$5;
                  }
                } else {
                  return and__6198__auto____$4;
                }
              } else {
                return and__6198__auto____$3;
              }
            } else {
              return and__6198__auto____$2;
            }
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__9809__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__6198__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.every_QMARK_(function(and__6198__auto__) {
              return function(p1__9783_SHARP_) {
                var and__6198__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__9783_SHARP_) : p1.call(null, p1__9783_SHARP_);
                if (cljs.core.truth_(and__6198__auto____$1)) {
                  var and__6198__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__9783_SHARP_) : p2.call(null, p1__9783_SHARP_);
                  if (cljs.core.truth_(and__6198__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__9783_SHARP_) : p3.call(null, p1__9783_SHARP_);
                  } else {
                    return and__6198__auto____$2;
                  }
                } else {
                  return and__6198__auto____$1;
                }
              };
            }(and__6198__auto__), args);
          } else {
            return and__6198__auto__;
          }
        }());
      };
      var G__9809 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9810__i = 0, G__9810__a = new Array(arguments.length - 3);
          while (G__9810__i < G__9810__a.length) {
            G__9810__a[G__9810__i] = arguments[G__9810__i + 3];
            ++G__9810__i;
          }
          args = new cljs.core.IndexedSeq(G__9810__a, 0);
        }
        return G__9809__delegate.call(this, x, y, z, args);
      };
      G__9809.cljs$lang$maxFixedArity = 3;
      G__9809.cljs$lang$applyTo = function(arglist__9811) {
        var x = cljs.core.first(arglist__9811);
        arglist__9811 = cljs.core.next(arglist__9811);
        var y = cljs.core.first(arglist__9811);
        arglist__9811 = cljs.core.next(arglist__9811);
        var z = cljs.core.first(arglist__9811);
        var args = cljs.core.rest(arglist__9811);
        return G__9809__delegate(x, y, z, args);
      };
      G__9809.cljs$core$IFn$_invoke$arity$variadic = G__9809__delegate;
      return G__9809;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__9812 = null;
          if (arguments.length > 3) {
            var G__9813__i = 0, G__9813__a = new Array(arguments.length - 3);
            while (G__9813__i < G__9813__a.length) {
              G__9813__a[G__9813__i] = arguments[G__9813__i + 3];
              ++G__9813__i;
            }
            G__9812 = new cljs.core.IndexedSeq(G__9813__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9812);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__9784_SHARP_) {
            return p1__9784_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9784_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__9784_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__9785_SHARP_) {
            var and__6198__auto__ = p1__9785_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9785_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__9785_SHARP_.call(null, x);
            if (cljs.core.truth_(and__6198__auto__)) {
              return p1__9785_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9785_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__9785_SHARP_.call(null, y);
            } else {
              return and__6198__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__9786_SHARP_) {
            var and__6198__auto__ = p1__9786_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9786_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__9786_SHARP_.call(null, x);
            if (cljs.core.truth_(and__6198__auto__)) {
              var and__6198__auto____$1 = p1__9786_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9786_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__9786_SHARP_.call(null, y);
              if (cljs.core.truth_(and__6198__auto____$1)) {
                return p1__9786_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9786_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__9786_SHARP_.call(null, z);
              } else {
                return and__6198__auto____$1;
              }
            } else {
              return and__6198__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__9814__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__6198__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__6198__auto__)) {
              return cljs.core.every_QMARK_(function(and__6198__auto__, ps__$1) {
                return function(p1__9787_SHARP_) {
                  return cljs.core.every_QMARK_(p1__9787_SHARP_, args);
                };
              }(and__6198__auto__, ps__$1), ps__$1);
            } else {
              return and__6198__auto__;
            }
          }());
        };
        var G__9814 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9815__i = 0, G__9815__a = new Array(arguments.length - 3);
            while (G__9815__i < G__9815__a.length) {
              G__9815__a[G__9815__i] = arguments[G__9815__i + 3];
              ++G__9815__i;
            }
            args = new cljs.core.IndexedSeq(G__9815__a, 0);
          }
          return G__9814__delegate.call(this, x, y, z, args);
        };
        G__9814.cljs$lang$maxFixedArity = 3;
        G__9814.cljs$lang$applyTo = function(arglist__9816) {
          var x = cljs.core.first(arglist__9816);
          arglist__9816 = cljs.core.next(arglist__9816);
          var y = cljs.core.first(arglist__9816);
          arglist__9816 = cljs.core.next(arglist__9816);
          var z = cljs.core.first(arglist__9816);
          var args = cljs.core.rest(arglist__9816);
          return G__9814__delegate(x, y, z, args);
        };
        G__9814.cljs$core$IFn$_invoke$arity$variadic = G__9814__delegate;
        return G__9814;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__9817 = null;
            if (arguments.length > 3) {
              var G__9818__i = 0, G__9818__a = new Array(arguments.length - 3);
              while (G__9818__i < G__9818__a.length) {
                G__9818__a[G__9818__i] = arguments[G__9818__i + 3];
                ++G__9818__i;
              }
              G__9817 = new cljs.core.IndexedSeq(G__9818__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9817);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq9789) {
  var G__9790 = cljs.core.first(seq9789);
  var seq9789__$1 = cljs.core.next(seq9789);
  var G__9791 = cljs.core.first(seq9789__$1);
  var seq9789__$2 = cljs.core.next(seq9789__$1);
  var G__9792 = cljs.core.first(seq9789__$2);
  var seq9789__$3 = cljs.core.next(seq9789__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__9790, G__9791, G__9792, seq9789__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args9825 = [];
  var len__7279__auto___9832 = arguments.length;
  var i__7280__auto___9833 = 0;
  while (true) {
    if (i__7280__auto___9833 < len__7279__auto___9832) {
      args9825.push(arguments[i__7280__auto___9833]);
      var G__9834 = i__7280__auto___9833 + 1;
      i__7280__auto___9833 = G__9834;
      continue;
    } else {
    }
    break;
  }
  var G__9831 = args9825.length;
  switch(G__9831) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9825.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__6210__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__6210__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__9836__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__9836 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9837__i = 0, G__9837__a = new Array(arguments.length - 3);
          while (G__9837__i < G__9837__a.length) {
            G__9837__a[G__9837__i] = arguments[G__9837__i + 3];
            ++G__9837__i;
          }
          args = new cljs.core.IndexedSeq(G__9837__a, 0);
        }
        return G__9836__delegate.call(this, x, y, z, args);
      };
      G__9836.cljs$lang$maxFixedArity = 3;
      G__9836.cljs$lang$applyTo = function(arglist__9838) {
        var x = cljs.core.first(arglist__9838);
        arglist__9838 = cljs.core.next(arglist__9838);
        var y = cljs.core.first(arglist__9838);
        arglist__9838 = cljs.core.next(arglist__9838);
        var z = cljs.core.first(arglist__9838);
        var args = cljs.core.rest(arglist__9838);
        return G__9836__delegate(x, y, z, args);
      };
      G__9836.cljs$core$IFn$_invoke$arity$variadic = G__9836__delegate;
      return G__9836;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__9839 = null;
          if (arguments.length > 3) {
            var G__9840__i = 0, G__9840__a = new Array(arguments.length - 3);
            while (G__9840__i < G__9840__a.length) {
              G__9840__a[G__9840__i] = arguments[G__9840__i + 3];
              ++G__9840__i;
            }
            G__9839 = new cljs.core.IndexedSeq(G__9840__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9839);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__9841__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(function(or__6210__auto__) {
            return function(p1__9819_SHARP_) {
              var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__9819_SHARP_) : p1.call(null, p1__9819_SHARP_);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__9819_SHARP_) : p2.call(null, p1__9819_SHARP_);
              }
            };
          }(or__6210__auto__), args);
        }
      };
      var G__9841 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9842__i = 0, G__9842__a = new Array(arguments.length - 3);
          while (G__9842__i < G__9842__a.length) {
            G__9842__a[G__9842__i] = arguments[G__9842__i + 3];
            ++G__9842__i;
          }
          args = new cljs.core.IndexedSeq(G__9842__a, 0);
        }
        return G__9841__delegate.call(this, x, y, z, args);
      };
      G__9841.cljs$lang$maxFixedArity = 3;
      G__9841.cljs$lang$applyTo = function(arglist__9843) {
        var x = cljs.core.first(arglist__9843);
        arglist__9843 = cljs.core.next(arglist__9843);
        var y = cljs.core.first(arglist__9843);
        arglist__9843 = cljs.core.next(arglist__9843);
        var z = cljs.core.first(arglist__9843);
        var args = cljs.core.rest(arglist__9843);
        return G__9841__delegate(x, y, z, args);
      };
      G__9841.cljs$core$IFn$_invoke$arity$variadic = G__9841__delegate;
      return G__9841;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__9844 = null;
          if (arguments.length > 3) {
            var G__9845__i = 0, G__9845__a = new Array(arguments.length - 3);
            while (G__9845__i < G__9845__a.length) {
              G__9845__a[G__9845__i] = arguments[G__9845__i + 3];
              ++G__9845__i;
            }
            G__9844 = new cljs.core.IndexedSeq(G__9845__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9844);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__6210__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var or__6210__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__6210__auto____$1)) {
          return or__6210__auto____$1;
        } else {
          var or__6210__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__6210__auto____$2)) {
            return or__6210__auto____$2;
          } else {
            var or__6210__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__6210__auto____$3)) {
              return or__6210__auto____$3;
            } else {
              var or__6210__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$4)) {
                return or__6210__auto____$4;
              } else {
                var or__6210__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__6210__auto____$5)) {
                  return or__6210__auto____$5;
                } else {
                  var or__6210__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__6210__auto____$6)) {
                    return or__6210__auto____$6;
                  } else {
                    var or__6210__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__6210__auto____$7)) {
                      return or__6210__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__9846__delegate = function(x, y, z, args) {
        var or__6210__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.some(function(or__6210__auto__) {
            return function(p1__9820_SHARP_) {
              var or__6210__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__9820_SHARP_) : p1.call(null, p1__9820_SHARP_);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                var or__6210__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__9820_SHARP_) : p2.call(null, p1__9820_SHARP_);
                if (cljs.core.truth_(or__6210__auto____$2)) {
                  return or__6210__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__9820_SHARP_) : p3.call(null, p1__9820_SHARP_);
                }
              }
            };
          }(or__6210__auto__), args);
        }
      };
      var G__9846 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9847__i = 0, G__9847__a = new Array(arguments.length - 3);
          while (G__9847__i < G__9847__a.length) {
            G__9847__a[G__9847__i] = arguments[G__9847__i + 3];
            ++G__9847__i;
          }
          args = new cljs.core.IndexedSeq(G__9847__a, 0);
        }
        return G__9846__delegate.call(this, x, y, z, args);
      };
      G__9846.cljs$lang$maxFixedArity = 3;
      G__9846.cljs$lang$applyTo = function(arglist__9848) {
        var x = cljs.core.first(arglist__9848);
        arglist__9848 = cljs.core.next(arglist__9848);
        var y = cljs.core.first(arglist__9848);
        arglist__9848 = cljs.core.next(arglist__9848);
        var z = cljs.core.first(arglist__9848);
        var args = cljs.core.rest(arglist__9848);
        return G__9846__delegate(x, y, z, args);
      };
      G__9846.cljs$core$IFn$_invoke$arity$variadic = G__9846__delegate;
      return G__9846;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__9849 = null;
          if (arguments.length > 3) {
            var G__9850__i = 0, G__9850__a = new Array(arguments.length - 3);
            while (G__9850__i < G__9850__a.length) {
              G__9850__a[G__9850__i] = arguments[G__9850__i + 3];
              ++G__9850__i;
            }
            G__9849 = new cljs.core.IndexedSeq(G__9850__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9849);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9821_SHARP_) {
            return p1__9821_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9821_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__9821_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9822_SHARP_) {
            var or__6210__auto__ = p1__9822_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9822_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__9822_SHARP_.call(null, x);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return p1__9822_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9822_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__9822_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9823_SHARP_) {
            var or__6210__auto__ = p1__9823_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9823_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__9823_SHARP_.call(null, x);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              var or__6210__auto____$1 = p1__9823_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9823_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__9823_SHARP_.call(null, y);
              if (cljs.core.truth_(or__6210__auto____$1)) {
                return or__6210__auto____$1;
              } else {
                return p1__9823_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9823_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__9823_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__9851__delegate = function(x, y, z, args) {
          var or__6210__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            return cljs.core.some(function(or__6210__auto__, ps__$1) {
              return function(p1__9824_SHARP_) {
                return cljs.core.some(p1__9824_SHARP_, args);
              };
            }(or__6210__auto__, ps__$1), ps__$1);
          }
        };
        var G__9851 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9852__i = 0, G__9852__a = new Array(arguments.length - 3);
            while (G__9852__i < G__9852__a.length) {
              G__9852__a[G__9852__i] = arguments[G__9852__i + 3];
              ++G__9852__i;
            }
            args = new cljs.core.IndexedSeq(G__9852__a, 0);
          }
          return G__9851__delegate.call(this, x, y, z, args);
        };
        G__9851.cljs$lang$maxFixedArity = 3;
        G__9851.cljs$lang$applyTo = function(arglist__9853) {
          var x = cljs.core.first(arglist__9853);
          arglist__9853 = cljs.core.next(arglist__9853);
          var y = cljs.core.first(arglist__9853);
          arglist__9853 = cljs.core.next(arglist__9853);
          var z = cljs.core.first(arglist__9853);
          var args = cljs.core.rest(arglist__9853);
          return G__9851__delegate(x, y, z, args);
        };
        G__9851.cljs$core$IFn$_invoke$arity$variadic = G__9851__delegate;
        return G__9851;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__9854 = null;
            if (arguments.length > 3) {
              var G__9855__i = 0, G__9855__a = new Array(arguments.length - 3);
              while (G__9855__i < G__9855__a.length) {
                G__9855__a[G__9855__i] = arguments[G__9855__i + 3];
                ++G__9855__i;
              }
              G__9854 = new cljs.core.IndexedSeq(G__9855__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9854);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq9826) {
  var G__9827 = cljs.core.first(seq9826);
  var seq9826__$1 = cljs.core.next(seq9826);
  var G__9828 = cljs.core.first(seq9826__$1);
  var seq9826__$2 = cljs.core.next(seq9826__$1);
  var G__9829 = cljs.core.first(seq9826__$2);
  var seq9826__$3 = cljs.core.next(seq9826__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__9827, G__9828, G__9829, seq9826__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args9857 = [];
  var len__7279__auto___9877 = arguments.length;
  var i__7280__auto___9878 = 0;
  while (true) {
    if (i__7280__auto___9878 < len__7279__auto___9877) {
      args9857.push(arguments[i__7280__auto___9878]);
      var G__9879 = i__7280__auto___9878 + 1;
      i__7280__auto___9878 = G__9879;
      continue;
    } else {
    }
    break;
  }
  var G__9864 = args9857.length;
  switch(G__9864) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9857.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__9881 = null;
      var G__9881__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9881__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__9881__2 = function(result, input) {
        var G__9865 = result;
        var G__9866 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9865, G__9866) : rf.call(null, G__9865, G__9866);
      };
      var G__9881__3 = function() {
        var G__9882__delegate = function(result, input, inputs) {
          var G__9867 = result;
          var G__9868 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9867, G__9868) : rf.call(null, G__9867, G__9868);
        };
        var G__9882 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__9883__i = 0, G__9883__a = new Array(arguments.length - 2);
            while (G__9883__i < G__9883__a.length) {
              G__9883__a[G__9883__i] = arguments[G__9883__i + 2];
              ++G__9883__i;
            }
            inputs = new cljs.core.IndexedSeq(G__9883__a, 0);
          }
          return G__9882__delegate.call(this, result, input, inputs);
        };
        G__9882.cljs$lang$maxFixedArity = 2;
        G__9882.cljs$lang$applyTo = function(arglist__9884) {
          var result = cljs.core.first(arglist__9884);
          arglist__9884 = cljs.core.next(arglist__9884);
          var input = cljs.core.first(arglist__9884);
          var inputs = cljs.core.rest(arglist__9884);
          return G__9882__delegate(result, input, inputs);
        };
        G__9882.cljs$core$IFn$_invoke$arity$variadic = G__9882__delegate;
        return G__9882;
      }();
      G__9881 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__9881__0.call(this);
          case 1:
            return G__9881__1.call(this, result);
          case 2:
            return G__9881__2.call(this, result, input);
          default:
            var G__9885 = null;
            if (arguments.length > 2) {
              var G__9886__i = 0, G__9886__a = new Array(arguments.length - 2);
              while (G__9886__i < G__9886__a.length) {
                G__9886__a[G__9886__i] = arguments[G__9886__i + 2];
                ++G__9886__i;
              }
              G__9885 = new cljs.core.IndexedSeq(G__9886__a, 0);
            }
            return G__9881__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__9885);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9881.cljs$lang$maxFixedArity = 2;
      G__9881.cljs$lang$applyTo = G__9881__3.cljs$lang$applyTo;
      G__9881.cljs$core$IFn$_invoke$arity$0 = G__9881__0;
      G__9881.cljs$core$IFn$_invoke$arity$1 = G__9881__1;
      G__9881.cljs$core$IFn$_invoke$arity$2 = G__9881__2;
      G__9881.cljs$core$IFn$_invoke$arity$variadic = G__9881__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__9881;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7124__auto___9887 = size;
        var i_9888 = 0;
        while (true) {
          if (i_9888 < n__7124__auto___9887) {
            cljs.core.chunk_append(b, function() {
              var G__9869 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9888);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9869) : f.call(null, G__9869);
            }());
            var G__9889 = i_9888 + 1;
            i_9888 = G__9889;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__9870 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9870) : f.call(null, G__9870);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__9871 = cljs.core.first(s1);
        var G__9872 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9871, G__9872) : f.call(null, G__9871, G__9872);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__9873 = cljs.core.first(s1);
        var G__9874 = cljs.core.first(s2);
        var G__9875 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9873, G__9874, G__9875) : f.call(null, G__9873, G__9874, G__9875);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__9856_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__9856_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq9858) {
  var G__9859 = cljs.core.first(seq9858);
  var seq9858__$1 = cljs.core.next(seq9858);
  var G__9860 = cljs.core.first(seq9858__$1);
  var seq9858__$2 = cljs.core.next(seq9858__$1);
  var G__9861 = cljs.core.first(seq9858__$2);
  var seq9858__$3 = cljs.core.next(seq9858__$2);
  var G__9862 = cljs.core.first(seq9858__$3);
  var seq9858__$4 = cljs.core.next(seq9858__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__9859, G__9860, G__9861, G__9862, seq9858__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args9890 = [];
  var len__7279__auto___9893 = arguments.length;
  var i__7280__auto___9894 = 0;
  while (true) {
    if (i__7280__auto___9894 < len__7279__auto___9893) {
      args9890.push(arguments[i__7280__auto___9894]);
      var G__9895 = i__7280__auto___9894 + 1;
      i__7280__auto___9894 = G__9895;
      continue;
    } else {
    }
    break;
  }
  var G__9892 = args9890.length;
  switch(G__9892) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9890.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__9897 = null;
        var G__9897__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9897__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9897__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__9897 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9897__0.call(this);
            case 1:
              return G__9897__1.call(this, result);
            case 2:
              return G__9897__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9897.cljs$core$IFn$_invoke$arity$0 = G__9897__0;
        G__9897.cljs$core$IFn$_invoke$arity$1 = G__9897__1;
        G__9897.cljs$core$IFn$_invoke$arity$2 = G__9897__2;
        return G__9897;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args9898 = [];
  var len__7279__auto___9901 = arguments.length;
  var i__7280__auto___9902 = 0;
  while (true) {
    if (i__7280__auto___9902 < len__7279__auto___9901) {
      args9898.push(arguments[i__7280__auto___9902]);
      var G__9903 = i__7280__auto___9902 + 1;
      i__7280__auto___9902 = G__9903;
      continue;
    } else {
    }
    break;
  }
  var G__9900 = args9898.length;
  switch(G__9900) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9898.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__9905 = null;
        var G__9905__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9905__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9905__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__9905 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9905__0.call(this);
            case 1:
              return G__9905__1.call(this, result);
            case 2:
              return G__9905__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9905.cljs$core$IFn$_invoke$arity$0 = G__9905__0;
        G__9905.cljs$core$IFn$_invoke$arity$1 = G__9905__1;
        G__9905.cljs$core$IFn$_invoke$arity$2 = G__9905__2;
        return G__9905;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__9906 = n__$1 - 1;
        var G__9907 = cljs.core.rest(s);
        n__$1 = G__9906;
        coll__$1 = G__9907;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args9908 = [];
  var len__7279__auto___9911 = arguments.length;
  var i__7280__auto___9912 = 0;
  while (true) {
    if (i__7280__auto___9912 < len__7279__auto___9911) {
      args9908.push(arguments[i__7280__auto___9912]);
      var G__9913 = i__7280__auto___9912 + 1;
      i__7280__auto___9912 = G__9913;
      continue;
    } else {
    }
    break;
  }
  var G__9910 = args9908.length;
  switch(G__9910) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9908.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__9915 = cljs.core.next(s);
      var G__9916 = cljs.core.next(lead);
      s = G__9915;
      lead = G__9916;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args9917 = [];
  var len__7279__auto___9922 = arguments.length;
  var i__7280__auto___9923 = 0;
  while (true) {
    if (i__7280__auto___9923 < len__7279__auto___9922) {
      args9917.push(arguments[i__7280__auto___9923]);
      var G__9924 = i__7280__auto___9923 + 1;
      i__7280__auto___9923 = G__9924;
      continue;
    } else {
    }
    break;
  }
  var G__9919 = args9917.length;
  switch(G__9919) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9917.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__9926 = null;
        var G__9926__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9926__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9926__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__6198__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__6198__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__6198__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__9926 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9926__0.call(this);
            case 1:
              return G__9926__1.call(this, result);
            case 2:
              return G__9926__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9926.cljs$core$IFn$_invoke$arity$0 = G__9926__0;
        G__9926.cljs$core$IFn$_invoke$arity$1 = G__9926__1;
        G__9926.cljs$core$IFn$_invoke$arity$2 = G__9926__2;
        return G__9926;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = s;
        if (and__6198__auto__) {
          var G__9921 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9921) : pred__$1.call(null, G__9921);
        } else {
          return and__6198__auto__;
        }
      }())) {
        var G__9927 = pred__$1;
        var G__9928 = cljs.core.rest(s);
        pred__$1 = G__9927;
        coll__$1 = G__9928;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args9929 = [];
  var len__7279__auto___9932 = arguments.length;
  var i__7280__auto___9933 = 0;
  while (true) {
    if (i__7280__auto___9933 < len__7279__auto___9932) {
      args9929.push(arguments[i__7280__auto___9933]);
      var G__9934 = i__7280__auto___9933 + 1;
      i__7280__auto___9933 = G__9934;
      continue;
    } else {
    }
    break;
  }
  var G__9931 = args9929.length;
  switch(G__9931) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9929.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args9936 = [];
  var len__7279__auto___9939 = arguments.length;
  var i__7280__auto___9940 = 0;
  while (true) {
    if (i__7280__auto___9940 < len__7279__auto___9939) {
      args9936.push(arguments[i__7280__auto___9940]);
      var G__9941 = i__7280__auto___9940 + 1;
      i__7280__auto___9940 = G__9941;
      continue;
    } else {
    }
    break;
  }
  var G__9938 = args9936.length;
  switch(G__9938) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9936.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args9945 = [];
  var len__7279__auto___9951 = arguments.length;
  var i__7280__auto___9952 = 0;
  while (true) {
    if (i__7280__auto___9952 < len__7279__auto___9951) {
      args9945.push(arguments[i__7280__auto___9952]);
      var G__9953 = i__7280__auto___9952 + 1;
      i__7280__auto___9952 = G__9953;
      continue;
    } else {
    }
    break;
  }
  var G__9950 = args9945.length;
  switch(G__9950) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9945.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq9946) {
  var G__9947 = cljs.core.first(seq9946);
  var seq9946__$1 = cljs.core.next(seq9946);
  var G__9948 = cljs.core.first(seq9946__$1);
  var seq9946__$2 = cljs.core.next(seq9946__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__9947, G__9948, seq9946__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args9955 = [];
  var len__7279__auto___9958 = arguments.length;
  var i__7280__auto___9959 = 0;
  while (true) {
    if (i__7280__auto___9959 < len__7279__auto___9958) {
      args9955.push(arguments[i__7280__auto___9959]);
      var G__9960 = i__7280__auto___9959 + 1;
      i__7280__auto___9959 = G__9960;
      continue;
    } else {
    }
    break;
  }
  var G__9957 = args9955.length;
  switch(G__9957) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9955.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__9962 = null;
        var G__9962__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9962__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9962__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__9962 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9962__0.call(this);
            case 1:
              return G__9962__1.call(this, result);
            case 2:
              return G__9962__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9962.cljs$core$IFn$_invoke$arity$0 = G__9962__0;
        G__9962.cljs$core$IFn$_invoke$arity$1 = G__9962__1;
        G__9962.cljs$core$IFn$_invoke$arity$2 = G__9962__2;
        return G__9962;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args9971 = [];
  var len__7279__auto___9976 = arguments.length;
  var i__7280__auto___9977 = 0;
  while (true) {
    if (i__7280__auto___9977 < len__7279__auto___9976) {
      args9971.push(arguments[i__7280__auto___9977]);
      var G__9978 = i__7280__auto___9977 + 1;
      i__7280__auto___9977 = G__9978;
      continue;
    } else {
    }
    break;
  }
  var G__9975 = args9971.length;
  switch(G__9975) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args9971.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq9972) {
  var G__9973 = cljs.core.first(seq9972);
  var seq9972__$1 = cljs.core.next(seq9972);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__9973, seq9972__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args9980 = [];
  var len__7279__auto___9984 = arguments.length;
  var i__7280__auto___9985 = 0;
  while (true) {
    if (i__7280__auto___9985 < len__7279__auto___9984) {
      args9980.push(arguments[i__7280__auto___9985]);
      var G__9986 = i__7280__auto___9985 + 1;
      i__7280__auto___9985 = G__9986;
      continue;
    } else {
    }
    break;
  }
  var G__9982 = args9980.length;
  switch(G__9982) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9980.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__9988 = null;
      var G__9988__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9988__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__9988__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__9988 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9988__0.call(this);
          case 1:
            return G__9988__1.call(this, result);
          case 2:
            return G__9988__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9988.cljs$core$IFn$_invoke$arity$0 = G__9988__0;
      G__9988.cljs$core$IFn$_invoke$arity$1 = G__9988__1;
      G__9988.cljs$core$IFn$_invoke$arity$2 = G__9988__2;
      return G__9988;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__7124__auto___9989 = size;
        var i_9990 = 0;
        while (true) {
          if (i_9990 < n__7124__auto___9989) {
            if (cljs.core.truth_(function() {
              var G__9983 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9990);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9983) : pred.call(null, G__9983);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9990));
            } else {
            }
            var G__9991 = i_9990 + 1;
            i_9990 = G__9991;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args9992 = [];
  var len__7279__auto___9995 = arguments.length;
  var i__7280__auto___9996 = 0;
  while (true) {
    if (i__7280__auto___9996 < len__7279__auto___9995) {
      args9992.push(arguments[i__7280__auto___9996]);
      var G__9997 = i__7280__auto___9996 + 1;
      i__7280__auto___9996 = G__9997;
      continue;
    } else {
    }
    break;
  }
  var G__9994 = args9992.length;
  switch(G__9994) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9992.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__9999_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__9999_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args10000 = [];
  var len__7279__auto___10005 = arguments.length;
  var i__7280__auto___10006 = 0;
  while (true) {
    if (i__7280__auto___10006 < len__7279__auto___10005) {
      args10000.push(arguments[i__7280__auto___10006]);
      var G__10007 = i__7280__auto___10006 + 1;
      i__7280__auto___10006 = G__10007;
      continue;
    } else {
    }
    break;
  }
  var G__10002 = args10000.length;
  switch(G__10002) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10000.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args10009 = [];
  var len__7279__auto___10017 = arguments.length;
  var i__7280__auto___10018 = 0;
  while (true) {
    if (i__7280__auto___10018 < len__7279__auto___10017) {
      args10009.push(arguments[i__7280__auto___10018]);
      var G__10019 = i__7280__auto___10018 + 1;
      i__7280__auto___10018 = G__10019;
      continue;
    } else {
    }
    break;
  }
  var G__10016 = args10009.length;
  switch(G__10016) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args10009.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__7298__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq10010) {
  var G__10011 = cljs.core.first(seq10010);
  var seq10010__$1 = cljs.core.next(seq10010);
  var G__10012 = cljs.core.first(seq10010__$1);
  var seq10010__$2 = cljs.core.next(seq10010__$1);
  var G__10013 = cljs.core.first(seq10010__$2);
  var seq10010__$3 = cljs.core.next(seq10010__$2);
  var G__10014 = cljs.core.first(seq10010__$3);
  var seq10010__$4 = cljs.core.next(seq10010__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__10011, G__10012, G__10013, G__10014, seq10010__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args10021 = [];
  var len__7279__auto___10024 = arguments.length;
  var i__7280__auto___10025 = 0;
  while (true) {
    if (i__7280__auto___10025 < len__7279__auto___10024) {
      args10021.push(arguments[i__7280__auto___10025]);
      var G__10026 = i__7280__auto___10025 + 1;
      i__7280__auto___10025 = G__10026;
      continue;
    } else {
    }
    break;
  }
  var G__10023 = args10021.length;
  switch(G__10023) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10021.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args10028 = [];
  var len__7279__auto___10032 = arguments.length;
  var i__7280__auto___10033 = 0;
  while (true) {
    if (i__7280__auto___10033 < len__7279__auto___10032) {
      args10028.push(arguments[i__7280__auto___10033]);
      var G__10034 = i__7280__auto___10033 + 1;
      i__7280__auto___10033 = G__10034;
      continue;
    } else {
    }
    break;
  }
  var G__10030 = args10028.length;
  switch(G__10030) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10028.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__10036 = sentinel;
          var G__10037 = m__$2;
          var G__10038 = cljs.core.next(ks__$1);
          sentinel = G__10036;
          m__$1 = G__10037;
          ks__$1 = G__10038;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__10039, v) {
  var vec__10044 = p__10039;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10044, 0, null);
  var ks = cljs.core.nthnext(vec__10044, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args10045 = [];
  var len__7279__auto___10075 = arguments.length;
  var i__7280__auto___10076 = 0;
  while (true) {
    if (i__7280__auto___10076 < len__7279__auto___10075) {
      args10045.push(arguments[i__7280__auto___10076]);
      var G__10077 = i__7280__auto___10076 + 1;
      i__7280__auto___10076 = G__10077;
      continue;
    } else {
    }
    break;
  }
  var G__10054 = args10045.length;
  switch(G__10054) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args10045.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7298__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__10055, f) {
  var vec__10056 = p__10055;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10056, 0, null);
  var ks = cljs.core.nthnext(vec__10056, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10057 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10057) : f.call(null, G__10057);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__10058, f, a) {
  var vec__10059 = p__10058;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10059, 0, null);
  var ks = cljs.core.nthnext(vec__10059, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10060 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10061 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10060, G__10061) : f.call(null, G__10060, G__10061);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__10062, f, a, b) {
  var vec__10063 = p__10062;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10063, 0, null);
  var ks = cljs.core.nthnext(vec__10063, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10064 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10065 = a;
      var G__10066 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10064, G__10065, G__10066) : f.call(null, G__10064, G__10065, G__10066);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__10067, f, a, b, c) {
  var vec__10068 = p__10067;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10068, 0, null);
  var ks = cljs.core.nthnext(vec__10068, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10069 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10070 = a;
      var G__10071 = b;
      var G__10072 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10069, G__10070, G__10071, G__10072) : f.call(null, G__10069, G__10070, G__10071, G__10072);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__10073, f, a, b, c, args) {
  var vec__10074 = p__10073;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10074, 0, null);
  var ks = cljs.core.nthnext(vec__10074, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq10046) {
  var G__10047 = cljs.core.first(seq10046);
  var seq10046__$1 = cljs.core.next(seq10046);
  var G__10048 = cljs.core.first(seq10046__$1);
  var seq10046__$2 = cljs.core.next(seq10046__$1);
  var G__10049 = cljs.core.first(seq10046__$2);
  var seq10046__$3 = cljs.core.next(seq10046__$2);
  var G__10050 = cljs.core.first(seq10046__$3);
  var seq10046__$4 = cljs.core.next(seq10046__$3);
  var G__10051 = cljs.core.first(seq10046__$4);
  var seq10046__$5 = cljs.core.next(seq10046__$4);
  var G__10052 = cljs.core.first(seq10046__$5);
  var seq10046__$6 = cljs.core.next(seq10046__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__10047, G__10048, G__10049, G__10050, G__10051, G__10052, seq10046__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args10079 = [];
  var len__7279__auto___10099 = arguments.length;
  var i__7280__auto___10100 = 0;
  while (true) {
    if (i__7280__auto___10100 < len__7279__auto___10099) {
      args10079.push(arguments[i__7280__auto___10100]);
      var G__10101 = i__7280__auto___10100 + 1;
      i__7280__auto___10100 = G__10101;
      continue;
    } else {
    }
    break;
  }
  var G__10088 = args10079.length;
  switch(G__10088) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args10079.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__7298__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10089 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10089) : f.call(null, G__10089);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10090 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10091 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10090, G__10091) : f.call(null, G__10090, G__10091);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10092 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10093 = x;
    var G__10094 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10092, G__10093, G__10094) : f.call(null, G__10092, G__10093, G__10094);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10095 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10096 = x;
    var G__10097 = y;
    var G__10098 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10095, G__10096, G__10097, G__10098) : f.call(null, G__10095, G__10096, G__10097, G__10098);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq10080) {
  var G__10081 = cljs.core.first(seq10080);
  var seq10080__$1 = cljs.core.next(seq10080);
  var G__10082 = cljs.core.first(seq10080__$1);
  var seq10080__$2 = cljs.core.next(seq10080__$1);
  var G__10083 = cljs.core.first(seq10080__$2);
  var seq10080__$3 = cljs.core.next(seq10080__$2);
  var G__10084 = cljs.core.first(seq10080__$3);
  var seq10080__$4 = cljs.core.next(seq10080__$3);
  var G__10085 = cljs.core.first(seq10080__$4);
  var seq10080__$5 = cljs.core.next(seq10080__$4);
  var G__10086 = cljs.core.first(seq10080__$5);
  var seq10080__$6 = cljs.core.next(seq10080__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__10081, G__10082, G__10083, G__10084, G__10085, G__10086, seq10080__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__10103 = ll - 5;
      var G__10104 = r;
      ll = G__10103;
      ret = G__10104;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__10109 = cljs.core.pv_aget(node, 0);
      var G__10110 = level - 5;
      node = G__10109;
      level = G__10110;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__10111 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__10112 = level - 5;
        node = G__10111;
        level = G__10112;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__10131 = null;
  var G__10131__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10131__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10131 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10131__1.call(this, x);
      case 2:
        return G__10131__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10131.cljs$core$IFn$_invoke$arity$1 = G__10131__1;
  G__10131.cljs$core$IFn$_invoke$arity$2 = G__10131__2;
  return G__10131;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__10132 = null;
  var G__10132__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10132__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10132 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10132__1.call(this, x);
      case 2:
        return G__10132__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10132.cljs$core$IFn$_invoke$arity$1 = G__10132__1;
  G__10132.cljs$core$IFn$_invoke$arity$2 = G__10132__2;
  return G__10132;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__10122 = init__$2;
              var G__10123 = j + i;
              var G__10124 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10122, G__10123, G__10124) : f.call(null, G__10122, G__10123, G__10124);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__10133 = j + 1;
              var G__10134 = init__$3;
              j = G__10133;
              init__$2 = G__10134;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10135 = i + len;
        var G__10136 = init__$2;
        i = G__10135;
        init__$1 = G__10136;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__10125 = init__$2;
              var G__10126 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10125, G__10126) : f.call(null, G__10125, G__10126);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__10137 = j + 1;
              var G__10138 = init__$3;
              j = G__10137;
              init__$2 = G__10138;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10139 = i + len;
        var G__10140 = init__$2;
        i = G__10139;
        init__$1 = G__10140;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__10127 = coll__$1;
      var G__10128 = cljs.core.first_array_for_longvec(coll__$1);
      var G__10129 = 0;
      var G__10130 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10127, G__10128, G__10129, G__10130) : cljs.core.chunked_seq.call(null, G__10127, G__10128, G__10129, G__10130);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__7124__auto___10141 = len;
    var i_10142 = 0;
    while (true) {
      if (i_10142 < n__7124__auto___10141) {
        new_tail[i_10142] = self__.tail[i_10142];
        var G__10143 = i_10142 + 1;
        i_10142 = G__10143;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10144 = null;
  var G__10144__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10144__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10144 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10144__2.call(this, self__, k);
      case 3:
        return G__10144__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10144.cljs$core$IFn$_invoke$arity$2 = G__10144__2;
  G__10144.cljs$core$IFn$_invoke$arity$3 = G__10144__3;
  return G__10144;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args10121) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10121)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__10145 = i + 1;
        var G__10146 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__10145;
        out = G__10146;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10148 = arguments.length;
  var i__7280__auto___10149 = 0;
  while (true) {
    if (i__7280__auto___10149 < len__7279__auto___10148) {
      args__7286__auto__.push(arguments[i__7280__auto___10149]);
      var G__10150 = i__7280__auto___10149 + 1;
      i__7280__auto___10149 = G__10150;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq10147) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10147));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__10173 = null;
  var G__10173__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10173__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10173 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10173__1.call(this, x);
      case 2:
        return G__10173__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10173.cljs$core$IFn$_invoke$arity$1 = G__10173__1;
  G__10173.cljs$core$IFn$_invoke$arity$2 = G__10173__2;
  return G__10173;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__10174 = null;
  var G__10174__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10174__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10174 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10174__1.call(this, x);
      case 2:
        return G__10174__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10174.cljs$core$IFn$_invoke$arity$1 = G__10174__1;
  G__10174.cljs$core$IFn$_invoke$arity$2 = G__10174__2;
  return G__10174;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__10151 = self__.vec;
      var G__10152 = self__.node;
      var G__10153 = self__.i;
      var G__10154 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10151, G__10152, G__10153, G__10154) : cljs.core.chunked_seq.call(null, G__10151, G__10152, G__10153, G__10154);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10155 = self__.vec;
    var G__10156 = self__.i + self__.off;
    var G__10157 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10155, G__10156, G__10157) : cljs.core.subvec.call(null, G__10155, G__10156, G__10157);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__10158 = self__.vec;
    var G__10159 = self__.i + self__.off;
    var G__10160 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10158, G__10159, G__10160) : cljs.core.subvec.call(null, G__10158, G__10159, G__10160);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__10161 = self__.vec;
      var G__10162 = self__.node;
      var G__10163 = self__.i;
      var G__10164 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10161, G__10162, G__10163, G__10164) : cljs.core.chunked_seq.call(null, G__10161, G__10162, G__10163, G__10164);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__10165 = self__.vec;
    var G__10166 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__10167 = end;
    var G__10168 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10165, G__10166, G__10167, G__10168) : cljs.core.chunked_seq.call(null, G__10165, G__10166, G__10167, G__10168);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__10169 = self__.vec;
    var G__10170 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__10171 = end;
    var G__10172 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10169, G__10170, G__10171, G__10172) : cljs.core.chunked_seq.call(null, G__10169, G__10170, G__10171, G__10172);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args10175 = [];
  var len__7279__auto___10178 = arguments.length;
  var i__7280__auto___10179 = 0;
  while (true) {
    if (i__7280__auto___10179 < len__7279__auto___10178) {
      args10175.push(arguments[i__7280__auto___10179]);
      var G__10180 = i__7280__auto___10179 + 1;
      i__7280__auto___10179 = G__10180;
      continue;
    } else {
    }
    break;
  }
  var G__10177 = args10175.length;
  switch(G__10177) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10175.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__10202 = null;
  var G__10202__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10202__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__10202 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__10202__1.call(this, x);
      case 2:
        return G__10202__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10202.cljs$core$IFn$_invoke$arity$1 = G__10202__1;
  G__10202.cljs$core$IFn$_invoke$arity$2 = G__10202__2;
  return G__10202;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__10203 = null;
  var G__10203__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10203__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__10203 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__10203__1.call(this, x);
      case 2:
        return G__10203__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10203.cljs$core$IFn$_invoke$arity$1 = G__10203__1;
  G__10203.cljs$core$IFn$_invoke$arity$2 = G__10203__2;
  return G__10203;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__10183 = init__$1;
        var G__10184 = j;
        var G__10185 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10183, G__10184, G__10185) : f.call(null, G__10183, G__10184, G__10185);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10204 = i + 1;
        var G__10205 = j + 1;
        var G__10206 = init__$2;
        i = G__10204;
        j = G__10205;
        init__$1 = G__10206;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__10186 = self__.meta;
  var G__10187 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__10188 = self__.start;
  var G__10189 = function() {
    var x__6541__auto__ = self__.end;
    var y__6542__auto__ = v_pos + 1;
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var G__10190 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10186, G__10187, G__10188, G__10189, G__10190) : cljs.core.build_subvec.call(null, G__10186, G__10187, G__10188, G__10189, G__10190);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__10191 = self__.meta;
    var G__10192 = self__.v;
    var G__10193 = self__.start;
    var G__10194 = self__.end - 1;
    var G__10195 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10191, G__10192, G__10193, G__10194, G__10195) : cljs.core.build_subvec.call(null, G__10191, G__10192, G__10193, G__10194, G__10195);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10197 = self__.meta;
  var G__10198 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__10199 = self__.start;
  var G__10200 = self__.end + 1;
  var G__10201 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10197, G__10198, G__10199, G__10200, G__10201) : cljs.core.build_subvec.call(null, G__10197, G__10198, G__10199, G__10200, G__10201);
};
cljs.core.Subvec.prototype.call = function() {
  var G__10207 = null;
  var G__10207__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10207__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10207 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10207__2.call(this, self__, k);
      case 3:
        return G__10207__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10207.cljs$core$IFn$_invoke$arity$2 = G__10207__2;
  G__10207.cljs$core$IFn$_invoke$arity$3 = G__10207__3;
  return G__10207;
}();
cljs.core.Subvec.prototype.apply = function(self__, args10182) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10182)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__10208 = meta;
      var G__10209 = v.v;
      var G__10210 = v.start + start;
      var G__10211 = v.start + end;
      var G__10212 = __hash;
      meta = G__10208;
      v = G__10209;
      start = G__10210;
      end = G__10211;
      __hash = G__10212;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args10213 = [];
  var len__7279__auto___10216 = arguments.length;
  var i__7280__auto___10217 = 0;
  while (true) {
    if (i__7280__auto___10217 < len__7279__auto___10216) {
      args10213.push(arguments[i__7280__auto___10217]);
      var G__10218 = i__7280__auto___10217 + 1;
      i__7280__auto___10217 = G__10218;
      continue;
    } else {
    }
    break;
  }
  var G__10215 = args10213.length;
  switch(G__10215) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10213.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__10231 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__10232 = level - 5;
        node = G__10231;
        level = G__10232;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10236 = null;
  var G__10236__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10236__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10236 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10236__2.call(this, self__, k);
      case 3:
        return G__10236__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10236.cljs$core$IFn$_invoke$arity$2 = G__10236__2;
  G__10236.cljs$core$IFn$_invoke$arity$3 = G__10236__3;
  return G__10236;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args10233) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10233)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__6210__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var and__6198__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__6198__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__6198__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__10237 = null;
  var G__10237__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10237__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10237 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10237__1.call(this, x);
      case 2:
        return G__10237__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10237.cljs$core$IFn$_invoke$arity$1 = G__10237__1;
  G__10237.cljs$core$IFn$_invoke$arity$2 = G__10237__2;
  return G__10237;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__10238 = null;
  var G__10238__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10238__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10238 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10238__1.call(this, x);
      case 2:
        return G__10238__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10238.cljs$core$IFn$_invoke$arity$1 = G__10238__1;
  G__10238.cljs$core$IFn$_invoke$arity$2 = G__10238__2;
  return G__10238;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__10239 = null;
  var G__10239__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10239__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10239 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10239__1.call(this, x);
      case 2:
        return G__10239__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10239.cljs$core$IFn$_invoke$arity$1 = G__10239__1;
  G__10239.cljs$core$IFn$_invoke$arity$2 = G__10239__2;
  return G__10239;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__10240 = null;
  var G__10240__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__10240__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10240 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10240__1.call(this, x);
      case 2:
        return G__10240__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10240.cljs$core$IFn$_invoke$arity$1 = G__10240__1;
  G__10240.cljs$core$IFn$_invoke$arity$2 = G__10240__2;
  return G__10240;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = self__.front;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__6210__auto__ = self__.rear;
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__10241 = i + incr;
        i = G__10241;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__10242 = i + 1;
      var G__10243 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__10242;
      out = G__10243;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_10248 = 0;
  while (true) {
    if (i_10248 < l) {
      var k_10249 = ks[i_10248];
      new_obj[k_10249] = obj[k_10249];
      var G__10250 = i_10248 + 1;
      i_10248 = G__10250;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__10253 = init__$1;
        var G__10254 = k;
        var G__10255 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10253, G__10254, G__10255) : f.call(null, G__10253, G__10254, G__10255);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10256 = cljs.core.rest(keys__$1);
        var G__10257 = init__$2;
        keys__$1 = G__10256;
        init__$1 = G__10257;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__10251_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10251_SHARP_, self__.strobj[p1__10251_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10258 = null;
  var G__10258__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10258__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10258 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10258__2.call(this, self__, k);
      case 3:
        return G__10258__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10258.cljs$core$IFn$_invoke$arity$2 = G__10258__2;
  G__10258.cljs$core$IFn$_invoke$arity$3 = G__10258__3;
  return G__10258;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10252) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10252)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__6210__auto__ = self__.i < self__.base_count;
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__10261 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10261, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10261, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__10262 = i + 2;
        i = G__10262;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__10263 = i + 2;
        i = G__10263;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__10264 = i + 2;
        i = G__10264;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__10265 = i + 2;
        i = G__10265;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__10266 = i + 2;
        i = G__10266;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_10267 = 0;
  while (true) {
    if (i_10267 < l) {
      narr[i_10267] = arr[i_10267];
      var G__10268 = i_10267 + 1;
      i_10267 = G__10268;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__10269 = null;
  var G__10269__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10269__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10269 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10269__1.call(this, x);
      case 2:
        return G__10269__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10269.cljs$core$IFn$_invoke$arity$1 = G__10269__1;
  G__10269.cljs$core$IFn$_invoke$arity$2 = G__10269__2;
  return G__10269;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__10270 = null;
  var G__10270__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10270__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10270 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10270__1.call(this, x);
      case 2:
        return G__10270__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10270.cljs$core$IFn$_invoke$arity$1 = G__10270__1;
  G__10270.cljs$core$IFn$_invoke$arity$2 = G__10270__2;
  return G__10270;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10272 = cljs.core.seq(coll);
  var chunk__10273 = null;
  var count__10274 = 0;
  var i__10275 = 0;
  while (true) {
    if (i__10275 < count__10274) {
      var vec__10276 = chunk__10273.cljs$core$IIndexed$_nth$arity$2(null, i__10275);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10276, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10276, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__10285 = seq__10272;
      var G__10286 = chunk__10273;
      var G__10287 = count__10274;
      var G__10288 = i__10275 + 1;
      seq__10272 = G__10285;
      chunk__10273 = G__10286;
      count__10274 = G__10287;
      i__10275 = G__10288;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__10272);
      if (temp__4657__auto__) {
        var seq__10272__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10272__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__10272__$1);
          var G__10289 = cljs.core.chunk_rest(seq__10272__$1);
          var G__10290 = c__7021__auto__;
          var G__10291 = cljs.core.count(c__7021__auto__);
          var G__10292 = 0;
          seq__10272 = G__10289;
          chunk__10273 = G__10290;
          count__10274 = G__10291;
          i__10275 = G__10292;
          continue;
        } else {
          var vec__10277 = cljs.core.first(seq__10272__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10277, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10277, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__10293 = cljs.core.next(seq__10272__$1);
          var G__10294 = null;
          var G__10295 = 0;
          var G__10296 = 0;
          seq__10272 = G__10293;
          chunk__10273 = G__10294;
          count__10274 = G__10295;
          i__10275 = G__10296;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__10278 = init__$1;
        var G__10279 = self__.arr[i];
        var G__10280 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10278, G__10279, G__10280) : f.call(null, G__10278, G__10279, G__10280);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10297 = i + 2;
        var G__10298 = init__$2;
        i = G__10297;
        init__$1 = G__10298;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__10299 = i + 2;
              i = G__10299;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__10300 = s + 2;
            var G__10301 = d;
            s = G__10300;
            d = G__10301;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__10302 = s + 2;
            var G__10303 = d + 2;
            s = G__10302;
            d = G__10303;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__10284 = cljs.core.aclone(self__.arr);
        G__10284[idx + 1] = v;
        return G__10284;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__10304 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__10305 = cljs.core.next(es);
          ret = G__10304;
          es = G__10305;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10306 = null;
  var G__10306__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10306__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10306 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10306__2.call(this, self__, k);
      case 3:
        return G__10306__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10306.cljs$core$IFn$_invoke$arity$2 = G__10306__2;
  G__10306.cljs$core$IFn$_invoke$arity$3 = G__10306__3;
  return G__10306;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args10271) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10271)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_10307 = 0;
    while (true) {
      if (i_10307 < arr__$1.length) {
        var k_10308 = arr__$1[i_10307];
        var v_10309 = arr__$1[i_10307 + 1];
        var idx_10310 = cljs.core.array_index_of(ret, k_10308);
        if (idx_10310 === -1) {
          ret.push(k_10308);
          ret.push(v_10309);
        } else {
        }
        var G__10311 = i_10307 + 2;
        i_10307 = G__10311;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__10314 = cljs.core.next(es);
          var G__10315 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__10314;
          tcoll__$2 = G__10315;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__10313_10316 = self__.arr;
      G__10313_10316.pop();
      G__10313_10316.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__10317 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__10318 = i + 2;
      out = G__10317;
      i = G__10318;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args10319 = [];
  var len__7279__auto___10324 = arguments.length;
  var i__7280__auto___10325 = 0;
  while (true) {
    if (i__7280__auto___10325 < len__7279__auto___10324) {
      args10319.push(arguments[i__7280__auto___10325]);
      var G__10326 = i__7280__auto___10325 + 1;
      i__7280__auto___10325 = G__10326;
      continue;
    } else {
    }
    break;
  }
  var G__10321 = args10319.length;
  switch(G__10321) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10319.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__10322 = cljs.core.aclone(arr);
  G__10322[i] = a;
  return G__10322;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__10323 = cljs.core.aclone(arr);
  G__10323[i] = a;
  G__10323[j] = b;
  return G__10323;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args10328 = [];
  var len__7279__auto___10331 = arguments.length;
  var i__7280__auto___10332 = 0;
  while (true) {
    if (i__7280__auto___10332 < len__7279__auto___10331) {
      args10328.push(arguments[i__7280__auto___10332]);
      var G__10333 = i__7280__auto___10332 + 1;
      i__7280__auto___10332 = G__10333;
      continue;
    } else {
    }
    break;
  }
  var G__10330 = args10328.length;
  switch(G__10330) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10328.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__10338 = init__$1;
          var G__10339 = k;
          var G__10340 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10338, G__10339, G__10340) : f.call(null, G__10338, G__10339, G__10340);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10341 = i + 2;
        var G__10342 = init__$2;
        i = G__10341;
        init__$1 = G__10342;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__6210__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10356 = 0;
        var j_10357 = 0;
        while (true) {
          if (i_10356 < 32) {
            if ((self__.bitmap >>> i_10356 & 1) === 0) {
              var G__10358 = i_10356 + 1;
              var G__10359 = j_10357;
              i_10356 = G__10358;
              j_10357 = G__10359;
              continue;
            } else {
              nodes[i_10356] = !(self__.arr[j_10357] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_10357]), self__.arr[j_10357], self__.arr[j_10357 + 1], added_leaf_QMARK_) : self__.arr[j_10357 + 1];
              var G__10360 = i_10356 + 1;
              var G__10361 = j_10357 + 2;
              i_10356 = G__10360;
              j_10357 = G__10361;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__10343 = edit__$1;
          var G__10344 = shift + 5;
          var G__10345 = key_or_nil;
          var G__10346 = val_or_node;
          var G__10347 = hash;
          var G__10348 = key;
          var G__10349 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10343, G__10344, G__10345, G__10346, G__10347, G__10348, G__10349) : cljs.core.create_node.call(null, G__10343, G__10344, G__10345, G__10346, G__10347, G__10348, G__10349);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10362 = 0;
      var j_10363 = 0;
      while (true) {
        if (i_10362 < 32) {
          if ((self__.bitmap >>> i_10362 & 1) === 0) {
            var G__10364 = i_10362 + 1;
            var G__10365 = j_10363;
            i_10362 = G__10364;
            j_10363 = G__10365;
            continue;
          } else {
            nodes[i_10362] = !(self__.arr[j_10363] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_10363]), self__.arr[j_10363], self__.arr[j_10363 + 1], added_leaf_QMARK_) : self__.arr[j_10363 + 1];
            var G__10366 = i_10362 + 1;
            var G__10367 = j_10363 + 2;
            i_10362 = G__10366;
            j_10363 = G__10367;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__10350 = shift + 5;
          var G__10351 = key_or_nil;
          var G__10352 = val_or_node;
          var G__10353 = hash;
          var G__10354 = key;
          var G__10355 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10350, G__10351, G__10352, G__10353, G__10354, G__10355) : cljs.core.create_node.call(null, G__10350, G__10351, G__10352, G__10353, G__10354, G__10355);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__10368 = i + 1;
        var G__10369 = j + 2;
        var G__10370 = bitmap | 1 << i;
        i = G__10368;
        j = G__10369;
        bitmap = G__10370;
        continue;
      } else {
        var G__10371 = i + 1;
        var G__10372 = j;
        var G__10373 = bitmap;
        i = G__10371;
        j = G__10372;
        bitmap = G__10373;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__10374 = i + 1;
          var G__10375 = init__$2;
          i = G__10374;
          init__$1 = G__10375;
          continue;
        }
      } else {
        var G__10376 = i + 1;
        var G__10377 = init__$1;
        i = G__10376;
        init__$1 = G__10377;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__10378 = i + 2;
        i = G__10378;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args10379 = [];
  var len__7279__auto___10382 = arguments.length;
  var i__7280__auto___10383 = 0;
  while (true) {
    if (i__7280__auto___10383 < len__7279__auto___10382) {
      args10379.push(arguments[i__7280__auto___10383]);
      var G__10384 = i__7280__auto___10383 + 1;
      i__7280__auto___10383 = G__10384;
      continue;
    } else {
    }
    break;
  }
  var G__10381 = args10379.length;
  switch(G__10381) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10379.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__10392 = null;
  var G__10392__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10392__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10392 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10392__1.call(this, x);
      case 2:
        return G__10392__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10392.cljs$core$IFn$_invoke$arity$1 = G__10392__1;
  G__10392.cljs$core$IFn$_invoke$arity$2 = G__10392__2;
  return G__10392;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__10393 = null;
  var G__10393__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10393__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10393 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10393__1.call(this, x);
      case 2:
        return G__10393__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10393.cljs$core$IFn$_invoke$arity$1 = G__10393__1;
  G__10393.cljs$core$IFn$_invoke$arity$2 = G__10393__2;
  return G__10393;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__10386 = self__.nodes;
    var G__10387 = self__.i + 2;
    var G__10388 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10386, G__10387, G__10388) : cljs.core.create_inode_seq.call(null, G__10386, G__10387, G__10388);
  } else {
    var G__10389 = self__.nodes;
    var G__10390 = self__.i;
    var G__10391 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10389, G__10390, G__10391) : cljs.core.create_inode_seq.call(null, G__10389, G__10390, G__10391);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args10394 = [];
  var len__7279__auto___10397 = arguments.length;
  var i__7280__auto___10398 = 0;
  while (true) {
    if (i__7280__auto___10398 < len__7279__auto___10397) {
      args10394.push(arguments[i__7280__auto___10398]);
      var G__10399 = i__7280__auto___10398 + 1;
      i__7280__auto___10398 = G__10399;
      continue;
    } else {
    }
    break;
  }
  var G__10396 = args10394.length;
  switch(G__10396) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10394.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__10401 = j + 2;
              j = G__10401;
              continue;
            }
          } else {
            var G__10402 = j + 2;
            j = G__10402;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__10407 = null;
  var G__10407__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10407__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10407 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10407__1.call(this, x);
      case 2:
        return G__10407__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10407.cljs$core$IFn$_invoke$arity$1 = G__10407__1;
  G__10407.cljs$core$IFn$_invoke$arity$2 = G__10407__2;
  return G__10407;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__10408 = null;
  var G__10408__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10408__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10408 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10408__1.call(this, x);
      case 2:
        return G__10408__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10408.cljs$core$IFn$_invoke$arity$1 = G__10408__1;
  G__10408.cljs$core$IFn$_invoke$arity$2 = G__10408__2;
  return G__10408;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__10403 = null;
  var G__10404 = self__.nodes;
  var G__10405 = self__.i;
  var G__10406 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10403, G__10404, G__10405, G__10406) : cljs.core.create_array_node_seq.call(null, G__10403, G__10404, G__10405, G__10406);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args10409 = [];
  var len__7279__auto___10412 = arguments.length;
  var i__7280__auto___10413 = 0;
  while (true) {
    if (i__7280__auto___10413 < len__7279__auto___10412) {
      args10409.push(arguments[i__7280__auto___10413]);
      var G__10414 = i__7280__auto___10413 + 1;
      i__7280__auto___10413 = G__10414;
      continue;
    } else {
    }
    break;
  }
  var G__10411 = args10409.length;
  switch(G__10411) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10409.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__10416 = j + 1;
            j = G__10416;
            continue;
          }
        } else {
          var G__10417 = j + 1;
          j = G__10417;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10419 = cljs.core.seq(coll);
  var chunk__10420 = null;
  var count__10421 = 0;
  var i__10422 = 0;
  while (true) {
    if (i__10422 < count__10421) {
      var vec__10423 = chunk__10420.cljs$core$IIndexed$_nth$arity$2(null, i__10422);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10423, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10423, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__10427 = seq__10419;
      var G__10428 = chunk__10420;
      var G__10429 = count__10421;
      var G__10430 = i__10422 + 1;
      seq__10419 = G__10427;
      chunk__10420 = G__10428;
      count__10421 = G__10429;
      i__10422 = G__10430;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__10419);
      if (temp__4657__auto__) {
        var seq__10419__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10419__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__10419__$1);
          var G__10431 = cljs.core.chunk_rest(seq__10419__$1);
          var G__10432 = c__7021__auto__;
          var G__10433 = cljs.core.count(c__7021__auto__);
          var G__10434 = 0;
          seq__10419 = G__10431;
          chunk__10420 = G__10432;
          count__10421 = G__10433;
          i__10422 = G__10434;
          continue;
        } else {
          var vec__10424 = cljs.core.first(seq__10419__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10424, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10424, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__10435 = cljs.core.next(seq__10419__$1);
          var G__10436 = null;
          var G__10437 = 0;
          var G__10438 = 0;
          seq__10419 = G__10435;
          chunk__10420 = G__10436;
          count__10421 = G__10437;
          i__10422 = G__10438;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__10439 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__10440 = cljs.core.next(es);
          ret = G__10439;
          es = G__10440;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10441 = null;
  var G__10441__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10441__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10441 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10441__2.call(this, self__, k);
      case 3:
        return G__10441__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10441.cljs$core$IFn$_invoke$arity$2 = G__10441__2;
  G__10441.cljs$core$IFn$_invoke$arity$3 = G__10441__3;
  return G__10441;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args10418) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10418)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10442 = i + 2;
      var G__10443 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__10442;
      ret = G__10443;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10444 = i + 1;
      var G__10445 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__10444;
      out = G__10445;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__10447 = cljs.core.next(es);
          var G__10448 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__10447;
          tcoll__$1 = G__10448;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__10449 = ascending_QMARK_ ? t.left : t.right;
      var G__10450 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__10449;
      stack__$1 = G__10450;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__10451 = null;
  var G__10451__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10451__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10451 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10451__1.call(this, x);
      case 2:
        return G__10451__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10451.cljs$core$IFn$_invoke$arity$1 = G__10451__1;
  G__10451.cljs$core$IFn$_invoke$arity$2 = G__10451__2;
  return G__10451;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__10452 = null;
  var G__10452__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10452__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10452 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10452__1.call(this, x);
      case 2:
        return G__10452__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10452.cljs$core$IFn$_invoke$arity$1 = G__10452__1;
  G__10452.cljs$core$IFn$_invoke$arity$2 = G__10452__2;
  return G__10452;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__10462 = init__$1;
      var G__10463 = node.key;
      var G__10464 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10462, G__10463, G__10464) : f.call(null, G__10462, G__10463, G__10464);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__10466 = null;
  var G__10466__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10466__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10466 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10466__1.call(this, x);
      case 2:
        return G__10466__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10466.cljs$core$IFn$_invoke$arity$1 = G__10466__1;
  G__10466.cljs$core$IFn$_invoke$arity$2 = G__10466__2;
  return G__10466;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__10467 = null;
  var G__10467__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10467__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10467 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10467__1.call(this, x);
      case 2:
        return G__10467__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10467.cljs$core$IFn$_invoke$arity$1 = G__10467__1;
  G__10467.cljs$core$IFn$_invoke$arity$2 = G__10467__2;
  return G__10467;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10468 = null;
  var G__10468__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10468__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10468 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10468__2.call(this, self__, k);
      case 3:
        return G__10468__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10468.cljs$core$IFn$_invoke$arity$2 = G__10468__2;
  G__10468.cljs$core$IFn$_invoke$arity$3 = G__10468__3;
  return G__10468;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args10465) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10465)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__10470 = null;
  var G__10470__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10470__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10470 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10470__1.call(this, x);
      case 2:
        return G__10470__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10470.cljs$core$IFn$_invoke$arity$1 = G__10470__1;
  G__10470.cljs$core$IFn$_invoke$arity$2 = G__10470__2;
  return G__10470;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__10471 = null;
  var G__10471__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10471__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10471 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10471__1.call(this, x);
      case 2:
        return G__10471__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10471.cljs$core$IFn$_invoke$arity$1 = G__10471__1;
  G__10471.cljs$core$IFn$_invoke$arity$2 = G__10471__2;
  return G__10471;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__10472 = null;
  var G__10472__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10472__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10472 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10472__2.call(this, self__, k);
      case 3:
        return G__10472__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10472.cljs$core$IFn$_invoke$arity$2 = G__10472__2;
  G__10472.cljs$core$IFn$_invoke$arity$3 = G__10472__3;
  return G__10472;
}();
cljs.core.RedNode.prototype.apply = function(self__, args10469) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10469)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__10485 = k;
      var G__10486 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10485, G__10486) : comp.call(null, G__10485, G__10486);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__10505 = k;
      var G__10506 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10505, G__10506) : comp.call(null, G__10505, G__10506);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10516 = cljs.core.seq(coll);
  var chunk__10517 = null;
  var count__10518 = 0;
  var i__10519 = 0;
  while (true) {
    if (i__10519 < count__10518) {
      var vec__10520 = chunk__10517.cljs$core$IIndexed$_nth$arity$2(null, i__10519);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10520, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10520, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__10526 = seq__10516;
      var G__10527 = chunk__10517;
      var G__10528 = count__10518;
      var G__10529 = i__10519 + 1;
      seq__10516 = G__10526;
      chunk__10517 = G__10527;
      count__10518 = G__10528;
      i__10519 = G__10529;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__10516);
      if (temp__4657__auto__) {
        var seq__10516__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10516__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__10516__$1);
          var G__10530 = cljs.core.chunk_rest(seq__10516__$1);
          var G__10531 = c__7021__auto__;
          var G__10532 = cljs.core.count(c__7021__auto__);
          var G__10533 = 0;
          seq__10516 = G__10530;
          chunk__10517 = G__10531;
          count__10518 = G__10532;
          i__10519 = G__10533;
          continue;
        } else {
          var vec__10521 = cljs.core.first(seq__10516__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10521, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10521, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__10534 = cljs.core.next(seq__10516__$1);
          var G__10535 = null;
          var G__10536 = 0;
          var G__10537 = 0;
          seq__10516 = G__10534;
          chunk__10517 = G__10535;
          count__10518 = G__10536;
          i__10519 = G__10537;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__10522 = k;
        var G__10523 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10522, G__10523) : self__.comp.call(null, G__10522, G__10523);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__10538 = t.left;
          t = G__10538;
          continue;
        } else {
          var G__10539 = t.right;
          t = G__10539;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__10540 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__10541 = cljs.core.next(es);
          ret = G__10540;
          es = G__10541;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10542 = null;
  var G__10542__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10542__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10542 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10542__2.call(this, self__, k);
      case 3:
        return G__10542__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10542.cljs$core$IFn$_invoke$arity$2 = G__10542__2;
  G__10542.cljs$core$IFn$_invoke$arity$3 = G__10542__3;
  return G__10542;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args10515) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10515)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__10524 = k;
          var G__10525 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10524, G__10525) : self__.comp.call(null, G__10524, G__10525);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__10543 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__10544 = t.left;
              stack = G__10543;
              t = G__10544;
              continue;
            } else {
              var G__10545 = stack;
              var G__10546 = t.right;
              stack = G__10545;
              t = G__10546;
              continue;
            }
          } else {
            if (c > 0) {
              var G__10547 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__10548 = t.right;
              stack = G__10547;
              t = G__10548;
              continue;
            } else {
              var G__10549 = stack;
              var G__10550 = t.left;
              stack = G__10549;
              t = G__10550;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10552 = arguments.length;
  var i__7280__auto___10553 = 0;
  while (true) {
    if (i__7280__auto___10553 < len__7279__auto___10552) {
      args__7286__auto__.push(arguments[i__7280__auto___10553]);
      var G__10554 = i__7280__auto___10553 + 1;
      i__7280__auto___10553 = G__10554;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__10555 = cljs.core.nnext(in$);
      var G__10556 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__10555;
      out = G__10556;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq10551) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10551));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10558 = arguments.length;
  var i__7280__auto___10559 = 0;
  while (true) {
    if (i__7280__auto___10559 < len__7279__auto___10558) {
      args__7286__auto__.push(arguments[i__7280__auto___10559]);
      var G__10560 = i__7280__auto___10559 + 1;
      i__7280__auto___10559 = G__10560;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq10557) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10557));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10564 = arguments.length;
  var i__7280__auto___10565 = 0;
  while (true) {
    if (i__7280__auto___10565 < len__7279__auto___10564) {
      args__7286__auto__.push(arguments[i__7280__auto___10565]);
      var G__10566 = i__7280__auto___10565 + 1;
      i__7280__auto___10565 = G__10566;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__10567 = cljs.core.nnext(kvs);
      kvs = G__10567;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq10561) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10561));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10569 = arguments.length;
  var i__7280__auto___10570 = 0;
  while (true) {
    if (i__7280__auto___10570 < len__7279__auto___10569) {
      args__7286__auto__.push(arguments[i__7280__auto___10570]);
      var G__10571 = i__7280__auto___10570 + 1;
      i__7280__auto___10570 = G__10571;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__10572 = cljs.core.nnext(in$);
      var G__10573 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__10572;
      out = G__10573;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq10568) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10568));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10576 = arguments.length;
  var i__7280__auto___10577 = 0;
  while (true) {
    if (i__7280__auto___10577 < len__7279__auto___10576) {
      args__7286__auto__.push(arguments[i__7280__auto___10577]);
      var G__10578 = i__7280__auto___10577 + 1;
      i__7280__auto___10577 = G__10578;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__10579 = cljs.core.nnext(in$);
      var G__10580 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__10579;
      out = G__10580;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq10574) {
  var G__10575 = cljs.core.first(seq10574);
  var seq10574__$1 = cljs.core.next(seq10574);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__10575, seq10574__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__10583 = null;
  var G__10583__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10583__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10583 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10583__1.call(this, x);
      case 2:
        return G__10583__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10583.cljs$core$IFn$_invoke$arity$1 = G__10583__1;
  G__10583.cljs$core$IFn$_invoke$arity$2 = G__10583__2;
  return G__10583;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__10584 = null;
  var G__10584__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10584__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10584 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10584__1.call(this, x);
      case 2:
        return G__10584__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10584.cljs$core$IFn$_invoke$arity$1 = G__10584__1;
  G__10584.cljs$core$IFn$_invoke$arity$2 = G__10584__2;
  return G__10584;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__10587 = null;
  var G__10587__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10587__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10587 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10587__1.call(this, x);
      case 2:
        return G__10587__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10587.cljs$core$IFn$_invoke$arity$1 = G__10587__1;
  G__10587.cljs$core$IFn$_invoke$arity$2 = G__10587__2;
  return G__10587;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__10588 = null;
  var G__10588__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10588__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10588 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10588__1.call(this, x);
      case 2:
        return G__10588__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10588.cljs$core$IFn$_invoke$arity$1 = G__10588__1;
  G__10588.cljs$core$IFn$_invoke$arity$2 = G__10588__2;
  return G__10588;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10592 = arguments.length;
  var i__7280__auto___10593 = 0;
  while (true) {
    if (i__7280__auto___10593 < len__7279__auto___10592) {
      args__7286__auto__.push(arguments[i__7280__auto___10593]);
      var G__10594 = i__7280__auto___10593 + 1;
      i__7280__auto___10593 = G__10594;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__10589_SHARP_, p2__10590_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__6210__auto__ = p1__10589_SHARP_;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__10590_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq10591) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10591));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10599 = arguments.length;
  var i__7280__auto___10600 = 0;
  while (true) {
    if (i__7280__auto___10600 < len__7279__auto___10599) {
      args__7286__auto__.push(arguments[i__7280__auto___10600]);
      var G__10601 = i__7280__auto___10600 + 1;
      i__7280__auto___10600 = G__10601;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__10597 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__10598 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10597, G__10598) : f.call(null, G__10597, G__10598);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__6210__auto__ = m1;
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq10595) {
  var G__10596 = cljs.core.first(seq10595);
  var seq10595__$1 = cljs.core.next(seq10595);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__10596, seq10595__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__10602 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__10603 = cljs.core.next(keys);
      ret = G__10602;
      keys = G__10603;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10606 = cljs.core.seq(coll);
  var chunk__10607 = null;
  var count__10608 = 0;
  var i__10609 = 0;
  while (true) {
    if (i__10609 < count__10608) {
      var vec__10610 = chunk__10607.cljs$core$IIndexed$_nth$arity$2(null, i__10609);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10610, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10610, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__10612 = seq__10606;
      var G__10613 = chunk__10607;
      var G__10614 = count__10608;
      var G__10615 = i__10609 + 1;
      seq__10606 = G__10612;
      chunk__10607 = G__10613;
      count__10608 = G__10614;
      i__10609 = G__10615;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__10606);
      if (temp__4657__auto__) {
        var seq__10606__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10606__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__10606__$1);
          var G__10616 = cljs.core.chunk_rest(seq__10606__$1);
          var G__10617 = c__7021__auto__;
          var G__10618 = cljs.core.count(c__7021__auto__);
          var G__10619 = 0;
          seq__10606 = G__10616;
          chunk__10607 = G__10617;
          count__10608 = G__10618;
          i__10609 = G__10619;
          continue;
        } else {
          var vec__10611 = cljs.core.first(seq__10606__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10611, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10611, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__10620 = cljs.core.next(seq__10606__$1);
          var G__10621 = null;
          var G__10622 = 0;
          var G__10623 = 0;
          seq__10606 = G__10620;
          chunk__10607 = G__10621;
          count__10608 = G__10622;
          i__10609 = G__10623;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__10604_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__10604_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10624 = null;
  var G__10624__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10624__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10624 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10624__2.call(this, self__, k);
      case 3:
        return G__10624__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10624.cljs$core$IFn$_invoke$arity$2 = G__10624__2;
  G__10624.cljs$core$IFn$_invoke$arity$3 = G__10624__3;
  return G__10624;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args10605) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10605)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10625 = i + 1;
        var G__10626 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__10625;
        out = G__10626;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__10627 = i + 1;
        var G__10628 = cljs.core._conj_BANG_(out, items[i]);
        i = G__10627;
        out = G__10628;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10630 = null;
  var G__10630__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__10630__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__10630 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10630__2.call(this, self__, k);
      case 3:
        return G__10630__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10630.cljs$core$IFn$_invoke$arity$2 = G__10630__2;
  G__10630.cljs$core$IFn$_invoke$arity$3 = G__10630__3;
  return G__10630;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10629) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10629)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10633 = cljs.core.seq(coll);
  var chunk__10634 = null;
  var count__10635 = 0;
  var i__10636 = 0;
  while (true) {
    if (i__10636 < count__10635) {
      var vec__10637 = chunk__10634.cljs$core$IIndexed$_nth$arity$2(null, i__10636);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10637, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10637, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__10639 = seq__10633;
      var G__10640 = chunk__10634;
      var G__10641 = count__10635;
      var G__10642 = i__10636 + 1;
      seq__10633 = G__10639;
      chunk__10634 = G__10640;
      count__10635 = G__10641;
      i__10636 = G__10642;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__10633);
      if (temp__4657__auto__) {
        var seq__10633__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10633__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__10633__$1);
          var G__10643 = cljs.core.chunk_rest(seq__10633__$1);
          var G__10644 = c__7021__auto__;
          var G__10645 = cljs.core.count(c__7021__auto__);
          var G__10646 = 0;
          seq__10633 = G__10643;
          chunk__10634 = G__10644;
          count__10635 = G__10645;
          i__10636 = G__10646;
          continue;
        } else {
          var vec__10638 = cljs.core.first(seq__10633__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10638, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10638, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__10647 = cljs.core.next(seq__10633__$1);
          var G__10648 = null;
          var G__10649 = 0;
          var G__10650 = 0;
          seq__10633 = G__10647;
          chunk__10634 = G__10648;
          count__10635 = G__10649;
          i__10636 = G__10650;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__10631_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__10631_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10651 = null;
  var G__10651__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10651__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10651 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10651__2.call(this, self__, k);
      case 3:
        return G__10651__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10651.cljs$core$IFn$_invoke$arity$2 = G__10651__2;
  G__10651.cljs$core$IFn$_invoke$arity$3 = G__10651__3;
  return G__10651;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10632) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10632)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__7118__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__7118__auto__.length) {
        var G__10652 = i + 1;
        var G__10653 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__10652;
        res = G__10653;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__10654 = cljs.core.next(in$__$1);
          var G__10655 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__10654;
          out = G__10655;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args10656 = [];
  var len__7279__auto___10660 = arguments.length;
  var i__7280__auto___10661 = 0;
  while (true) {
    if (i__7280__auto___10661 < len__7279__auto___10660) {
      args10656.push(arguments[i__7280__auto___10661]);
      var G__10662 = i__7280__auto___10661 + 1;
      i__7280__auto___10661 = G__10662;
      continue;
    } else {
    }
    break;
  }
  var G__10659 = args10656.length;
  switch(G__10659) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args10656.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7298__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq10657) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10657));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10665 = arguments.length;
  var i__7280__auto___10666 = 0;
  while (true) {
    if (i__7280__auto___10666 < len__7279__auto___10665) {
      args__7286__auto__.push(arguments[i__7280__auto___10666]);
      var G__10667 = i__7280__auto___10666 + 1;
      i__7280__auto___10666 = G__10667;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq10664) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10664));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10670 = arguments.length;
  var i__7280__auto___10671 = 0;
  while (true) {
    if (i__7280__auto___10671 < len__7279__auto___10670) {
      args__7286__auto__.push(arguments[i__7280__auto___10671]);
      var G__10672 = i__7280__auto___10671 + 1;
      i__7280__auto___10671 = G__10672;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq10668) {
  var G__10669 = cljs.core.first(seq10668);
  var seq10668__$1 = cljs.core.next(seq10668);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__10669, seq10668__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args10675 = [];
  var len__7279__auto___10678 = arguments.length;
  var i__7280__auto___10679 = 0;
  while (true) {
    if (i__7280__auto___10679 < len__7279__auto___10678) {
      args10675.push(arguments[i__7280__auto___10679]);
      var G__10680 = i__7280__auto___10679 + 1;
      i__7280__auto___10679 = G__10680;
      continue;
    } else {
    }
    break;
  }
  var G__10677 = args10675.length;
  switch(G__10677) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10675.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__10673_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__10673_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__10673_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10674_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__10674_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__10674_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args10682 = [];
  var len__7279__auto___10691 = arguments.length;
  var i__7280__auto___10692 = 0;
  while (true) {
    if (i__7280__auto___10692 < len__7279__auto___10691) {
      args10682.push(arguments[i__7280__auto___10692]);
      var G__10693 = i__7280__auto___10692 + 1;
      i__7280__auto___10692 = G__10693;
      continue;
    } else {
    }
    break;
  }
  var G__10684 = args10682.length;
  switch(G__10684) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10682.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__10695 = null;
        var G__10695__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10695__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10695__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__10695 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10695__0.call(this);
            case 1:
              return G__10695__1.call(this, result);
            case 2:
              return G__10695__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10695.cljs$core$IFn$_invoke$arity$0 = G__10695__0;
        G__10695.cljs$core$IFn$_invoke$arity$1 = G__10695__1;
        G__10695.cljs$core$IFn$_invoke$arity$2 = G__10695__2;
        return G__10695;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__10689, seen__$1) {
        while (true) {
          var vec__10690 = p__10689;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10690, 0, null);
          var xs__$1 = vec__10690;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__10696 = cljs.core.rest(s);
              var G__10697 = seen__$1;
              p__10689 = G__10696;
              seen__$1 = G__10697;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__10698 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__10699 = cljs.core.next(s__$1);
      ret = G__10698;
      s__$1 = G__10699;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__10702 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__10703 = cljs.core.next(ks);
      var G__10704 = cljs.core.next(vs);
      map = G__10702;
      ks = G__10703;
      vs = G__10704;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args10707 = [];
  var len__7279__auto___10714 = arguments.length;
  var i__7280__auto___10715 = 0;
  while (true) {
    if (i__7280__auto___10715 < len__7279__auto___10714) {
      args10707.push(arguments[i__7280__auto___10715]);
      var G__10716 = i__7280__auto___10715 + 1;
      i__7280__auto___10715 = G__10716;
      continue;
    } else {
    }
    break;
  }
  var G__10713 = args10707.length;
  switch(G__10713) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args10707.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10705_SHARP_, p2__10706_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__10705_SHARP_, p2__10706_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq10708) {
  var G__10709 = cljs.core.first(seq10708);
  var seq10708__$1 = cljs.core.next(seq10708);
  var G__10710 = cljs.core.first(seq10708__$1);
  var seq10708__$2 = cljs.core.next(seq10708__$1);
  var G__10711 = cljs.core.first(seq10708__$2);
  var seq10708__$3 = cljs.core.next(seq10708__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__10709, G__10710, G__10711, seq10708__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args10720 = [];
  var len__7279__auto___10727 = arguments.length;
  var i__7280__auto___10728 = 0;
  while (true) {
    if (i__7280__auto___10728 < len__7279__auto___10727) {
      args10720.push(arguments[i__7280__auto___10728]);
      var G__10729 = i__7280__auto___10728 + 1;
      i__7280__auto___10728 = G__10729;
      continue;
    } else {
    }
    break;
  }
  var G__10726 = args10720.length;
  switch(G__10726) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args10720.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10718_SHARP_, p2__10719_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__10718_SHARP_, p2__10719_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq10721) {
  var G__10722 = cljs.core.first(seq10721);
  var seq10721__$1 = cljs.core.next(seq10721);
  var G__10723 = cljs.core.first(seq10721__$1);
  var seq10721__$2 = cljs.core.next(seq10721__$1);
  var G__10724 = cljs.core.first(seq10721__$2);
  var seq10721__$3 = cljs.core.next(seq10721__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__10722, G__10723, G__10724, seq10721__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args10731 = [];
  var len__7279__auto___10734 = arguments.length;
  var i__7280__auto___10735 = 0;
  while (true) {
    if (i__7280__auto___10735 < len__7279__auto___10734) {
      args10731.push(arguments[i__7280__auto___10735]);
      var G__10736 = i__7280__auto___10735 + 1;
      i__7280__auto___10735 = G__10736;
      continue;
    } else {
    }
    break;
  }
  var G__10733 = args10731.length;
  switch(G__10733) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10731.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__10738 = null;
        var G__10738__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10738__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__10738__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__10738 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10738__0.call(this);
            case 1:
              return G__10738__1.call(this, result);
            case 2:
              return G__10738__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10738.cljs$core$IFn$_invoke$arity$0 = G__10738__0;
        G__10738.cljs$core$IFn$_invoke$arity$1 = G__10738__1;
        G__10738.cljs$core$IFn$_invoke$arity$2 = G__10738__2;
        return G__10738;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args10739 = [];
  var len__7279__auto___10743 = arguments.length;
  var i__7280__auto___10744 = 0;
  while (true) {
    if (i__7280__auto___10744 < len__7279__auto___10743) {
      args10739.push(arguments[i__7280__auto___10744]);
      var G__10745 = i__7280__auto___10744 + 1;
      i__7280__auto___10744 = G__10745;
      continue;
    } else {
    }
    break;
  }
  var G__10741 = args10739.length;
  switch(G__10741) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10739.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__10747 = null;
      var G__10747__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10747__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__10747__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__10747 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10747__0.call(this);
          case 1:
            return G__10747__1.call(this, result);
          case 2:
            return G__10747__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10747.cljs$core$IFn$_invoke$arity$0 = G__10747__0;
      G__10747.cljs$core$IFn$_invoke$arity$1 = G__10747__1;
      G__10747.cljs$core$IFn$_invoke$arity$2 = G__10747__2;
      return G__10747;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__10742 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10742) : pred.call(null, G__10742);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__10756 = function() {
      var G__10758 = cljs.core._entry_key(sc, e);
      var G__10759 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10758, G__10759) : comp.call(null, G__10758, G__10759);
    }();
    var G__10757 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10756, G__10757) : test.call(null, G__10756, G__10757);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args10760 = [];
  var len__7279__auto___10765 = arguments.length;
  var i__7280__auto___10766 = 0;
  while (true) {
    if (i__7280__auto___10766 < len__7279__auto___10765) {
      args10760.push(arguments[i__7280__auto___10766]);
      var G__10767 = i__7280__auto___10766 + 1;
      i__7280__auto___10766 = G__10767;
      continue;
    } else {
    }
    break;
  }
  var G__10762 = args10760.length;
  switch(G__10762) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10760.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__10763 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10763, 0, null);
      var s = vec__10763;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__10764 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10764, 0, null);
    var s = vec__10764;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args10769 = [];
  var len__7279__auto___10774 = arguments.length;
  var i__7280__auto___10775 = 0;
  while (true) {
    if (i__7280__auto___10775 < len__7279__auto___10774) {
      args10769.push(arguments[i__7280__auto___10775]);
      var G__10776 = i__7280__auto___10775 + 1;
      i__7280__auto___10775 = G__10776;
      continue;
    } else {
    }
    break;
  }
  var G__10771 = args10769.length;
  switch(G__10771) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10769.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__10772 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10772, 0, null);
      var s = vec__10772;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__10773 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10773, 0, null);
    var s = vec__10773;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__10779 = null;
  var G__10779__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10779__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__10779 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__10779__1.call(this, x);
      case 2:
        return G__10779__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10779.cljs$core$IFn$_invoke$arity$1 = G__10779__1;
  G__10779.cljs$core$IFn$_invoke$arity$2 = G__10779__2;
  return G__10779;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__10780 = null;
  var G__10780__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10780__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__10780 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__10780__1.call(this, x);
      case 2:
        return G__10780__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10780.cljs$core$IFn$_invoke$arity$1 = G__10780__1;
  G__10780.cljs$core$IFn$_invoke$arity$2 = G__10780__2;
  return G__10780;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__10778 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__10778);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__10781 = i + self__.step;
        var G__10782 = ret__$1;
        i = G__10781;
        ret = G__10782;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args10783 = [];
  var len__7279__auto___10786 = arguments.length;
  var i__7280__auto___10787 = 0;
  while (true) {
    if (i__7280__auto___10787 < len__7279__auto___10786) {
      args10783.push(arguments[i__7280__auto___10787]);
      var G__10788 = i__7280__auto___10787 + 1;
      i__7280__auto___10787 = G__10788;
      continue;
    } else {
    }
    break;
  }
  var G__10785 = args10783.length;
  switch(G__10785) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10783.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args10790 = [];
  var len__7279__auto___10793 = arguments.length;
  var i__7280__auto___10794 = 0;
  while (true) {
    if (i__7280__auto___10794 < len__7279__auto___10793) {
      args10790.push(arguments[i__7280__auto___10794]);
      var G__10795 = i__7280__auto___10794 + 1;
      i__7280__auto___10794 = G__10795;
      continue;
    } else {
    }
    break;
  }
  var G__10792 = args10790.length;
  switch(G__10792) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10790.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__10797 = null;
        var G__10797__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10797__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10797__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__10797 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10797__0.call(this);
            case 1:
              return G__10797__1.call(this, result);
            case 2:
              return G__10797__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10797.cljs$core$IFn$_invoke$arity$0 = G__10797__0;
        G__10797.cljs$core$IFn$_invoke$arity$1 = G__10797__1;
        G__10797.cljs$core$IFn$_invoke$arity$2 = G__10797__2;
        return G__10797;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args10799 = [];
  var len__7279__auto___10802 = arguments.length;
  var i__7280__auto___10803 = 0;
  while (true) {
    if (i__7280__auto___10803 < len__7279__auto___10802) {
      args10799.push(arguments[i__7280__auto___10803]);
      var G__10804 = i__7280__auto___10803 + 1;
      i__7280__auto___10803 = G__10804;
      continue;
    } else {
    }
    break;
  }
  var G__10801 = args10799.length;
  switch(G__10801) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10799.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__10806 = null;
        var G__10806__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10806__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__10806__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__10806 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10806__0.call(this);
            case 1:
              return G__10806__1.call(this, result);
            case 2:
              return G__10806__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10806.cljs$core$IFn$_invoke$arity$0 = G__10806__0;
        G__10806.cljs$core$IFn$_invoke$arity$1 = G__10806__1;
        G__10806.cljs$core$IFn$_invoke$arity$2 = G__10806__2;
        return G__10806;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__10798_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__10798_SHARP_) : f.call(null, p1__10798_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args10807 = [];
  var len__7279__auto___10812 = arguments.length;
  var i__7280__auto___10813 = 0;
  while (true) {
    if (i__7280__auto___10813 < len__7279__auto___10812) {
      args10807.push(arguments[i__7280__auto___10813]);
      var G__10814 = i__7280__auto___10813 + 1;
      i__7280__auto___10813 = G__10814;
      continue;
    } else {
    }
    break;
  }
  var G__10809 = args10807.length;
  switch(G__10809) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10807.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__10810 = init;
        var G__10811 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10810, G__10811) : f.call(null, G__10810, G__10811);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args10826 = [];
  var len__7279__auto___10833 = arguments.length;
  var i__7280__auto___10834 = 0;
  while (true) {
    if (i__7280__auto___10834 < len__7279__auto___10833) {
      args10826.push(arguments[i__7280__auto___10834]);
      var G__10835 = i__7280__auto___10834 + 1;
      i__7280__auto___10834 = G__10835;
      continue;
    } else {
    }
    break;
  }
  var G__10832 = args10826.length;
  switch(G__10832) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args10826.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7298__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__10837 = null;
    var G__10837__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__10837__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__10837__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__10837__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__10837__4 = function() {
      var G__10838__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__10838 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10839__i = 0, G__10839__a = new Array(arguments.length - 3);
          while (G__10839__i < G__10839__a.length) {
            G__10839__a[G__10839__i] = arguments[G__10839__i + 3];
            ++G__10839__i;
          }
          args = new cljs.core.IndexedSeq(G__10839__a, 0);
        }
        return G__10838__delegate.call(this, x, y, z, args);
      };
      G__10838.cljs$lang$maxFixedArity = 3;
      G__10838.cljs$lang$applyTo = function(arglist__10840) {
        var x = cljs.core.first(arglist__10840);
        arglist__10840 = cljs.core.next(arglist__10840);
        var y = cljs.core.first(arglist__10840);
        arglist__10840 = cljs.core.next(arglist__10840);
        var z = cljs.core.first(arglist__10840);
        var args = cljs.core.rest(arglist__10840);
        return G__10838__delegate(x, y, z, args);
      };
      G__10838.cljs$core$IFn$_invoke$arity$variadic = G__10838__delegate;
      return G__10838;
    }();
    G__10837 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10837__0.call(this);
        case 1:
          return G__10837__1.call(this, x);
        case 2:
          return G__10837__2.call(this, x, y);
        case 3:
          return G__10837__3.call(this, x, y, z);
        default:
          var G__10841 = null;
          if (arguments.length > 3) {
            var G__10842__i = 0, G__10842__a = new Array(arguments.length - 3);
            while (G__10842__i < G__10842__a.length) {
              G__10842__a[G__10842__i] = arguments[G__10842__i + 3];
              ++G__10842__i;
            }
            G__10841 = new cljs.core.IndexedSeq(G__10842__a, 0);
          }
          return G__10837__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10841);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10837.cljs$lang$maxFixedArity = 3;
    G__10837.cljs$lang$applyTo = G__10837__4.cljs$lang$applyTo;
    G__10837.cljs$core$IFn$_invoke$arity$0 = G__10837__0;
    G__10837.cljs$core$IFn$_invoke$arity$1 = G__10837__1;
    G__10837.cljs$core$IFn$_invoke$arity$2 = G__10837__2;
    G__10837.cljs$core$IFn$_invoke$arity$3 = G__10837__3;
    G__10837.cljs$core$IFn$_invoke$arity$variadic = G__10837__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10837;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__10843 = null;
    var G__10843__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__10843__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__10843__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__10843__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__10843__4 = function() {
      var G__10844__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__10844 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10845__i = 0, G__10845__a = new Array(arguments.length - 3);
          while (G__10845__i < G__10845__a.length) {
            G__10845__a[G__10845__i] = arguments[G__10845__i + 3];
            ++G__10845__i;
          }
          args = new cljs.core.IndexedSeq(G__10845__a, 0);
        }
        return G__10844__delegate.call(this, x, y, z, args);
      };
      G__10844.cljs$lang$maxFixedArity = 3;
      G__10844.cljs$lang$applyTo = function(arglist__10846) {
        var x = cljs.core.first(arglist__10846);
        arglist__10846 = cljs.core.next(arglist__10846);
        var y = cljs.core.first(arglist__10846);
        arglist__10846 = cljs.core.next(arglist__10846);
        var z = cljs.core.first(arglist__10846);
        var args = cljs.core.rest(arglist__10846);
        return G__10844__delegate(x, y, z, args);
      };
      G__10844.cljs$core$IFn$_invoke$arity$variadic = G__10844__delegate;
      return G__10844;
    }();
    G__10843 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10843__0.call(this);
        case 1:
          return G__10843__1.call(this, x);
        case 2:
          return G__10843__2.call(this, x, y);
        case 3:
          return G__10843__3.call(this, x, y, z);
        default:
          var G__10847 = null;
          if (arguments.length > 3) {
            var G__10848__i = 0, G__10848__a = new Array(arguments.length - 3);
            while (G__10848__i < G__10848__a.length) {
              G__10848__a[G__10848__i] = arguments[G__10848__i + 3];
              ++G__10848__i;
            }
            G__10847 = new cljs.core.IndexedSeq(G__10848__a, 0);
          }
          return G__10843__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10847);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10843.cljs$lang$maxFixedArity = 3;
    G__10843.cljs$lang$applyTo = G__10843__4.cljs$lang$applyTo;
    G__10843.cljs$core$IFn$_invoke$arity$0 = G__10843__0;
    G__10843.cljs$core$IFn$_invoke$arity$1 = G__10843__1;
    G__10843.cljs$core$IFn$_invoke$arity$2 = G__10843__2;
    G__10843.cljs$core$IFn$_invoke$arity$3 = G__10843__3;
    G__10843.cljs$core$IFn$_invoke$arity$variadic = G__10843__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10843;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__10849 = null;
    var G__10849__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__10849__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__10849__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__10849__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__10849__4 = function() {
      var G__10850__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__10850 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10851__i = 0, G__10851__a = new Array(arguments.length - 3);
          while (G__10851__i < G__10851__a.length) {
            G__10851__a[G__10851__i] = arguments[G__10851__i + 3];
            ++G__10851__i;
          }
          args = new cljs.core.IndexedSeq(G__10851__a, 0);
        }
        return G__10850__delegate.call(this, x, y, z, args);
      };
      G__10850.cljs$lang$maxFixedArity = 3;
      G__10850.cljs$lang$applyTo = function(arglist__10852) {
        var x = cljs.core.first(arglist__10852);
        arglist__10852 = cljs.core.next(arglist__10852);
        var y = cljs.core.first(arglist__10852);
        arglist__10852 = cljs.core.next(arglist__10852);
        var z = cljs.core.first(arglist__10852);
        var args = cljs.core.rest(arglist__10852);
        return G__10850__delegate(x, y, z, args);
      };
      G__10850.cljs$core$IFn$_invoke$arity$variadic = G__10850__delegate;
      return G__10850;
    }();
    G__10849 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10849__0.call(this);
        case 1:
          return G__10849__1.call(this, x);
        case 2:
          return G__10849__2.call(this, x, y);
        case 3:
          return G__10849__3.call(this, x, y, z);
        default:
          var G__10853 = null;
          if (arguments.length > 3) {
            var G__10854__i = 0, G__10854__a = new Array(arguments.length - 3);
            while (G__10854__i < G__10854__a.length) {
              G__10854__a[G__10854__i] = arguments[G__10854__i + 3];
              ++G__10854__i;
            }
            G__10853 = new cljs.core.IndexedSeq(G__10854__a, 0);
          }
          return G__10849__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10853);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10849.cljs$lang$maxFixedArity = 3;
    G__10849.cljs$lang$applyTo = G__10849__4.cljs$lang$applyTo;
    G__10849.cljs$core$IFn$_invoke$arity$0 = G__10849__0;
    G__10849.cljs$core$IFn$_invoke$arity$1 = G__10849__1;
    G__10849.cljs$core$IFn$_invoke$arity$2 = G__10849__2;
    G__10849.cljs$core$IFn$_invoke$arity$3 = G__10849__3;
    G__10849.cljs$core$IFn$_invoke$arity$variadic = G__10849__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10849;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__10855 = null;
      var G__10855__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10816_SHARP_, p2__10817_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10816_SHARP_, p2__10817_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10817_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10817_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10855__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10818_SHARP_, p2__10819_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10818_SHARP_, p2__10819_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10819_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__10819_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10855__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10820_SHARP_, p2__10821_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10820_SHARP_, p2__10821_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10821_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__10821_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10855__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10822_SHARP_, p2__10823_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10822_SHARP_, p2__10823_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10823_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__10823_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10855__4 = function() {
        var G__10856__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__10824_SHARP_, p2__10825_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10824_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10825_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10856 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10857__i = 0, G__10857__a = new Array(arguments.length - 3);
            while (G__10857__i < G__10857__a.length) {
              G__10857__a[G__10857__i] = arguments[G__10857__i + 3];
              ++G__10857__i;
            }
            args = new cljs.core.IndexedSeq(G__10857__a, 0);
          }
          return G__10856__delegate.call(this, x, y, z, args);
        };
        G__10856.cljs$lang$maxFixedArity = 3;
        G__10856.cljs$lang$applyTo = function(arglist__10858) {
          var x = cljs.core.first(arglist__10858);
          arglist__10858 = cljs.core.next(arglist__10858);
          var y = cljs.core.first(arglist__10858);
          arglist__10858 = cljs.core.next(arglist__10858);
          var z = cljs.core.first(arglist__10858);
          var args = cljs.core.rest(arglist__10858);
          return G__10856__delegate(x, y, z, args);
        };
        G__10856.cljs$core$IFn$_invoke$arity$variadic = G__10856__delegate;
        return G__10856;
      }();
      G__10855 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10855__0.call(this);
          case 1:
            return G__10855__1.call(this, x);
          case 2:
            return G__10855__2.call(this, x, y);
          case 3:
            return G__10855__3.call(this, x, y, z);
          default:
            var G__10859 = null;
            if (arguments.length > 3) {
              var G__10860__i = 0, G__10860__a = new Array(arguments.length - 3);
              while (G__10860__i < G__10860__a.length) {
                G__10860__a[G__10860__i] = arguments[G__10860__i + 3];
                ++G__10860__i;
              }
              G__10859 = new cljs.core.IndexedSeq(G__10860__a, 0);
            }
            return G__10855__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10859);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10855.cljs$lang$maxFixedArity = 3;
      G__10855.cljs$lang$applyTo = G__10855__4.cljs$lang$applyTo;
      G__10855.cljs$core$IFn$_invoke$arity$0 = G__10855__0;
      G__10855.cljs$core$IFn$_invoke$arity$1 = G__10855__1;
      G__10855.cljs$core$IFn$_invoke$arity$2 = G__10855__2;
      G__10855.cljs$core$IFn$_invoke$arity$3 = G__10855__3;
      G__10855.cljs$core$IFn$_invoke$arity$variadic = G__10855__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10855;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq10827) {
  var G__10828 = cljs.core.first(seq10827);
  var seq10827__$1 = cljs.core.next(seq10827);
  var G__10829 = cljs.core.first(seq10827__$1);
  var seq10827__$2 = cljs.core.next(seq10827__$1);
  var G__10830 = cljs.core.first(seq10827__$2);
  var seq10827__$3 = cljs.core.next(seq10827__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__10828, G__10829, G__10830, seq10827__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args10861 = [];
  var len__7279__auto___10864 = arguments.length;
  var i__7280__auto___10865 = 0;
  while (true) {
    if (i__7280__auto___10865 < len__7279__auto___10864) {
      args10861.push(arguments[i__7280__auto___10865]);
      var G__10866 = i__7280__auto___10865 + 1;
      i__7280__auto___10865 = G__10866;
      continue;
    } else {
    }
    break;
  }
  var G__10863 = args10861.length;
  switch(G__10863) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10861.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__10868 = cljs.core.next(coll);
      coll = G__10868;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__10869 = n - 1;
      var G__10870 = cljs.core.next(coll);
      n = G__10869;
      coll = G__10870;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args10871 = [];
  var len__7279__auto___10874 = arguments.length;
  var i__7280__auto___10875 = 0;
  while (true) {
    if (i__7280__auto___10875 < len__7279__auto___10874) {
      args10871.push(arguments[i__7280__auto___10875]);
      var G__10876 = i__7280__auto___10875 + 1;
      i__7280__auto___10875 = G__10876;
      continue;
    } else {
    }
    break;
  }
  var G__10873 = args10871.length;
  switch(G__10873) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10871.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__10879 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10879, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10879, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__6210__auto__ = flags;
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10887 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__6210__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__10888_10894 = cljs.core.first(coll);
          var G__10889_10895 = writer;
          var G__10890_10896 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10888_10894, G__10889_10895, G__10890_10896) : print_one.call(null, G__10888_10894, G__10889_10895, G__10890_10896);
        } else {
        }
        var coll_10897__$1 = cljs.core.next(coll);
        var n_10898 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_10897__$1 && (n_10898 == null || !(n_10898 === 0))) {
            cljs.core._write(writer, sep);
            var G__10891_10899 = cljs.core.first(coll_10897__$1);
            var G__10892_10900 = writer;
            var G__10893_10901 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10891_10899, G__10892_10900, G__10893_10901) : print_one.call(null, G__10891_10899, G__10892_10900, G__10893_10901);
            var G__10902 = cljs.core.next(coll_10897__$1);
            var G__10903 = n_10898 - 1;
            coll_10897__$1 = G__10902;
            n_10898 = G__10903;
            continue;
          } else {
            if (cljs.core.seq(coll_10897__$1) && n_10898 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__6210__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__6210__auto__)) {
                  return or__6210__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10887;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10910 = arguments.length;
  var i__7280__auto___10911 = 0;
  while (true) {
    if (i__7280__auto___10911 < len__7279__auto___10910) {
      args__7286__auto__.push(arguments[i__7280__auto___10911]);
      var G__10912 = i__7280__auto___10911 + 1;
      i__7280__auto___10911 = G__10912;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__10906 = cljs.core.seq(ss);
  var chunk__10907 = null;
  var count__10908 = 0;
  var i__10909 = 0;
  while (true) {
    if (i__10909 < count__10908) {
      var s = chunk__10907.cljs$core$IIndexed$_nth$arity$2(null, i__10909);
      cljs.core._write(writer, s);
      var G__10913 = seq__10906;
      var G__10914 = chunk__10907;
      var G__10915 = count__10908;
      var G__10916 = i__10909 + 1;
      seq__10906 = G__10913;
      chunk__10907 = G__10914;
      count__10908 = G__10915;
      i__10909 = G__10916;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__10906);
      if (temp__4657__auto__) {
        var seq__10906__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10906__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__10906__$1);
          var G__10917 = cljs.core.chunk_rest(seq__10906__$1);
          var G__10918 = c__7021__auto__;
          var G__10919 = cljs.core.count(c__7021__auto__);
          var G__10920 = 0;
          seq__10906 = G__10917;
          chunk__10907 = G__10918;
          count__10908 = G__10919;
          i__10909 = G__10920;
          continue;
        } else {
          var s = cljs.core.first(seq__10906__$1);
          cljs.core._write(writer, s);
          var G__10921 = cljs.core.next(seq__10906__$1);
          var G__10922 = null;
          var G__10923 = 0;
          var G__10924 = 0;
          seq__10906 = G__10921;
          chunk__10907 = G__10922;
          count__10908 = G__10923;
          i__10909 = G__10924;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq10904) {
  var G__10905 = cljs.core.first(seq10904);
  var seq10904__$1 = cljs.core.next(seq10904);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__10905, seq10904__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10926 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10926;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__6198__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__6198__auto__) {
    var and__6198__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__6198__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__6198__auto____$1;
    }
  } else {
    return and__6198__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__10941_10949 = cljs.core.meta(obj);
      var G__10942_10950 = writer;
      var G__10943_10951 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10941_10949, G__10942_10950, G__10943_10951) : cljs.core.pr_writer.call(null, G__10941_10949, G__10942_10950, G__10943_10951);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__10945 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__10946 = cljs.core.pr_writer;
            var G__10947 = writer;
            var G__10948 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10945, G__10946, G__10947, G__10948) : cljs.core.print_map.call(null, G__10945, G__10946, G__10947, G__10948);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__6210__auto__ = name == null;
                    if (or__6210__auto__) {
                      return or__6210__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__10952 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__10952;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__6210__auto__ = name == null;
                          if (or__6210__auto__) {
                            return or__6210__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__10956 = obj;
    var G__10957 = writer;
    var G__10958 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10956, G__10957, G__10958) : alt_impl.call(null, G__10956, G__10957, G__10958);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__10963 = cljs.core.seq(cljs.core.next(objs));
  var chunk__10964 = null;
  var count__10965 = 0;
  var i__10966 = 0;
  while (true) {
    if (i__10966 < count__10965) {
      var obj = chunk__10964.cljs$core$IIndexed$_nth$arity$2(null, i__10966);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__10967 = seq__10963;
      var G__10968 = chunk__10964;
      var G__10969 = count__10965;
      var G__10970 = i__10966 + 1;
      seq__10963 = G__10967;
      chunk__10964 = G__10968;
      count__10965 = G__10969;
      i__10966 = G__10970;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__10963);
      if (temp__4657__auto__) {
        var seq__10963__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10963__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first(seq__10963__$1);
          var G__10971 = cljs.core.chunk_rest(seq__10963__$1);
          var G__10972 = c__7021__auto__;
          var G__10973 = cljs.core.count(c__7021__auto__);
          var G__10974 = 0;
          seq__10963 = G__10971;
          chunk__10964 = G__10972;
          count__10965 = G__10973;
          i__10966 = G__10974;
          continue;
        } else {
          var obj = cljs.core.first(seq__10963__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__10975 = cljs.core.next(seq__10963__$1);
          var G__10976 = null;
          var G__10977 = 0;
          var G__10978 = 0;
          seq__10963 = G__10975;
          chunk__10964 = G__10976;
          count__10965 = G__10977;
          i__10966 = G__10978;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args10979 = [];
  var len__7279__auto___10982 = arguments.length;
  var i__7280__auto___10983 = 0;
  while (true) {
    if (i__7280__auto___10983 < len__7279__auto___10982) {
      args10979.push(arguments[i__7280__auto___10983]);
      var G__10984 = i__7280__auto___10983 + 1;
      i__7280__auto___10983 = G__10984;
      continue;
    } else {
    }
    break;
  }
  var G__10981 = args10979.length;
  switch(G__10981) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10979.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10987 = arguments.length;
  var i__7280__auto___10988 = 0;
  while (true) {
    if (i__7280__auto___10988 < len__7279__auto___10987) {
      args__7286__auto__.push(arguments[i__7280__auto___10988]);
      var G__10989 = i__7280__auto___10988 + 1;
      i__7280__auto___10988 = G__10989;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq10986) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10986));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10991 = arguments.length;
  var i__7280__auto___10992 = 0;
  while (true) {
    if (i__7280__auto___10992 < len__7279__auto___10991) {
      args__7286__auto__.push(arguments[i__7280__auto___10992]);
      var G__10993 = i__7280__auto___10992 + 1;
      i__7280__auto___10992 = G__10993;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq10990) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10990));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___10995 = arguments.length;
  var i__7280__auto___10996 = 0;
  while (true) {
    if (i__7280__auto___10996 < len__7279__auto___10995) {
      args__7286__auto__.push(arguments[i__7280__auto___10996]);
      var G__10997 = i__7280__auto___10996 + 1;
      i__7280__auto___10996 = G__10997;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq10994) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10994));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10998__i = 0, G__10998__a = new Array(arguments.length - 0);
      while (G__10998__i < G__10998__a.length) {
        G__10998__a[G__10998__i] = arguments[G__10998__i + 0];
        ++G__10998__i;
      }
      objs = new cljs.core.IndexedSeq(G__10998__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__10999) {
    var objs = cljs.core.seq(arglist__10999);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11001 = arguments.length;
  var i__7280__auto___11002 = 0;
  while (true) {
    if (i__7280__auto___11002 < len__7279__auto___11001) {
      args__7286__auto__.push(arguments[i__7280__auto___11002]);
      var G__11003 = i__7280__auto___11002 + 1;
      i__7280__auto___11002 = G__11003;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq11000) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11000));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11005 = arguments.length;
  var i__7280__auto___11006 = 0;
  while (true) {
    if (i__7280__auto___11006 < len__7279__auto___11005) {
      args__7286__auto__.push(arguments[i__7280__auto___11006]);
      var G__11007 = i__7280__auto___11006 + 1;
      i__7280__auto___11006 = G__11007;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq11004) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11004));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11009 = arguments.length;
  var i__7280__auto___11010 = 0;
  while (true) {
    if (i__7280__auto___11010 < len__7279__auto___11009) {
      args__7286__auto__.push(arguments[i__7280__auto___11010]);
      var G__11011 = i__7280__auto___11010 + 1;
      i__7280__auto___11010 = G__11011;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq11008) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11008));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11013 = arguments.length;
  var i__7280__auto___11014 = 0;
  while (true) {
    if (i__7280__auto___11014 < len__7279__auto___11013) {
      args__7286__auto__.push(arguments[i__7280__auto___11014]);
      var G__11015 = i__7280__auto___11014 + 1;
      i__7280__auto___11014 = G__11015;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq11012) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11012));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__11022_11028 = cljs.core.key(e);
    var G__11023_11029 = w;
    var G__11024_11030 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11022_11028, G__11023_11029, G__11024_11030) : print_one.call(null, G__11022_11028, G__11023_11029, G__11024_11030);
    cljs.core._write(w, " ");
    var G__11025 = cljs.core.val(e);
    var G__11026 = w;
    var G__11027 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11025, G__11026, G__11027) : print_one.call(null, G__11025, G__11026, G__11027);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11034 = arguments.length;
  var i__7280__auto___11035 = 0;
  while (true) {
    if (i__7280__auto___11035 < len__7279__auto___11034) {
      args__7286__auto__.push(arguments[i__7280__auto___11035]);
      var G__11036 = i__7280__auto___11035 + 1;
      i__7280__auto___11035 = G__11036;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 2 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7287__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq11031) {
  var G__11032 = cljs.core.first(seq11031);
  var seq11031__$1 = cljs.core.next(seq11031);
  var G__11033 = cljs.core.first(seq11031__$1);
  var seq11031__$2 = cljs.core.next(seq11031__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11032, G__11033, seq11031__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args11037 = [];
  var len__7279__auto___11040 = arguments.length;
  var i__7280__auto___11041 = 0;
  while (true) {
    if (i__7280__auto___11041 < len__7279__auto___11040) {
      args11037.push(arguments[i__7280__auto___11041]);
      var G__11042 = i__7280__auto___11041 + 1;
      i__7280__auto___11041 = G__11042;
      continue;
    } else {
    }
    break;
  }
  var G__11039 = args11037.length;
  switch(G__11039) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11037.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__11044_SHARP_, p2__11045_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__11044_SHARP_, p2__11045_SHARP_) : rf.call(null, p1__11044_SHARP_, p2__11045_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__11046 = null;
      var G__11046__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11046__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11046__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__11046 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11046__0.call(this);
          case 1:
            return G__11046__1.call(this, result);
          case 2:
            return G__11046__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11046.cljs$core$IFn$_invoke$arity$0 = G__11046__0;
      G__11046.cljs$core$IFn$_invoke$arity$1 = G__11046__1;
      G__11046.cljs$core$IFn$_invoke$arity$2 = G__11046__2;
      return G__11046;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args11047 = [];
  var len__7279__auto___11050 = arguments.length;
  var i__7280__auto___11051 = 0;
  while (true) {
    if (i__7280__auto___11051 < len__7279__auto___11050) {
      args11047.push(arguments[i__7280__auto___11051]);
      var G__11052 = i__7280__auto___11051 + 1;
      i__7280__auto___11051 = G__11052;
      continue;
    } else {
    }
    break;
  }
  var G__11049 = args11047.length;
  switch(G__11049) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11047.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__11054 = null;
        var G__11054__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11054__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__11054__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__11054 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11054__0.call(this);
            case 1:
              return G__11054__1.call(this, result);
            case 2:
              return G__11054__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11054.cljs$core$IFn$_invoke$arity$0 = G__11054__0;
        G__11054.cljs$core$IFn$_invoke$arity$1 = G__11054__1;
        G__11054.cljs$core$IFn$_invoke$arity$2 = G__11054__2;
        return G__11054;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args11055 = [];
  var len__7279__auto___11058 = arguments.length;
  var i__7280__auto___11059 = 0;
  while (true) {
    if (i__7280__auto___11059 < len__7279__auto___11058) {
      args11055.push(arguments[i__7280__auto___11059]);
      var G__11060 = i__7280__auto___11059 + 1;
      i__7280__auto___11059 = G__11060;
      continue;
    } else {
    }
    break;
  }
  var G__11057 = args11055.length;
  switch(G__11057) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11055.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__11062 = null;
  var G__11062__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__11062__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__11062 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11062__1.call(this, x);
      case 2:
        return G__11062__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11062.cljs$core$IFn$_invoke$arity$1 = G__11062__1;
  G__11062.cljs$core$IFn$_invoke$arity$2 = G__11062__2;
  return G__11062;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__11063 = null;
  var G__11063__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__11063__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__11063 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11063__1.call(this, x);
      case 2:
        return G__11063__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11063.cljs$core$IFn$_invoke$arity$1 = G__11063__1;
  G__11063.cljs$core$IFn$_invoke$arity$2 = G__11063__2;
  return G__11063;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__7215__auto__ = this;
  return cljs.core.es6_iterator(this__7215__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11065 = arguments.length;
  var i__7280__auto___11066 = 0;
  while (true) {
    if (i__7280__auto___11066 < len__7279__auto___11065) {
      args__7286__auto__.push(arguments[i__7280__auto___11066]);
      var G__11067 = i__7280__auto___11066 + 1;
      i__7280__auto___11066 = G__11067;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq11064) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11064));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11069_SHARP_, p2__11068_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__11068_SHARP_) : proc.call(null, p2__11068_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._key__GT_js[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto__.call(null, x);
    } else {
      var m__6874__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__6874__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__11088_11098 = cljs.core.seq(x);
            var chunk__11089_11099 = null;
            var count__11090_11100 = 0;
            var i__11091_11101 = 0;
            while (true) {
              if (i__11091_11101 < count__11090_11100) {
                var vec__11092_11102 = chunk__11089_11099.cljs$core$IIndexed$_nth$arity$2(null, i__11091_11101);
                var k_11103 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11092_11102, 0, null);
                var v_11104 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11092_11102, 1, null);
                m[cljs.core.key__GT_js(k_11103)] = cljs$core$clj__GT_js(v_11104);
                var G__11105 = seq__11088_11098;
                var G__11106 = chunk__11089_11099;
                var G__11107 = count__11090_11100;
                var G__11108 = i__11091_11101 + 1;
                seq__11088_11098 = G__11105;
                chunk__11089_11099 = G__11106;
                count__11090_11100 = G__11107;
                i__11091_11101 = G__11108;
                continue;
              } else {
                var temp__4657__auto___11109 = cljs.core.seq(seq__11088_11098);
                if (temp__4657__auto___11109) {
                  var seq__11088_11110__$1 = temp__4657__auto___11109;
                  if (cljs.core.chunked_seq_QMARK_(seq__11088_11110__$1)) {
                    var c__7021__auto___11111 = cljs.core.chunk_first(seq__11088_11110__$1);
                    var G__11112 = cljs.core.chunk_rest(seq__11088_11110__$1);
                    var G__11113 = c__7021__auto___11111;
                    var G__11114 = cljs.core.count(c__7021__auto___11111);
                    var G__11115 = 0;
                    seq__11088_11098 = G__11112;
                    chunk__11089_11099 = G__11113;
                    count__11090_11100 = G__11114;
                    i__11091_11101 = G__11115;
                    continue;
                  } else {
                    var vec__11093_11116 = cljs.core.first(seq__11088_11110__$1);
                    var k_11117 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11093_11116, 0, null);
                    var v_11118 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11093_11116, 1, null);
                    m[cljs.core.key__GT_js(k_11117)] = cljs$core$clj__GT_js(v_11118);
                    var G__11119 = cljs.core.next(seq__11088_11110__$1);
                    var G__11120 = null;
                    var G__11121 = 0;
                    var G__11122 = 0;
                    seq__11088_11098 = G__11119;
                    chunk__11089_11099 = G__11120;
                    count__11090_11100 = G__11121;
                    i__11091_11101 = G__11122;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__11094_11123 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__11095_11124 = null;
              var count__11096_11125 = 0;
              var i__11097_11126 = 0;
              while (true) {
                if (i__11097_11126 < count__11096_11125) {
                  var x_11127__$1 = chunk__11095_11124.cljs$core$IIndexed$_nth$arity$2(null, i__11097_11126);
                  arr.push(x_11127__$1);
                  var G__11128 = seq__11094_11123;
                  var G__11129 = chunk__11095_11124;
                  var G__11130 = count__11096_11125;
                  var G__11131 = i__11097_11126 + 1;
                  seq__11094_11123 = G__11128;
                  chunk__11095_11124 = G__11129;
                  count__11096_11125 = G__11130;
                  i__11097_11126 = G__11131;
                  continue;
                } else {
                  var temp__4657__auto___11132 = cljs.core.seq(seq__11094_11123);
                  if (temp__4657__auto___11132) {
                    var seq__11094_11133__$1 = temp__4657__auto___11132;
                    if (cljs.core.chunked_seq_QMARK_(seq__11094_11133__$1)) {
                      var c__7021__auto___11134 = cljs.core.chunk_first(seq__11094_11133__$1);
                      var G__11135 = cljs.core.chunk_rest(seq__11094_11133__$1);
                      var G__11136 = c__7021__auto___11134;
                      var G__11137 = cljs.core.count(c__7021__auto___11134);
                      var G__11138 = 0;
                      seq__11094_11123 = G__11135;
                      chunk__11095_11124 = G__11136;
                      count__11096_11125 = G__11137;
                      i__11097_11126 = G__11138;
                      continue;
                    } else {
                      var x_11139__$1 = cljs.core.first(seq__11094_11133__$1);
                      arr.push(x_11139__$1);
                      var G__11140 = cljs.core.next(seq__11094_11133__$1);
                      var G__11141 = null;
                      var G__11142 = 0;
                      var G__11143 = 0;
                      seq__11094_11123 = G__11140;
                      chunk__11095_11124 = G__11141;
                      count__11096_11125 = G__11142;
                      i__11097_11126 = G__11143;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__6873__auto__ = x == null ? null : x;
    var m__6874__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__6874__auto__.call(null, x, options);
    } else {
      var m__6874__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__6874__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args11144 = [];
  var len__7279__auto___11169 = arguments.length;
  var i__7280__auto___11170 = 0;
  while (true) {
    if (i__7280__auto___11170 < len__7279__auto___11169) {
      args11144.push(arguments[i__7280__auto___11170]);
      var G__11171 = i__7280__auto___11170 + 1;
      i__7280__auto___11170 = G__11171;
      continue;
    } else {
    }
    break;
  }
  var G__11148 = args11144.length;
  switch(G__11148) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args11144.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__11149 = opts;
  var map__11149__$1 = (!(map__11149 == null) ? map__11149.cljs$lang$protocol_mask$partition0$ & 64 || map__11149.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11149) : map__11149;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11149__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__11149, map__11149__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__6990__auto__ = function(map__11149, map__11149__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__11163(s__11164) {
                      return new cljs.core.LazySeq(null, function(map__11149, map__11149__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__11164__$1 = s__11164;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__11164__$1);
                            if (temp__4657__auto__) {
                              var s__11164__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__11164__$2)) {
                                var c__6988__auto__ = cljs.core.chunk_first(s__11164__$2);
                                var size__6989__auto__ = cljs.core.count(c__6988__auto__);
                                var b__11166 = cljs.core.chunk_buffer(size__6989__auto__);
                                if (function() {
                                  var i__11165 = 0;
                                  while (true) {
                                    if (i__11165 < size__6989__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6988__auto__, i__11165);
                                      cljs.core.chunk_append(b__11166, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__11173 = i__11165 + 1;
                                      i__11165 = G__11173;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__11166), cljs$core$thisfn_$_iter__11163(cljs.core.chunk_rest(s__11164__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__11166), null);
                                }
                              } else {
                                var k = cljs.core.first(s__11164__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__11163(cljs.core.rest(s__11164__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__11149, map__11149__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__11149, map__11149__$1, keywordize_keys, keyfn);
                  return iter__6990__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__11149, map__11149__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq11145) {
  var G__11146 = cljs.core.first(seq11145);
  var seq11145__$1 = cljs.core.next(seq11145);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__11146, seq11145__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__11175 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11175) : cljs.core.atom.call(null, G__11175);
  }();
  return function(mem) {
    return function() {
      var G__11176__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__11176 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__11177__i = 0, G__11177__a = new Array(arguments.length - 0);
          while (G__11177__i < G__11177__a.length) {
            G__11177__a[G__11177__i] = arguments[G__11177__i + 0];
            ++G__11177__i;
          }
          args = new cljs.core.IndexedSeq(G__11177__a, 0);
        }
        return G__11176__delegate.call(this, args);
      };
      G__11176.cljs$lang$maxFixedArity = 0;
      G__11176.cljs$lang$applyTo = function(arglist__11178) {
        var args = cljs.core.seq(arglist__11178);
        return G__11176__delegate(args);
      };
      G__11176.cljs$core$IFn$_invoke$arity$variadic = G__11176__delegate;
      return G__11176;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args11179 = [];
  var len__7279__auto___11184 = arguments.length;
  var i__7280__auto___11185 = 0;
  while (true) {
    if (i__7280__auto___11185 < len__7279__auto___11184) {
      args11179.push(arguments[i__7280__auto___11185]);
      var G__11186 = i__7280__auto___11185 + 1;
      i__7280__auto___11185 = G__11186;
      continue;
    } else {
    }
    break;
  }
  var G__11183 = args11179.length;
  switch(G__11183) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args11179.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7298__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__11188 = ret;
      f = G__11188;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq11180) {
  var G__11181 = cljs.core.first(seq11180);
  var seq11180__$1 = cljs.core.next(seq11180);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__11181, seq11180__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args11189 = [];
  var len__7279__auto___11192 = arguments.length;
  var i__7280__auto___11193 = 0;
  while (true) {
    if (i__7280__auto___11193 < len__7279__auto___11192) {
      args11189.push(arguments[i__7280__auto___11193]);
      var G__11194 = i__7280__auto___11193 + 1;
      i__7280__auto___11193 = G__11194;
      continue;
    } else {
    }
    break;
  }
  var G__11191 = args11189.length;
  switch(G__11191) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11189.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__11197 = Math.random() * n;
  return Math.floor(G__11197);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__11199 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11199) : cljs.core.atom.call(null, G__11199);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11202 = arguments.length;
  var i__7280__auto___11203 = 0;
  while (true) {
    if (i__7280__auto___11203 < len__7279__auto___11202) {
      args__7286__auto__.push(arguments[i__7280__auto___11203]);
      var G__11204 = i__7280__auto___11203 + 1;
      i__7280__auto___11203 = G__11204;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq11200) {
  var G__11201 = cljs.core.first(seq11200);
  var seq11200__$1 = cljs.core.next(seq11200);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11201, seq11200__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args11205 = [];
  var len__7279__auto___11209 = arguments.length;
  var i__7280__auto___11210 = 0;
  while (true) {
    if (i__7280__auto___11210 < len__7279__auto___11209) {
      args11205.push(arguments[i__7280__auto___11210]);
      var G__11211 = i__7280__auto___11210 + 1;
      i__7280__auto___11210 = G__11211;
      continue;
    } else {
    }
    break;
  }
  var G__11207 = args11205.length;
  switch(G__11207) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11205.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__11208 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11208) : cljs.core.deref.call(null, G__11208);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__6210__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__6210__auto__) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      var and__6198__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__6198__auto__) {
        var and__6198__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__6198__auto____$1) {
          var and__6198__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__6198__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__11213 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__11214 = i + 1;
                ret = G__11213;
                i = G__11214;
                continue;
              }
              break;
            }
          } else {
            return and__6198__auto____$2;
          }
        } else {
          return and__6198__auto____$1;
        }
      } else {
        return and__6198__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args11215 = [];
  var len__7279__auto___11219 = arguments.length;
  var i__7280__auto___11220 = 0;
  while (true) {
    if (i__7280__auto___11220 < len__7279__auto___11219) {
      args11215.push(arguments[i__7280__auto___11220]);
      var G__11221 = i__7280__auto___11220 + 1;
      i__7280__auto___11220 = G__11221;
      continue;
    } else {
    }
    break;
  }
  var G__11217 = args11215.length;
  switch(G__11217) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11215.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11218 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11218) : cljs.core.deref.call(null, G__11218);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args11223 = [];
  var len__7279__auto___11227 = arguments.length;
  var i__7280__auto___11228 = 0;
  while (true) {
    if (i__7280__auto___11228 < len__7279__auto___11227) {
      args11223.push(arguments[i__7280__auto___11228]);
      var G__11229 = i__7280__auto___11228 + 1;
      i__7280__auto___11228 = G__11229;
      continue;
    } else {
    }
    break;
  }
  var G__11225 = args11223.length;
  switch(G__11225) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11223.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11226 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11226) : cljs.core.deref.call(null, G__11226);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args11231 = [];
  var len__7279__auto___11235 = arguments.length;
  var i__7280__auto___11236 = 0;
  while (true) {
    if (i__7280__auto___11236 < len__7279__auto___11235) {
      args11231.push(arguments[i__7280__auto___11236]);
      var G__11237 = i__7280__auto___11236 + 1;
      i__7280__auto___11236 = G__11237;
      continue;
    } else {
    }
    break;
  }
  var G__11233 = args11231.length;
  switch(G__11233) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11231.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11234 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11234) : cljs.core.deref.call(null, G__11234);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args11239 = [];
  var len__7279__auto___11242 = arguments.length;
  var i__7280__auto___11243 = 0;
  while (true) {
    if (i__7280__auto___11243 < len__7279__auto___11242) {
      args11239.push(arguments[i__7280__auto___11243]);
      var G__11244 = i__7280__auto___11243 + 1;
      i__7280__auto___11243 = G__11244;
      continue;
    } else {
    }
    break;
  }
  var G__11241 = args11239.length;
  switch(G__11241) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11239.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__6210__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args11249 = [];
  var len__7279__auto___11252 = arguments.length;
  var i__7280__auto___11253 = 0;
  while (true) {
    if (i__7280__auto___11253 < len__7279__auto___11252) {
      args11249.push(arguments[i__7280__auto___11253]);
      var G__11254 = i__7280__auto___11253 + 1;
      i__7280__auto___11253 = G__11254;
      continue;
    } else {
    }
    break;
  }
  var G__11251 = args11249.length;
  switch(G__11251) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11249.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__11246_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__11246_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11246_SHARP_), cljs.core.second(p1__11246_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__11247_SHARP_, p2__11248_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__11247_SHARP_, p2__11248_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__6210__auto__ = cljs.core.truth_(function() {
    var and__6198__auto__ = xprefs;
    if (cljs.core.truth_(and__6198__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__6198__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__11268 = cljs.core.rest(ps);
          ps = G__11268;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__6210__auto____$1)) {
      return or__6210__auto____$1;
    } else {
      var or__6210__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__11269 = cljs.core.rest(ps);
            ps = G__11269;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__6210__auto____$2)) {
        return or__6210__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__6210__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__11272) {
    var vec__11273 = p__11272;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11273, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11273, 1, null);
    var e = vec__11273;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__6210__auto__ = be == null;
        if (or__6210__auto__) {
          return or__6210__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._reset[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._reset["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._add_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6874__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__6874__auto____$1 = cljs.core._add_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__6874__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._remove_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6874__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._prefer_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6874__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__6874__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__6874__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._get_method[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto__.call(null, mf, dispatch_val);
    } else {
      var m__6874__auto____$1 = cljs.core._get_method["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__6874__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._methods[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._methods["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._prefers[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._prefers["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__6873__auto__ = mf == null ? null : mf;
    var m__6874__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto__.call(null, mf);
    } else {
      var m__6874__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__6874__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__6874__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11275 = null;
  var G__11275__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11275__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__11275__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__11275__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__11275__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__11275__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__11275__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__11275__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__11275__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__11275__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11275__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11275__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11275__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11275__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11275__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11275__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11275__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11275__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11275__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11275__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11275__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11275__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11275 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11275__1.call(this, self__);
      case 2:
        return G__11275__2.call(this, self__, a);
      case 3:
        return G__11275__3.call(this, self__, a, b);
      case 4:
        return G__11275__4.call(this, self__, a, b, c);
      case 5:
        return G__11275__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11275__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11275__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11275__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11275__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11275__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11275__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11275__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11275__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11275__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11275__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11275__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11275__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11275__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11275__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11275__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11275__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11275__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11275.cljs$core$IFn$_invoke$arity$1 = G__11275__1;
  G__11275.cljs$core$IFn$_invoke$arity$2 = G__11275__2;
  G__11275.cljs$core$IFn$_invoke$arity$3 = G__11275__3;
  G__11275.cljs$core$IFn$_invoke$arity$4 = G__11275__4;
  G__11275.cljs$core$IFn$_invoke$arity$5 = G__11275__5;
  G__11275.cljs$core$IFn$_invoke$arity$6 = G__11275__6;
  G__11275.cljs$core$IFn$_invoke$arity$7 = G__11275__7;
  G__11275.cljs$core$IFn$_invoke$arity$8 = G__11275__8;
  G__11275.cljs$core$IFn$_invoke$arity$9 = G__11275__9;
  G__11275.cljs$core$IFn$_invoke$arity$10 = G__11275__10;
  G__11275.cljs$core$IFn$_invoke$arity$11 = G__11275__11;
  G__11275.cljs$core$IFn$_invoke$arity$12 = G__11275__12;
  G__11275.cljs$core$IFn$_invoke$arity$13 = G__11275__13;
  G__11275.cljs$core$IFn$_invoke$arity$14 = G__11275__14;
  G__11275.cljs$core$IFn$_invoke$arity$15 = G__11275__15;
  G__11275.cljs$core$IFn$_invoke$arity$16 = G__11275__16;
  G__11275.cljs$core$IFn$_invoke$arity$17 = G__11275__17;
  G__11275.cljs$core$IFn$_invoke$arity$18 = G__11275__18;
  G__11275.cljs$core$IFn$_invoke$arity$19 = G__11275__19;
  G__11275.cljs$core$IFn$_invoke$arity$20 = G__11275__20;
  G__11275.cljs$core$IFn$_invoke$arity$21 = G__11275__21;
  G__11275.cljs$core$IFn$_invoke$arity$22 = G__11275__22;
  return G__11275;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args11274) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11274)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__11276 = self__.uuid;
  var G__11277 = other.uuid;
  return goog.array.defaultCompare(G__11276, G__11277);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args11278 = [];
  var len__7279__auto___11281 = arguments.length;
  var i__7280__auto___11282 = 0;
  while (true) {
    if (i__7280__auto___11282 < len__7279__auto___11281) {
      args11278.push(arguments[i__7280__auto___11282]);
      var G__11283 = i__7280__auto___11282 + 1;
      i__7280__auto___11282 = G__11283;
      continue;
    } else {
    }
    break;
  }
  var G__11280 = args11278.length;
  switch(G__11280) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11278.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, 
  "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, 
  null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, 
  "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__11285 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__11285) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11287_SHARP_, p2__11288_SHARP_) {
      goog.object.set(p1__11287_SHARP_, p2__11288_SHARP_, true);
      return p1__11287_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__11291 = cljs.core.next(ks__$1);
          var G__11292 = [cljs.core.str(function() {
            var G__11290 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__11290), cljs.core.str("|")].join("");
            } else {
              return G__11290;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__11291;
          ret = G__11292;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_11293 = 0;
  while (true) {
    if (i_11293 < name.length) {
      var c_11294 = name.charAt(i_11293);
      var sub_11295 = goog.object.get(cljs.core.CHAR_MAP, c_11294);
      if (!(sub_11295 == null)) {
        sb.append(sub_11295);
      } else {
        sb.append(c_11294);
      }
      var G__11296 = i_11293 + 1;
      i_11293 = G__11296;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__11298 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11298, 0, null);
      var G__11299 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__11300 = r.lastIndex;
      ret = G__11299;
      last_match_end = G__11300;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write(writer__6817__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__11305 = function() {
          var G__11303 = ctxt;
          var G__11304 = cljs.core.first(xs);
          return goog.object.get(G__11303, G__11304);
        }();
        var G__11306 = cljs.core.next(xs);
        ctxt = G__11305;
        xs = G__11306;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__11310 = cljs.core._STAR_target_STAR_;
  switch(G__11310) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__11312 = cljs.core.first(segs);
            return eval(G__11312);
          } catch (e11311) {
            if (e11311 instanceof ReferenceError) {
              var e = e11311;
              return null;
            } else {
              throw e11311;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args11314 = [];
  var len__7279__auto___11317 = arguments.length;
  var i__7280__auto___11318 = 0;
  while (true) {
    if (i__7280__auto___11318 < len__7279__auto___11317) {
      args11314.push(arguments[i__7280__auto___11318]);
      var G__11319 = i__7280__auto___11318 + 1;
      i__7280__auto___11318 = G__11319;
      continue;
    } else {
    }
    break;
  }
  var G__11316 = args11314.length;
  switch(G__11316) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11314.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__11322 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11322) : cljs.core.atom.call(null, G__11322);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__11324 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11324) : cljs.core.atom.call(null, G__11324);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("todomvc_kierros.intent");
goog.require("cljs.core");
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__11327__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__11327 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11328__i = 0, G__11328__a = new Array(arguments.length - 0);
        while (G__11328__i < G__11328__a.length) {
          G__11328__a[G__11328__i] = arguments[G__11328__i + 0];
          ++G__11328__i;
        }
        args = new cljs.core.IndexedSeq(G__11328__a, 0);
      }
      return G__11327__delegate.call(this, args);
    };
    G__11327.cljs$lang$maxFixedArity = 0;
    G__11327.cljs$lang$applyTo = function(arglist__11329) {
      var args = cljs.core.seq(arglist__11329);
      return G__11327__delegate(args);
    };
    G__11327.cljs$core$IFn$_invoke$arity$variadic = G__11327__delegate;
    return G__11327;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args11330 = [];
  var len__7279__auto___11333 = arguments.length;
  var i__7280__auto___11334 = 0;
  while (true) {
    if (i__7280__auto___11334 < len__7279__auto___11333) {
      args11330.push(arguments[i__7280__auto___11334]);
      var G__11335 = i__7280__auto___11334 + 1;
      i__7280__auto___11334 = G__11335;
      continue;
    } else {
    }
    break;
  }
  var G__11332 = args11330.length;
  switch(G__11332) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11330.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11337 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__11338 = cljs.core.next.call(null, coll__$1);
      sb = G__11337;
      coll__$1 = G__11338;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__11339 = sb;
      var G__11340 = coll__$2;
      sb = G__11339;
      coll__$1 = G__11340;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__11341 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__11341;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__11345 = cljs.core._EQ__EQ_;
    var expr__11346 = limit;
    if (cljs.core.truth_(pred__11345.call(null, 1, expr__11346))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__11345.call(null, 2, expr__11346))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args11348 = [];
  var len__7279__auto___11351 = arguments.length;
  var i__7280__auto___11352 = 0;
  while (true) {
    if (i__7280__auto___11352 < len__7279__auto___11351) {
      args11348.push(arguments[i__7280__auto___11352]);
      var G__11353 = i__7280__auto___11352 + 1;
      i__7280__auto___11352 = G__11353;
      continue;
    } else {
    }
    break;
  }
  var G__11350 = args11348.length;
  switch(G__11350) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11348.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__11355 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__11356 = limit__$1 - 1;
          var G__11357 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__11355;
          limit__$1 = G__11356;
          parts = G__11357;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__11358 = index - 1;
        index = G__11358;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__11359 = index + 1;
      index = G__11359;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args11360 = [];
  var len__7279__auto___11363 = arguments.length;
  var i__7280__auto___11364 = 0;
  while (true) {
    if (i__7280__auto___11364 < len__7279__auto___11363) {
      args11360.push(arguments[i__7280__auto___11364]);
      var G__11365 = i__7280__auto___11364 + 1;
      i__7280__auto___11364 = G__11365;
      continue;
    } else {
    }
    break;
  }
  var G__11362 = args11360.length;
  switch(G__11362) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11360.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args11367 = [];
  var len__7279__auto___11370 = arguments.length;
  var i__7280__auto___11371 = 0;
  while (true) {
    if (i__7280__auto___11371 < len__7279__auto___11370) {
      args11367.push(arguments[i__7280__auto___11371]);
      var G__11372 = i__7280__auto___11371 + 1;
      i__7280__auto___11371 = G__11372;
      continue;
    } else {
    }
    break;
  }
  var G__11369 = args11367.length;
  switch(G__11369) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11367.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("schema.utils");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
goog.require("clojure.string");
schema.utils.assoc_when = function schema$utils$assoc_when(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___17103 = arguments.length;
  var i__7280__auto___17104 = 0;
  while (true) {
    if (i__7280__auto___17104 < len__7279__auto___17103) {
      args__7286__auto__.push(arguments[i__7280__auto___17104]);
      var G__17105 = i__7280__auto___17104 + 1;
      i__7280__auto___17104 = G__17105;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return schema.utils.assoc_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
schema.utils.assoc_when.cljs$core$IFn$_invoke$arity$variadic = function(m, kvs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
  } else {
    throw new Error("Assert failed: (even? (count kvs))");
  }
  return cljs.core.into.call(null, function() {
    var or__6210__auto__ = m;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }(), function() {
    var iter__6990__auto__ = function schema$utils$iter__17095(s__17096) {
      return new cljs.core.LazySeq(null, function() {
        var s__17096__$1 = s__17096;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__17096__$1);
          if (temp__4657__auto__) {
            var s__17096__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17096__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__17096__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__17098 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__17097 = 0;
                while (true) {
                  if (i__17097 < size__6989__auto__) {
                    var vec__17101 = cljs.core._nth.call(null, c__6988__auto__, i__17097);
                    var k = cljs.core.nth.call(null, vec__17101, 0, null);
                    var v = cljs.core.nth.call(null, vec__17101, 1, null);
                    if (cljs.core.truth_(v)) {
                      cljs.core.chunk_append.call(null, b__17098, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                      var G__17106 = i__17097 + 1;
                      i__17097 = G__17106;
                      continue;
                    } else {
                      var G__17107 = i__17097 + 1;
                      i__17097 = G__17107;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17098), schema$utils$iter__17095.call(null, cljs.core.chunk_rest.call(null, s__17096__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17098), null);
              }
            } else {
              var vec__17102 = cljs.core.first.call(null, s__17096__$2);
              var k = cljs.core.nth.call(null, vec__17102, 0, null);
              var v = cljs.core.nth.call(null, vec__17102, 1, null);
              if (cljs.core.truth_(v)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), schema$utils$iter__17095.call(null, cljs.core.rest.call(null, s__17096__$2)));
              } else {
                var G__17108 = cljs.core.rest.call(null, s__17096__$2);
                s__17096__$1 = G__17108;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
  }());
};
schema.utils.assoc_when.cljs$lang$maxFixedArity = 1;
schema.utils.assoc_when.cljs$lang$applyTo = function(seq17093) {
  var G__17094 = cljs.core.first.call(null, seq17093);
  var seq17093__$1 = cljs.core.next.call(null, seq17093);
  return schema.utils.assoc_when.cljs$core$IFn$_invoke$arity$variadic(G__17094, seq17093__$1);
};
schema.utils.type_of = function schema$utils$type_of(x) {
  return typeof x;
};
schema.utils.fn_schema_bearer = function schema$utils$fn_schema_bearer(f) {
  return f;
};
schema.utils.format_STAR_ = function schema$utils$format_STAR_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___17111 = arguments.length;
  var i__7280__auto___17112 = 0;
  while (true) {
    if (i__7280__auto___17112 < len__7279__auto___17111) {
      args__7286__auto__.push(arguments[i__7280__auto___17112]);
      var G__17113 = i__7280__auto___17112 + 1;
      i__7280__auto___17112 = G__17113;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return schema.utils.format_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
schema.utils.format_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(fmt, args) {
  return cljs.core.apply.call(null, goog.string.format, fmt, args);
};
schema.utils.format_STAR_.cljs$lang$maxFixedArity = 1;
schema.utils.format_STAR_.cljs$lang$applyTo = function(seq17109) {
  var G__17110 = cljs.core.first.call(null, seq17109);
  var seq17109__$1 = cljs.core.next.call(null, seq17109);
  return schema.utils.format_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__17110, seq17109__$1);
};
schema.utils.max_value_length = cljs.core.atom.call(null, 19);
schema.utils.value_name = function schema$utils$value_name(value) {
  var t = schema.utils.type_of.call(null, value);
  if (cljs.core.count.call(null, [cljs.core.str(value)].join("")) <= cljs.core.deref.call(null, schema.utils.max_value_length)) {
    return value;
  } else {
    return cljs.core.symbol.call(null, [cljs.core.str("a-"), cljs.core.str(t)].join(""));
  }
};
schema.utils.unmunge = function schema$utils$unmunge(s) {
  return cljs.core.reduce.call(null, function(s__$1, p__17117) {
    var vec__17118 = p__17117;
    var to = cljs.core.nth.call(null, vec__17118, 0, null);
    var from = cljs.core.nth.call(null, vec__17118, 1, null);
    return clojure.string.replace.call(null, s__$1, from, [cljs.core.str(to)].join(""));
  }, s, cljs.core.sort_by.call(null, function(p1__17114_SHARP_) {
    return -cljs.core.count.call(null, cljs.core.second.call(null, p1__17114_SHARP_));
  }, cljs.core.PersistentHashMap.fromArrays(["@", "!", '"', "#", "%", "\x26", "'", "*", "+", "-", "/", ":", "[", "{", "\x3c", "\\", "|", "\x3d", "]", "}", "\x3e", "^", "~", "?"], ["_CIRCA_", "_BANG_", "_DOUBLEQUOTE_", "_SHARP_", "_PERCENT_", "_AMPERSAND_", "_SINGLEQUOTE_", "_STAR_", "_PLUS_", "_", "_SLASH_", "_COLON_", "_LBRACK_", "_LBRACE_", "_LT_", "_BSLASH_", "_BAR_", "_EQ_", "_RBRACK_", "_RBRACE_", "_GT_", "_CARET_", "_TILDE_", "_QMARK_"])));
};
schema.utils.fn_name = function schema$utils$fn_name(f) {
  return schema.utils.unmunge.call(null, function() {
    var or__6210__auto__ = cljs.core.not_empty.call(null, cljs.core.second.call(null, cljs.core.re_find.call(null, /function ([^\(]*)\(/, [cljs.core.str(f)].join(""))));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return "function";
    }
  }());
};
schema.utils.record_QMARK_ = function schema$utils$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, x);
  }
};
schema.utils.ValidationError = function(schema, value, expectation_delay, fail_explanation) {
  this.schema = schema;
  this.value = value;
  this.expectation_delay = expectation_delay;
  this.fail_explanation = fail_explanation;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
schema.utils.ValidationError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.validation_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.ValidationError.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "expectation-delay", "expectation-delay", -1886214669, null), new cljs.core.Symbol(null, "fail-explanation", "fail-explanation", 530278923, null)], null);
};
schema.utils.ValidationError.cljs$lang$type = true;
schema.utils.ValidationError.cljs$lang$ctorStr = "schema.utils/ValidationError";
schema.utils.ValidationError.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "schema.utils/ValidationError");
};
schema.utils.__GT_ValidationError = function schema$utils$__GT_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.validation_error_explain = function schema$utils$validation_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, err.expectation_delay)), function() {
    var or__6210__auto__ = err.fail_explanation;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
    }
  }());
};
schema.utils.make_ValidationError = function schema$utils$make_ValidationError(schema__$1, value, expectation_delay, fail_explanation) {
  return new schema.utils.ValidationError(schema__$1, value, expectation_delay, fail_explanation);
};
schema.utils.NamedError = function(name, error) {
  this.name = name;
  this.error = error;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
schema.utils.NamedError.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._pr_writer.call(null, schema.utils.named_error_explain.call(null, this$__$1), writer, opts);
};
schema.utils.NamedError.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "error", "error", 661562495, null)], null);
};
schema.utils.NamedError.cljs$lang$type = true;
schema.utils.NamedError.cljs$lang$ctorStr = "schema.utils/NamedError";
schema.utils.NamedError.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "schema.utils/NamedError");
};
schema.utils.__GT_NamedError = function schema$utils$__GT_NamedError(name, error) {
  return new schema.utils.NamedError(name, error);
};
schema.utils.named_error_explain = function schema$utils$named_error_explain(err) {
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, err.name), err.error), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.utils.ErrorContainer = function(error, __meta, __extmap, __hash) {
  this.error = error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.utils.ErrorContainer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k17122, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__17124 = k17122 instanceof cljs.core.Keyword ? k17122.fqn : null;
  switch(G__17124) {
    case "error":
      return self__.error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17122, else__6835__auto__);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.utils.ErrorContainer{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IIterable$ = true;
schema.utils.ErrorContainer.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17121) {
  var self__ = this;
  var G__17121__$1 = this;
  return new cljs.core.RecordIter(0, G__17121__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.utils.ErrorContainer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.utils.ErrorContainer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__17121) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__17125 = cljs.core.keyword_identical_QMARK_;
  var expr__17126 = k__6840__auto__;
  if (cljs.core.truth_(pred__17125.call(null, new cljs.core.Keyword(null, "error", "error", -978969032), expr__17126))) {
    return new schema.utils.ErrorContainer(G__17121, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.utils.ErrorContainer(self__.error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__17121), null);
  }
};
schema.utils.ErrorContainer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), self__.error], null)], null), self__.__extmap));
};
schema.utils.ErrorContainer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__17121) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.utils.ErrorContainer(self__.error, G__17121, self__.__extmap, self__.__hash);
};
schema.utils.ErrorContainer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.utils.ErrorContainer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "error", "error", 661562495, null)], null);
};
schema.utils.ErrorContainer.cljs$lang$type = true;
schema.utils.ErrorContainer.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.utils/ErrorContainer");
};
schema.utils.ErrorContainer.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.utils/ErrorContainer");
};
schema.utils.__GT_ErrorContainer = function schema$utils$__GT_ErrorContainer(error) {
  return new schema.utils.ErrorContainer(error, null, null, null);
};
schema.utils.map__GT_ErrorContainer = function schema$utils$map__GT_ErrorContainer(G__17123) {
  return new schema.utils.ErrorContainer((new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(G__17123), null, cljs.core.dissoc.call(null, G__17123, new cljs.core.Keyword(null, "error", "error", -978969032)), null);
};
schema.utils.error = function schema$utils$error(x) {
  if (cljs.core.truth_(x)) {
  } else {
    throw new Error("Assert failed: x");
  }
  return schema.utils.__GT_ErrorContainer.call(null, x);
};
schema.utils.error_QMARK_ = function schema$utils$error_QMARK_(x) {
  return x instanceof schema.utils.ErrorContainer;
};
schema.utils.error_val = function schema$utils$error_val(x) {
  if (cljs.core.truth_(schema.utils.error_QMARK_.call(null, x))) {
    return x.error;
  } else {
    return null;
  }
};
schema.utils.declare_class_schema_BANG_ = function schema$utils$declare_class_schema_BANG_(klass, schema__$1) {
  return klass["schema$utils$schema"] = schema__$1;
};
schema.utils.class_schema = function schema$utils$class_schema(klass) {
  return klass["schema$utils$schema"];
};
schema.utils.PSimpleCell = function() {
};
schema.utils.get_cell = function schema$utils$get_cell(this$) {
  if (!(this$ == null) && !(this$.schema$utils$PSimpleCell$get_cell$arity$1 == null)) {
    return this$.schema$utils$PSimpleCell$get_cell$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = schema.utils.get_cell[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = schema.utils.get_cell["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSimpleCell.get_cell", this$);
      }
    }
  }
};
schema.utils.set_cell = function schema$utils$set_cell(this$, x) {
  if (!(this$ == null) && !(this$.schema$utils$PSimpleCell$set_cell$arity$2 == null)) {
    return this$.schema$utils$PSimpleCell$set_cell$arity$2(this$, x);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = schema.utils.set_cell[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$, x);
    } else {
      var m__6874__auto____$1 = schema.utils.set_cell["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSimpleCell.set_cell", this$);
      }
    }
  }
};
schema.utils.SimpleVCell = function(q) {
  this.q = q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$ = true;
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$get_cell$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q;
};
schema.utils.SimpleVCell.prototype.schema$utils$PSimpleCell$set_cell$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return self__.q = x;
};
schema.utils.SimpleVCell.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "q", "q", -1965434072, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411), true], null))], null);
};
schema.utils.SimpleVCell.cljs$lang$type = true;
schema.utils.SimpleVCell.cljs$lang$ctorStr = "schema.utils/SimpleVCell";
schema.utils.SimpleVCell.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "schema.utils/SimpleVCell");
};
schema.utils.__GT_SimpleVCell = function schema$utils$__GT_SimpleVCell(q) {
  return new schema.utils.SimpleVCell(q);
};
schema.utils.use_fn_validation = new schema.utils.SimpleVCell(false);
schema.utils.use_fn_validation.get_cell = cljs.core.partial.call(null, schema.utils.get_cell, schema.utils.use_fn_validation);
schema.utils.use_fn_validation.set_cell = cljs.core.partial.call(null, schema.utils.set_cell, schema.utils.use_fn_validation);
goog.provide("schema.spec.core");
goog.require("cljs.core");
goog.require("schema.utils");
schema.spec.core.CoreSpec = function() {
};
schema.spec.core.subschemas = function schema$spec$core$subschemas(this$) {
  if (!(this$ == null) && !(this$.schema$spec$core$CoreSpec$subschemas$arity$1 == null)) {
    return this$.schema$spec$core$CoreSpec$subschemas$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = schema.spec.core.subschemas[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = schema.spec.core.subschemas["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "CoreSpec.subschemas", this$);
      }
    }
  }
};
schema.spec.core.checker = function schema$spec$core$checker(this$, params) {
  if (!(this$ == null) && !(this$.schema$spec$core$CoreSpec$checker$arity$2 == null)) {
    return this$.schema$spec$core$CoreSpec$checker$arity$2(this$, params);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = schema.spec.core.checker[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$, params);
    } else {
      var m__6874__auto____$1 = schema.spec.core.checker["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$, params);
      } else {
        throw cljs.core.missing_protocol.call(null, "CoreSpec.checker", this$);
      }
    }
  }
};
schema.spec.core._PLUS_no_precondition_PLUS_ = function schema$spec$core$_PLUS_no_precondition_PLUS_(_) {
  return null;
};
schema.spec.core.precondition = function schema$spec$core$precondition(s, p, err_f) {
  return function(x) {
    var temp__4657__auto__ = function() {
      try {
        if (cljs.core.truth_(p.call(null, x))) {
          return null;
        } else {
          return new cljs.core.Symbol(null, "not", "not", 1044554643, null);
        }
      } catch (e17288) {
        if (e17288 instanceof Object) {
          var e_SHARP_ = e17288;
          return new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null);
        } else {
          throw e17288;
        }
      }
    }();
    if (cljs.core.truth_(temp__4657__auto__)) {
      var reason = temp__4657__auto__;
      return schema.utils.error.call(null, schema.utils.make_ValidationError.call(null, s, x, new cljs.core.Delay(function(reason, temp__4657__auto__) {
        return function() {
          return err_f.call(null, schema.utils.value_name.call(null, x));
        };
      }(reason, temp__4657__auto__), null), reason));
    } else {
      return null;
    }
  };
};
schema.spec.core.run_checker = function schema$spec$core$run_checker(f, return_walked_QMARK_, s) {
  return f.call(null, s, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "subschema-checker", "subschema-checker", 1137701360), f, new cljs.core.Keyword(null, "return-walked?", "return-walked?", -1684646015), return_walked_QMARK_, new cljs.core.Keyword(null, "cache", "cache", -1237023054), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null));
};
schema.spec.core.with_cache = function schema$spec$core$with_cache(cache, cache_key, wrap_recursive_delay, result_fn) {
  var temp__4655__auto__ = cljs.core.deref.call(null, cache).call(null, cache_key);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var w = temp__4655__auto__;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword("schema.spec.core", "in-progress", "schema.spec.core/in-progress", -1604867615), w)) {
      return wrap_recursive_delay.call(null, new cljs.core.Delay(function(w, temp__4655__auto__) {
        return function() {
          return cljs.core.deref.call(null, cache).call(null, cache_key);
        };
      }(w, temp__4655__auto__), null));
    } else {
      return w;
    }
  } else {
    cljs.core.swap_BANG_.call(null, cache, cljs.core.assoc, cache_key, new cljs.core.Keyword("schema.spec.core", "in-progress", "schema.spec.core/in-progress", -1604867615));
    var res = result_fn.call(null);
    cljs.core.swap_BANG_.call(null, cache, cljs.core.assoc, cache_key, res);
    return res;
  }
};
schema.spec.core.sub_checker = function schema$spec$core$sub_checker(p__17289, p__17290) {
  var map__17295 = p__17289;
  var map__17295__$1 = (!(map__17295 == null) ? map__17295.cljs$lang$protocol_mask$partition0$ & 64 || map__17295.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17295) : map__17295;
  var schema__$1 = cljs.core.get.call(null, map__17295__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
  var error_wrap = cljs.core.get.call(null, map__17295__$1, new cljs.core.Keyword(null, "error-wrap", "error-wrap", -1295833514));
  var map__17296 = p__17290;
  var map__17296__$1 = (!(map__17296 == null) ? map__17296.cljs$lang$protocol_mask$partition0$ & 64 || map__17296.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17296) : map__17296;
  var params = map__17296__$1;
  var subschema_checker = cljs.core.get.call(null, map__17296__$1, new cljs.core.Keyword(null, "subschema-checker", "subschema-checker", 1137701360));
  var cache = cljs.core.get.call(null, map__17296__$1, new cljs.core.Keyword(null, "cache", "cache", -1237023054));
  return schema.spec.core.with_cache.call(null, cache, schema__$1, function(map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache) {
    return function(d) {
      return function(map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache) {
        return function(x) {
          return cljs.core.deref.call(null, d).call(null, x);
        };
      }(map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache);
    };
  }(map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache), function(map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache) {
    return function() {
      var sub = subschema_checker.call(null, schema__$1, params);
      if (cljs.core.truth_(error_wrap)) {
        return function(sub, map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache) {
          return function(x) {
            var res = sub.call(null, x);
            var temp__4655__auto__ = schema.utils.error_val.call(null, res);
            if (cljs.core.truth_(temp__4655__auto__)) {
              var e = temp__4655__auto__;
              return schema.utils.error.call(null, error_wrap.call(null, res));
            } else {
              return res;
            }
          };
        }(sub, map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache);
      } else {
        return sub;
      }
    };
  }(map__17295, map__17295__$1, schema__$1, error_wrap, map__17296, map__17296__$1, params, subschema_checker, cache));
};
goog.provide("schema.spec.collection");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.spec.core");
schema.spec.collection.element_transformer = function schema$spec$collection$element_transformer(e, params, then) {
  var parser = (new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(e);
  var c = schema.spec.core.sub_checker.call(null, e, params);
  return function(parser, c) {
    return function(res, x) {
      return then.call(null, res, parser.call(null, function(parser, c) {
        return function(t) {
          return cljs.core.swap_BANG_.call(null, res, cljs.core.conj, cljs.core.truth_(schema.utils.error_QMARK_.call(null, t)) ? t : c.call(null, t));
        };
      }(parser, c), x));
    };
  }(parser, c);
};
schema.spec.collection.has_error_QMARK_ = function schema$spec$collection$has_error_QMARK_(l) {
  return cljs.core.some.call(null, schema.utils.error_QMARK_, l);
};
schema.spec.collection.CollectionSpec = function(pre, constructor$, elements, on_error, __meta, __extmap, __hash) {
  this.pre = pre;
  this.constructor$ = constructor$;
  this.elements = elements;
  this.on_error = on_error;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k17302, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__17304 = k17302 instanceof cljs.core.Keyword ? k17302.fqn : null;
  switch(G__17304) {
    case "pre":
      return self__.pre;
      break;
    case "constructor":
      return self__.constructor$;
      break;
    case "elements":
      return self__.elements;
      break;
    case "on-error":
      return self__.on_error;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17302, else__6835__auto__);
  }
};
schema.spec.collection.CollectionSpec.prototype.schema$spec$core$CoreSpec$ = true;
schema.spec.collection.CollectionSpec.prototype.schema$spec$core$CoreSpec$subschemas$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.map.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.elements);
};
schema.spec.collection.CollectionSpec.prototype.schema$spec$core$CoreSpec$checker$arity$2 = function(this$, params) {
  var self__ = this;
  var this$__$1 = this;
  var constructor$__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "return-walked?", "return-walked?", -1684646015)).cljs$core$IFn$_invoke$arity$1(params)) ? self__.constructor$ : function(this$__$1) {
    return function(_) {
      return null;
    };
  }(this$__$1);
  var t = cljs.core.reduce.call(null, function(constructor$__$1, this$__$1) {
    return function(f, e) {
      return schema.spec.collection.element_transformer.call(null, e, params, f);
    };
  }(constructor$__$1, this$__$1), function(constructor$__$1, this$__$1) {
    return function(_, x) {
      return x;
    };
  }(constructor$__$1, this$__$1), cljs.core.reverse.call(null, self__.elements));
  return function(constructor$__$1, t, this$__$1) {
    return function(x) {
      var or__6210__auto__ = self__.pre.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        var res = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
        var remaining = t.call(null, res, x);
        var res__$1 = cljs.core.deref.call(null, res);
        if (cljs.core.truth_(function() {
          var or__6210__auto____$1 = cljs.core.seq.call(null, remaining);
          if (or__6210__auto____$1) {
            return or__6210__auto____$1;
          } else {
            return schema.spec.collection.has_error_QMARK_.call(null, res__$1);
          }
        }())) {
          return schema.utils.error.call(null, self__.on_error.call(null, x, res__$1, remaining));
        } else {
          return constructor$__$1.call(null, res__$1);
        }
      }
    };
  }(constructor$__$1, t, this$__$1);
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.spec.collection.CollectionSpec{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), self__.pre], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "constructor", "constructor", -1953928811), self__.constructor$], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), self__.elements], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "on-error", "on-error", 1728533530), self__.on_error], null)], null), self__.__extmap));
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IIterable$ = true;
schema.spec.collection.CollectionSpec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17301) {
  var self__ = this;
  var G__17301__$1 = this;
  return new cljs.core.RecordIter(0, G__17301__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), new cljs.core.Keyword(null, "constructor", "constructor", -1953928811), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Keyword(null, "on-error", "on-error", 1728533530)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.spec.collection.CollectionSpec(self__.pre, self__.constructor$, self__.elements, self__.on_error, self__.__meta, self__.__extmap, self__.__hash);
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), null, new cljs.core.Keyword(null, "elements", "elements", 657646735), null, new cljs.core.Keyword(null, "constructor", "constructor", -1953928811), null, new cljs.core.Keyword(null, "on-error", "on-error", 1728533530), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.spec.collection.CollectionSpec(self__.pre, self__.constructor$, self__.elements, self__.on_error, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__17301) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__17305 = cljs.core.keyword_identical_QMARK_;
  var expr__17306 = k__6840__auto__;
  if (cljs.core.truth_(pred__17305.call(null, new cljs.core.Keyword(null, "pre", "pre", 2118456869), expr__17306))) {
    return new schema.spec.collection.CollectionSpec(G__17301, self__.constructor$, self__.elements, self__.on_error, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17305.call(null, new cljs.core.Keyword(null, "constructor", "constructor", -1953928811), expr__17306))) {
      return new schema.spec.collection.CollectionSpec(self__.pre, G__17301, self__.elements, self__.on_error, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17305.call(null, new cljs.core.Keyword(null, "elements", "elements", 657646735), expr__17306))) {
        return new schema.spec.collection.CollectionSpec(self__.pre, self__.constructor$, G__17301, self__.on_error, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__17305.call(null, new cljs.core.Keyword(null, "on-error", "on-error", 1728533530), expr__17306))) {
          return new schema.spec.collection.CollectionSpec(self__.pre, self__.constructor$, self__.elements, G__17301, self__.__meta, self__.__extmap, null);
        } else {
          return new schema.spec.collection.CollectionSpec(self__.pre, self__.constructor$, self__.elements, self__.on_error, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__17301), null);
        }
      }
    }
  }
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), self__.pre], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constructor", "constructor", -1953928811), self__.constructor$], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "elements", "elements", 657646735), self__.elements], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "on-error", "on-error", 1728533530), self__.on_error], null)], null), self__.__extmap));
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__17301) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.spec.collection.CollectionSpec(self__.pre, self__.constructor$, self__.elements, self__.on_error, G__17301, self__.__extmap, self__.__hash);
};
schema.spec.collection.CollectionSpec.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.spec.collection.CollectionSpec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pre", "pre", -535978900, null), new cljs.core.Symbol(null, "constructor", "constructor", -313397284, null), new cljs.core.Symbol(null, "elements", "elements", -1996789034, null), new cljs.core.Symbol(null, "on-error", "on-error", -925902239, null)], null);
};
schema.spec.collection.CollectionSpec.cljs$lang$type = true;
schema.spec.collection.CollectionSpec.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.spec.collection/CollectionSpec");
};
schema.spec.collection.CollectionSpec.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.spec.collection/CollectionSpec");
};
schema.spec.collection.__GT_CollectionSpec = function schema$spec$collection$__GT_CollectionSpec(pre, constructor$, elements, on_error) {
  return new schema.spec.collection.CollectionSpec(pre, constructor$, elements, on_error, null, null, null);
};
schema.spec.collection.map__GT_CollectionSpec = function schema$spec$collection$map__GT_CollectionSpec(G__17303) {
  return new schema.spec.collection.CollectionSpec((new cljs.core.Keyword(null, "pre", "pre", 2118456869)).cljs$core$IFn$_invoke$arity$1(G__17303), (new cljs.core.Keyword(null, "constructor", "constructor", -1953928811)).cljs$core$IFn$_invoke$arity$1(G__17303), (new cljs.core.Keyword(null, "elements", "elements", 657646735)).cljs$core$IFn$_invoke$arity$1(G__17303), (new cljs.core.Keyword(null, "on-error", "on-error", 1728533530)).cljs$core$IFn$_invoke$arity$1(G__17303), null, cljs.core.dissoc.call(null, 
  G__17303, new cljs.core.Keyword(null, "pre", "pre", 2118456869), new cljs.core.Keyword(null, "constructor", "constructor", -1953928811), new cljs.core.Keyword(null, "elements", "elements", 657646735), new cljs.core.Keyword(null, "on-error", "on-error", 1728533530)), null);
};
schema.spec.collection.collection_spec = function schema$spec$collection$collection_spec(pre, constructor$, elements, on_error) {
  return schema.spec.collection.__GT_CollectionSpec.call(null, pre, constructor$, elements, on_error);
};
schema.spec.collection.all_elements = function schema$spec$collection$all_elements(schema__$1) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "cardinality", "cardinality", -104971109), new cljs.core.Keyword(null, "zero-or-more", "zero-or-more", -1629905900), new cljs.core.Keyword(null, "parser", "parser", -1543495310), function(item_fn, coll) {
    var seq__17313_17317 = cljs.core.seq.call(null, coll);
    var chunk__17314_17318 = null;
    var count__17315_17319 = 0;
    var i__17316_17320 = 0;
    while (true) {
      if (i__17316_17320 < count__17315_17319) {
        var x_17321 = cljs.core._nth.call(null, chunk__17314_17318, i__17316_17320);
        item_fn.call(null, x_17321);
        var G__17322 = seq__17313_17317;
        var G__17323 = chunk__17314_17318;
        var G__17324 = count__17315_17319;
        var G__17325 = i__17316_17320 + 1;
        seq__17313_17317 = G__17322;
        chunk__17314_17318 = G__17323;
        count__17315_17319 = G__17324;
        i__17316_17320 = G__17325;
        continue;
      } else {
        var temp__4657__auto___17326 = cljs.core.seq.call(null, seq__17313_17317);
        if (temp__4657__auto___17326) {
          var seq__17313_17327__$1 = temp__4657__auto___17326;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17313_17327__$1)) {
            var c__7021__auto___17328 = cljs.core.chunk_first.call(null, seq__17313_17327__$1);
            var G__17329 = cljs.core.chunk_rest.call(null, seq__17313_17327__$1);
            var G__17330 = c__7021__auto___17328;
            var G__17331 = cljs.core.count.call(null, c__7021__auto___17328);
            var G__17332 = 0;
            seq__17313_17317 = G__17329;
            chunk__17314_17318 = G__17330;
            count__17315_17319 = G__17331;
            i__17316_17320 = G__17332;
            continue;
          } else {
            var x_17333 = cljs.core.first.call(null, seq__17313_17327__$1);
            item_fn.call(null, x_17333);
            var G__17334 = cljs.core.next.call(null, seq__17313_17327__$1);
            var G__17335 = null;
            var G__17336 = 0;
            var G__17337 = 0;
            seq__17313_17317 = G__17334;
            chunk__17314_17318 = G__17335;
            count__17315_17319 = G__17336;
            i__17316_17320 = G__17337;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return null;
  }], null);
};
schema.spec.collection.one_element = function schema$spec$collection$one_element(required_QMARK_, schema__$1, parser) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "cardinality", "cardinality", -104971109), cljs.core.truth_(required_QMARK_) ? new cljs.core.Keyword(null, "exactly-one", "exactly-one", -294043587) : new cljs.core.Keyword(null, "at-most-one", "at-most-one", -1612772829), new cljs.core.Keyword(null, "parser", "parser", -1543495310), parser], null);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("schema.spec.variant");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("schema.spec.core");
schema.spec.variant.option_step = function schema$spec$variant$option_step(o, params, else$) {
  var g = (new cljs.core.Keyword(null, "guard", "guard", -873147811)).cljs$core$IFn$_invoke$arity$1(o);
  var c = schema.spec.core.sub_checker.call(null, o, params);
  var step = cljs.core.truth_(g) ? function(g, c) {
    return function(x) {
      var guard_result = function() {
        try {
          return g.call(null, x);
        } catch (e17341) {
          if (e17341 instanceof Object) {
            var e_SHARP_ = e17341;
            return new cljs.core.Keyword("schema.spec.variant", "exception", "schema.spec.variant/exception", -253680523);
          } else {
            throw e17341;
          }
        }
      }();
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword("schema.spec.variant", "exception", "schema.spec.variant/exception", -253680523), guard_result)) {
        return schema.utils.error.call(null, schema.utils.make_ValidationError.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(o), x, new cljs.core.Delay(function(guard_result, g, c) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.utils.value_name.call(null, x)), cljs.core.symbol.call(null, schema.utils.fn_name.call(null, g)));
          };
        }(guard_result, g, c), null), new cljs.core.Symbol(null, "throws?", "throws?", 789734533, null)));
      } else {
        if (cljs.core.truth_(guard_result)) {
          return c.call(null, x);
        } else {
          return else$.call(null, x);
        }
      }
    };
  }(g, c) : c;
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "wrap-error", "wrap-error", 536732809)).cljs$core$IFn$_invoke$arity$1(o);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var wrap_error = temp__4655__auto__;
    return function(wrap_error, temp__4655__auto__, g, c, step) {
      return function(x) {
        var res = step.call(null, x);
        var temp__4655__auto____$1 = schema.utils.error_val.call(null, res);
        if (cljs.core.truth_(temp__4655__auto____$1)) {
          var e = temp__4655__auto____$1;
          return schema.utils.error.call(null, wrap_error.call(null, e));
        } else {
          return res;
        }
      };
    }(wrap_error, temp__4655__auto__, g, c, step);
  } else {
    return step;
  }
};
schema.spec.variant.VariantSpec = function(pre, options, err_f, __meta, __extmap, __hash) {
  this.pre = pre;
  this.options = options;
  this.err_f = err_f;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.spec.variant.VariantSpec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.spec.variant.VariantSpec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k17343, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__17345 = k17343 instanceof cljs.core.Keyword ? k17343.fqn : null;
  switch(G__17345) {
    case "pre":
      return self__.pre;
      break;
    case "options":
      return self__.options;
      break;
    case "err-f":
      return self__.err_f;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17343, else__6835__auto__);
  }
};
schema.spec.variant.VariantSpec.prototype.schema$spec$core$CoreSpec$ = true;
schema.spec.variant.VariantSpec.prototype.schema$spec$core$CoreSpec$subschemas$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.map.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.options);
};
schema.spec.variant.VariantSpec.prototype.schema$spec$core$CoreSpec$checker$arity$2 = function(this$, params) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.reduce.call(null, function(this$__$1) {
    return function(f, o) {
      return schema.spec.variant.option_step.call(null, o, params, f);
    };
  }(this$__$1), function(this$__$1) {
    return function(x) {
      return schema.utils.error.call(null, schema.utils.make_ValidationError.call(null, this$__$1, x, new cljs.core.Delay(function(this$__$1) {
        return function() {
          return self__.err_f.call(null, schema.utils.value_name.call(null, x));
        };
      }(this$__$1), null), null));
    };
  }(this$__$1), cljs.core.reverse.call(null, self__.options));
  return function(t, this$__$1) {
    return function(x) {
      var or__6210__auto__ = self__.pre.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return t.call(null, x);
      }
    };
  }(t, this$__$1);
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.spec.variant.VariantSpec{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), self__.pre], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "options", "options", 99638489), self__.options], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "err-f", "err-f", 651620941), self__.err_f], null)], null), self__.__extmap));
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IIterable$ = true;
schema.spec.variant.VariantSpec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17342) {
  var self__ = this;
  var G__17342__$1 = this;
  return new cljs.core.RecordIter(0, G__17342__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), new cljs.core.Keyword(null, "options", "options", 99638489), new cljs.core.Keyword(null, "err-f", "err-f", 651620941)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.spec.variant.VariantSpec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.spec.variant.VariantSpec(self__.pre, self__.options, self__.err_f, self__.__meta, self__.__extmap, self__.__hash);
};
schema.spec.variant.VariantSpec.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), null, new cljs.core.Keyword(null, "err-f", "err-f", 651620941), null, new cljs.core.Keyword(null, "options", "options", 99638489), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.spec.variant.VariantSpec(self__.pre, self__.options, self__.err_f, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__17342) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__17346 = cljs.core.keyword_identical_QMARK_;
  var expr__17347 = k__6840__auto__;
  if (cljs.core.truth_(pred__17346.call(null, new cljs.core.Keyword(null, "pre", "pre", 2118456869), expr__17347))) {
    return new schema.spec.variant.VariantSpec(G__17342, self__.options, self__.err_f, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__17346.call(null, new cljs.core.Keyword(null, "options", "options", 99638489), expr__17347))) {
      return new schema.spec.variant.VariantSpec(self__.pre, G__17342, self__.err_f, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__17346.call(null, new cljs.core.Keyword(null, "err-f", "err-f", 651620941), expr__17347))) {
        return new schema.spec.variant.VariantSpec(self__.pre, self__.options, G__17342, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.spec.variant.VariantSpec(self__.pre, self__.options, self__.err_f, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__17342), null);
      }
    }
  }
};
schema.spec.variant.VariantSpec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), self__.pre], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "options", "options", 99638489), self__.options], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "err-f", "err-f", 651620941), self__.err_f], null)], null), self__.__extmap));
};
schema.spec.variant.VariantSpec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__17342) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.spec.variant.VariantSpec(self__.pre, self__.options, self__.err_f, G__17342, self__.__extmap, self__.__hash);
};
schema.spec.variant.VariantSpec.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.spec.variant.VariantSpec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pre", "pre", -535978900, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "err-f", "err-f", -2002814828, null)], null);
};
schema.spec.variant.VariantSpec.cljs$lang$type = true;
schema.spec.variant.VariantSpec.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.spec.variant/VariantSpec");
};
schema.spec.variant.VariantSpec.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.spec.variant/VariantSpec");
};
schema.spec.variant.__GT_VariantSpec = function schema$spec$variant$__GT_VariantSpec(pre, options, err_f) {
  return new schema.spec.variant.VariantSpec(pre, options, err_f, null, null, null);
};
schema.spec.variant.map__GT_VariantSpec = function schema$spec$variant$map__GT_VariantSpec(G__17344) {
  return new schema.spec.variant.VariantSpec((new cljs.core.Keyword(null, "pre", "pre", 2118456869)).cljs$core$IFn$_invoke$arity$1(G__17344), (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(G__17344), (new cljs.core.Keyword(null, "err-f", "err-f", 651620941)).cljs$core$IFn$_invoke$arity$1(G__17344), null, cljs.core.dissoc.call(null, G__17344, new cljs.core.Keyword(null, "pre", "pre", 2118456869), new cljs.core.Keyword(null, "options", "options", 99638489), 
  new cljs.core.Keyword(null, "err-f", "err-f", 651620941)), null);
};
schema.spec.variant.variant_spec = function schema$spec$variant$variant_spec(var_args) {
  var args17350 = [];
  var len__7279__auto___17353 = arguments.length;
  var i__7280__auto___17354 = 0;
  while (true) {
    if (i__7280__auto___17354 < len__7279__auto___17353) {
      args17350.push(arguments[i__7280__auto___17354]);
      var G__17355 = i__7280__auto___17354 + 1;
      i__7280__auto___17354 = G__17355;
      continue;
    } else {
    }
    break;
  }
  var G__17352 = args17350.length;
  switch(G__17352) {
    case 2:
      return schema.spec.variant.variant_spec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return schema.spec.variant.variant_spec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args17350.length)].join(""));;
  }
};
schema.spec.variant.variant_spec.cljs$core$IFn$_invoke$arity$2 = function(pre, options) {
  return schema.spec.variant.variant_spec.call(null, pre, options, null);
};
schema.spec.variant.variant_spec.cljs$core$IFn$_invoke$arity$3 = function(pre, options, err_f) {
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = err_f;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return (new cljs.core.Keyword(null, "guard", "guard", -873147811)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, options)) == null;
    }
  }())) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "when last option has a guard, err-f must be provided"));
  }
  return schema.spec.variant.__GT_VariantSpec.call(null, pre, options, err_f);
};
schema.spec.variant.variant_spec.cljs$lang$maxFixedArity = 3;
goog.provide("schema.spec.leaf");
goog.require("cljs.core");
goog.require("schema.spec.core");
schema.spec.leaf.LeafSpec = function(pre, __meta, __extmap, __hash) {
  this.pre = pre;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k17360, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__17362 = k17360 instanceof cljs.core.Keyword ? k17360.fqn : null;
  switch(G__17362) {
    case "pre":
      return self__.pre;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k17360, else__6835__auto__);
  }
};
schema.spec.leaf.LeafSpec.prototype.schema$spec$core$CoreSpec$ = true;
schema.spec.leaf.LeafSpec.prototype.schema$spec$core$CoreSpec$subschemas$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
schema.spec.leaf.LeafSpec.prototype.schema$spec$core$CoreSpec$checker$arity$2 = function(this$, params) {
  var self__ = this;
  var this$__$1 = this;
  return function(this$__$1) {
    return function(x) {
      var or__6210__auto__ = self__.pre.call(null, x);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return x;
      }
    };
  }(this$__$1);
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.spec.leaf.LeafSpec{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), self__.pre], null)], null), self__.__extmap));
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IIterable$ = true;
schema.spec.leaf.LeafSpec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__17359) {
  var self__ = this;
  var G__17359__$1 = this;
  return new cljs.core.RecordIter(0, G__17359__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.spec.leaf.LeafSpec(self__.pre, self__.__meta, self__.__extmap, self__.__hash);
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.spec.leaf.LeafSpec(self__.pre, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__17359) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__17363 = cljs.core.keyword_identical_QMARK_;
  var expr__17364 = k__6840__auto__;
  if (cljs.core.truth_(pred__17363.call(null, new cljs.core.Keyword(null, "pre", "pre", 2118456869), expr__17364))) {
    return new schema.spec.leaf.LeafSpec(G__17359, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.spec.leaf.LeafSpec(self__.pre, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__17359), null);
  }
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), self__.pre], null)], null), self__.__extmap));
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__17359) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.spec.leaf.LeafSpec(self__.pre, G__17359, self__.__extmap, self__.__hash);
};
schema.spec.leaf.LeafSpec.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.spec.leaf.LeafSpec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pre", "pre", -535978900, null)], null);
};
schema.spec.leaf.LeafSpec.cljs$lang$type = true;
schema.spec.leaf.LeafSpec.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.spec.leaf/LeafSpec");
};
schema.spec.leaf.LeafSpec.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.spec.leaf/LeafSpec");
};
schema.spec.leaf.__GT_LeafSpec = function schema$spec$leaf$__GT_LeafSpec(pre) {
  return new schema.spec.leaf.LeafSpec(pre, null, null, null);
};
schema.spec.leaf.map__GT_LeafSpec = function schema$spec$leaf$map__GT_LeafSpec(G__17361) {
  return new schema.spec.leaf.LeafSpec((new cljs.core.Keyword(null, "pre", "pre", 2118456869)).cljs$core$IFn$_invoke$arity$1(G__17361), null, cljs.core.dissoc.call(null, G__17361, new cljs.core.Keyword(null, "pre", "pre", 2118456869)), null);
};
schema.spec.leaf.leaf_spec = function schema$spec$leaf$leaf_spec(pre) {
  return schema.spec.leaf.__GT_LeafSpec.call(null, pre);
};
goog.provide("schema.core");
goog.require("cljs.core");
goog.require("schema.spec.collection");
goog.require("schema.spec.core");
goog.require("schema.spec.variant");
goog.require("schema.spec.leaf");
goog.require("clojure.string");
goog.require("schema.utils");
schema.core.Schema = function() {
};
schema.core.spec = function schema$core$spec(this$) {
  if (!(this$ == null) && !(this$.schema$core$Schema$spec$arity$1 == null)) {
    return this$.schema$core$Schema$spec$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = schema.core.spec[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = schema.core.spec["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.spec", this$);
      }
    }
  }
};
schema.core.explain = function schema$core$explain(this$) {
  if (!(this$ == null) && !(this$.schema$core$Schema$explain$arity$1 == null)) {
    return this$.schema$core$Schema$explain$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = schema.core.explain[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = schema.core.explain["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.explain", this$);
      }
    }
  }
};
schema.core.checker = function schema$core$checker(schema__$1) {
  return cljs.core.comp.call(null, schema.utils.error_val, schema.spec.core.run_checker.call(null, function(s, params) {
    return schema.spec.core.checker.call(null, schema.core.spec.call(null, s), params);
  }, false, schema__$1));
};
schema.core.check = function schema$core$check(schema__$1, x) {
  return schema.core.checker.call(null, schema__$1).call(null, x);
};
schema.core.validator = function schema$core$validator(schema__$1) {
  var c = schema.core.checker.call(null, schema__$1);
  return function(c) {
    return function(value) {
      var temp__4657__auto___18709 = c.call(null, value);
      if (cljs.core.truth_(temp__4657__auto___18709)) {
        var error_18710 = temp__4657__auto___18709;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Value does not match schema: %s", cljs.core.pr_str.call(null, error_18710)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, 
        "error", "error", -978969032), error_18710], null));
      } else {
      }
      return value;
    };
  }(c);
};
schema.core.validate = function schema$core$validate(schema__$1, value) {
  return schema.core.validator.call(null, schema__$1).call(null, value);
};
schema.core.instance_precondition = function schema$core$instance_precondition(s, klass) {
  return schema.spec.core.precondition.call(null, s, function(p1__18711_SHARP_) {
    var and__6198__auto__ = !(p1__18711_SHARP_ == null);
    if (and__6198__auto__) {
      var or__6210__auto__ = klass === p1__18711_SHARP_.constructor;
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        return p1__18711_SHARP_ instanceof klass;
      }
    } else {
      return and__6198__auto__;
    }
  }, function(p1__18712_SHARP_) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18712_SHARP_), klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
  });
};
schema.core.Schema["function"] = true;
schema.core.spec["function"] = function(this$) {
  var pre = schema.core.instance_precondition.call(null, this$, this$);
  var temp__4655__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var class_schema = temp__4655__auto__;
    return schema.spec.variant.variant_spec.call(null, pre, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), class_schema], null)], null));
  } else {
    return schema.spec.leaf.leaf_spec.call(null, pre);
  }
};
schema.core.explain["function"] = function(this$) {
  var temp__4655__auto__ = schema.utils.class_schema.call(null, this$);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var more_schema = temp__4655__auto__;
    return schema.core.explain.call(null, more_schema);
  } else {
    var pred__18713 = cljs.core._EQ_;
    var expr__18714 = this$;
    if (cljs.core.truth_(pred__18713.call(null, null, expr__18714))) {
      return new cljs.core.Symbol(null, "Str", "Str", 907970895, null);
    } else {
      if (cljs.core.truth_(pred__18713.call(null, Boolean, expr__18714))) {
        return new cljs.core.Symbol(null, "Bool", "Bool", 195910502, null);
      } else {
        if (cljs.core.truth_(pred__18713.call(null, Number, expr__18714))) {
          return new cljs.core.Symbol(null, "Num", "Num", -2044934708, null);
        } else {
          if (cljs.core.truth_(pred__18713.call(null, null, expr__18714))) {
            return new cljs.core.Symbol(null, "Regex", "Regex", 205914413, null);
          } else {
            if (cljs.core.truth_(pred__18713.call(null, Date, expr__18714))) {
              return new cljs.core.Symbol(null, "Inst", "Inst", 292408622, null);
            } else {
              if (cljs.core.truth_(pred__18713.call(null, cljs.core.UUID, expr__18714))) {
                return new cljs.core.Symbol(null, "Uuid", "Uuid", -1866694318, null);
              } else {
                return this$;
              }
            }
          }
        }
      }
    }
  }
};
schema.core.AnythingSchema = function(_, __meta, __extmap, __hash) {
  this._ = _;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.AnythingSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18717, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18719 = k18717 instanceof cljs.core.Keyword ? k18717.fqn : null;
  switch(G__18719) {
    case "_":
      return self__._;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18717, else__6835__auto__);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.AnythingSchema{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IIterable$ = true;
schema.core.AnythingSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18716) {
  var self__ = this;
  var G__18716__$1 = this;
  return new cljs.core.RecordIter(0, G__18716__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.AnythingSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.AnythingSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "_", "_", 1453416199), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18716) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18720 = cljs.core.keyword_identical_QMARK_;
  var expr__18721 = k__6840__auto__;
  if (cljs.core.truth_(pred__18720.call(null, new cljs.core.Keyword(null, "_", "_", 1453416199), expr__18721))) {
    return new schema.core.AnythingSchema(G__18716, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.AnythingSchema(self__._, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18716), null);
  }
};
schema.core.AnythingSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "_", "_", 1453416199), self__._], null)], null), self__.__extmap));
};
schema.core.AnythingSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18716) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.AnythingSchema(self__._, G__18716, self__.__extmap, self__.__hash);
};
schema.core.AnythingSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.AnythingSchema.prototype.schema$core$Schema$ = true;
schema.core.AnythingSchema.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_);
};
schema.core.AnythingSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.Symbol(null, "Any", "Any", 1277492269, null);
};
schema.core.AnythingSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null)], null);
};
schema.core.AnythingSchema.cljs$lang$type = true;
schema.core.AnythingSchema.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/AnythingSchema");
};
schema.core.AnythingSchema.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/AnythingSchema");
};
schema.core.__GT_AnythingSchema = function schema$core$__GT_AnythingSchema(_) {
  return new schema.core.AnythingSchema(_, null, null, null);
};
schema.core.map__GT_AnythingSchema = function schema$core$map__GT_AnythingSchema(G__18718) {
  return new schema.core.AnythingSchema((new cljs.core.Keyword(null, "_", "_", 1453416199)).cljs$core$IFn$_invoke$arity$1(G__18718), null, cljs.core.dissoc.call(null, G__18718, new cljs.core.Keyword(null, "_", "_", 1453416199)), null);
};
schema.core.Any = new schema.core.AnythingSchema(null, null, null, null);
schema.core.EqSchema = function(v, __meta, __extmap, __hash) {
  this.v = v;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.EqSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18727, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18729 = k18727 instanceof cljs.core.Keyword ? k18727.fqn : null;
  switch(G__18729) {
    case "v":
      return self__.v;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18727, else__6835__auto__);
  }
};
schema.core.EqSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.EqSchema{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IIterable$ = true;
schema.core.EqSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18726) {
  var self__ = this;
  var G__18726__$1 = this;
  return new cljs.core.RecordIter(0, G__18726__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.EqSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EqSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.EqSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EqSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "v", "v", 21465059), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18726) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18730 = cljs.core.keyword_identical_QMARK_;
  var expr__18731 = k__6840__auto__;
  if (cljs.core.truth_(pred__18730.call(null, new cljs.core.Keyword(null, "v", "v", 21465059), expr__18731))) {
    return new schema.core.EqSchema(G__18726, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EqSchema(self__.v, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18726), null);
  }
};
schema.core.EqSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "v", "v", 21465059), self__.v], null)], null), self__.__extmap));
};
schema.core.EqSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18726) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.EqSchema(self__.v, G__18726, self__.__extmap, self__.__hash);
};
schema.core.EqSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.EqSchema.prototype.schema$core$Schema$ = true;
schema.core.EqSchema.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
    return function(p1__18724_SHARP_) {
      return cljs.core._EQ_.call(null, self__.v, p1__18724_SHARP_);
    };
  }(this$__$1), function(this$__$1) {
    return function(p1__18725_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18725_SHARP_), self__.v), new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null));
    };
  }(this$__$1)));
};
schema.core.EqSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.v), new cljs.core.Symbol(null, "eq", "eq", 1021992460, null));
};
schema.core.EqSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "v", "v", 1661996586, null)], null);
};
schema.core.EqSchema.cljs$lang$type = true;
schema.core.EqSchema.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EqSchema");
};
schema.core.EqSchema.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/EqSchema");
};
schema.core.__GT_EqSchema = function schema$core$__GT_EqSchema(v) {
  return new schema.core.EqSchema(v, null, null, null);
};
schema.core.map__GT_EqSchema = function schema$core$map__GT_EqSchema(G__18728) {
  return new schema.core.EqSchema((new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(G__18728), null, cljs.core.dissoc.call(null, G__18728, new cljs.core.Keyword(null, "v", "v", 21465059)), null);
};
schema.core.eq = function schema$core$eq(v) {
  return new schema.core.EqSchema(v, null, null, null);
};
schema.core.Isa = function(h, parent, __meta, __extmap, __hash) {
  this.h = h;
  this.parent = parent;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Isa.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Isa.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18737, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18739 = k18737 instanceof cljs.core.Keyword ? k18737.fqn : null;
  switch(G__18739) {
    case "h":
      return self__.h;
      break;
    case "parent":
      return self__.parent;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18737, else__6835__auto__);
  }
};
schema.core.Isa.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Isa{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), self__.h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "parent", "parent", -878878779), self__.parent], null)], null), self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IIterable$ = true;
schema.core.Isa.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18736) {
  var self__ = this;
  var G__18736__$1 = this;
  return new cljs.core.RecordIter(0, G__18736__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), new cljs.core.Keyword(null, "parent", "parent", -878878779)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Isa.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Isa(self__.h, self__.parent, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Isa.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Isa.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Isa.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Isa.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "h", "h", 1109658740), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Isa(self__.h, self__.parent, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Isa.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18736) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18740 = cljs.core.keyword_identical_QMARK_;
  var expr__18741 = k__6840__auto__;
  if (cljs.core.truth_(pred__18740.call(null, new cljs.core.Keyword(null, "h", "h", 1109658740), expr__18741))) {
    return new schema.core.Isa(G__18736, self__.parent, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18740.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__18741))) {
      return new schema.core.Isa(self__.h, G__18736, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Isa(self__.h, self__.parent, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18736), null);
    }
  }
};
schema.core.Isa.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h", "h", 1109658740), self__.h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null)], null), self__.__extmap));
};
schema.core.Isa.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18736) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Isa(self__.h, self__.parent, G__18736, self__.__extmap, self__.__hash);
};
schema.core.Isa.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Isa.prototype.schema$core$Schema$ = true;
schema.core.Isa.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
    return function(p1__18734_SHARP_) {
      return cljs.core.isa_QMARK_.call(null, self__.h, p1__18734_SHARP_, self__.parent);
    };
  }(this$__$1), function(this$__$1) {
    return function(p1__18735_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.parent), p1__18735_SHARP_), new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null));
    };
  }(this$__$1)));
};
schema.core.Isa.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.parent), new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null));
};
schema.core.Isa.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "h", "h", -1544777029, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)], null);
};
schema.core.Isa.cljs$lang$type = true;
schema.core.Isa.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Isa");
};
schema.core.Isa.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Isa");
};
schema.core.__GT_Isa = function schema$core$__GT_Isa(h, parent) {
  return new schema.core.Isa(h, parent, null, null, null);
};
schema.core.map__GT_Isa = function schema$core$map__GT_Isa(G__18738) {
  return new schema.core.Isa((new cljs.core.Keyword(null, "h", "h", 1109658740)).cljs$core$IFn$_invoke$arity$1(G__18738), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__18738), null, cljs.core.dissoc.call(null, G__18738, new cljs.core.Keyword(null, "h", "h", 1109658740), new cljs.core.Keyword(null, "parent", "parent", -878878779)), null);
};
schema.core.isa = function schema$core$isa(var_args) {
  var args18744 = [];
  var len__7279__auto___18747 = arguments.length;
  var i__7280__auto___18748 = 0;
  while (true) {
    if (i__7280__auto___18748 < len__7279__auto___18747) {
      args18744.push(arguments[i__7280__auto___18748]);
      var G__18749 = i__7280__auto___18748 + 1;
      i__7280__auto___18748 = G__18749;
      continue;
    } else {
    }
    break;
  }
  var G__18746 = args18744.length;
  switch(G__18746) {
    case 1:
      return schema.core.isa.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return schema.core.isa.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18744.length)].join(""));;
  }
};
schema.core.isa.cljs$core$IFn$_invoke$arity$1 = function(parent) {
  return new schema.core.Isa(null, parent, null, null, null);
};
schema.core.isa.cljs$core$IFn$_invoke$arity$2 = function(h, parent) {
  return new schema.core.Isa(h, parent, null, null, null);
};
schema.core.isa.cljs$lang$maxFixedArity = 2;
schema.core.EnumSchema = function(vs, __meta, __extmap, __hash) {
  this.vs = vs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.EnumSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18754, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18756 = k18754 instanceof cljs.core.Keyword ? k18754.fqn : null;
  switch(G__18756) {
    case "vs":
      return self__.vs;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18754, else__6835__auto__);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.EnumSchema{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IIterable$ = true;
schema.core.EnumSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18753) {
  var self__ = this;
  var G__18753__$1 = this;
  return new cljs.core.RecordIter(0, G__18753__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.EnumSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.EnumSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.EnumSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18753) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18757 = cljs.core.keyword_identical_QMARK_;
  var expr__18758 = k__6840__auto__;
  if (cljs.core.truth_(pred__18757.call(null, new cljs.core.Keyword(null, "vs", "vs", -2022097090), expr__18758))) {
    return new schema.core.EnumSchema(G__18753, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.EnumSchema(self__.vs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18753), null);
  }
};
schema.core.EnumSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vs", "vs", -2022097090), self__.vs], null)], null), self__.__extmap));
};
schema.core.EnumSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18753) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.EnumSchema(self__.vs, G__18753, self__.__extmap, self__.__hash);
};
schema.core.EnumSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.EnumSchema.prototype.schema$core$Schema$ = true;
schema.core.EnumSchema.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
    return function(p1__18751_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, self__.vs, p1__18751_SHARP_);
    };
  }(this$__$1), function(this$__$1) {
    return function(p1__18752_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18752_SHARP_), self__.vs);
    };
  }(this$__$1)));
};
schema.core.EnumSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "enum", "enum", -975417337, null), self__.vs);
};
schema.core.EnumSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vs", "vs", -381565563, null)], null);
};
schema.core.EnumSchema.cljs$lang$type = true;
schema.core.EnumSchema.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/EnumSchema");
};
schema.core.EnumSchema.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/EnumSchema");
};
schema.core.__GT_EnumSchema = function schema$core$__GT_EnumSchema(vs) {
  return new schema.core.EnumSchema(vs, null, null, null);
};
schema.core.map__GT_EnumSchema = function schema$core$map__GT_EnumSchema(G__18755) {
  return new schema.core.EnumSchema((new cljs.core.Keyword(null, "vs", "vs", -2022097090)).cljs$core$IFn$_invoke$arity$1(G__18755), null, cljs.core.dissoc.call(null, G__18755, new cljs.core.Keyword(null, "vs", "vs", -2022097090)), null);
};
schema.core.enum$ = function schema$core$enum(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___18762 = arguments.length;
  var i__7280__auto___18763 = 0;
  while (true) {
    if (i__7280__auto___18763 < len__7279__auto___18762) {
      args__7286__auto__.push(arguments[i__7280__auto___18763]);
      var G__18764 = i__7280__auto___18763 + 1;
      i__7280__auto___18763 = G__18764;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return schema.core.enum$.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
schema.core.enum$.cljs$core$IFn$_invoke$arity$variadic = function(vs) {
  return new schema.core.EnumSchema(cljs.core.set.call(null, vs), null, null, null);
};
schema.core.enum$.cljs$lang$maxFixedArity = 0;
schema.core.enum$.cljs$lang$applyTo = function(seq18761) {
  return schema.core.enum$.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq18761));
};
schema.core.Predicate = function(p_QMARK_, pred_name, __meta, __extmap, __hash) {
  this.p_QMARK_ = p_QMARK_;
  this.pred_name = pred_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Predicate.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18767, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18769 = k18767 instanceof cljs.core.Keyword ? k18767.fqn : null;
  switch(G__18769) {
    case "p?":
      return self__.p_QMARK_;
      break;
    case "pred-name":
      return self__.pred_name;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18767, else__6835__auto__);
  }
};
schema.core.Predicate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Predicate{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IIterable$ = true;
schema.core.Predicate.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18766) {
  var self__ = this;
  var G__18766__$1 = this;
  return new cljs.core.RecordIter(0, G__18766__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Predicate.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Predicate.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Predicate.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Predicate.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Predicate.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18766) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18770 = cljs.core.keyword_identical_QMARK_;
  var expr__18771 = k__6840__auto__;
  if (cljs.core.truth_(pred__18770.call(null, new cljs.core.Keyword(null, "p?", "p?", -1172161701), expr__18771))) {
    return new schema.core.Predicate(G__18766, self__.pred_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18770.call(null, new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), expr__18771))) {
      return new schema.core.Predicate(self__.p_QMARK_, G__18766, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18766), null);
    }
  }
};
schema.core.Predicate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p?", "p?", -1172161701), self__.p_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451), self__.pred_name], null)], null), self__.__extmap));
};
schema.core.Predicate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18766) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Predicate(self__.p_QMARK_, self__.pred_name, G__18766, self__.__extmap, self__.__hash);
};
schema.core.Predicate.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Predicate.prototype.schema$core$Schema$ = true;
schema.core.Predicate.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, self__.p_QMARK_, function(this$__$1) {
    return function(p1__18765_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18765_SHARP_), self__.pred_name);
    };
  }(this$__$1)));
};
schema.core.Predicate.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.integer_QMARK_)) {
    return new cljs.core.Symbol(null, "Int", "Int", -2116888740, null);
  } else {
    if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.keyword_QMARK_)) {
      return new cljs.core.Symbol(null, "Keyword", "Keyword", -850065993, null);
    } else {
      if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.symbol_QMARK_)) {
        return new cljs.core.Symbol(null, "Symbol", "Symbol", 716452869, null);
      } else {
        if (cljs.core._EQ_.call(null, self__.p_QMARK_, cljs.core.string_QMARK_)) {
          return new cljs.core.Symbol(null, "Str", "Str", 907970895, null);
        } else {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.pred_name), new cljs.core.Symbol(null, "pred", "pred", -727012372, null));
        }
      }
    }
  }
};
schema.core.Predicate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p?", "p?", 468369826, null), new cljs.core.Symbol(null, "pred-name", "pred-name", 1636854076, null)], null);
};
schema.core.Predicate.cljs$lang$type = true;
schema.core.Predicate.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Predicate");
};
schema.core.Predicate.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Predicate");
};
schema.core.__GT_Predicate = function schema$core$__GT_Predicate(p_QMARK_, pred_name) {
  return new schema.core.Predicate(p_QMARK_, pred_name, null, null, null);
};
schema.core.map__GT_Predicate = function schema$core$map__GT_Predicate(G__18768) {
  return new schema.core.Predicate((new cljs.core.Keyword(null, "p?", "p?", -1172161701)).cljs$core$IFn$_invoke$arity$1(G__18768), (new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)).cljs$core$IFn$_invoke$arity$1(G__18768), null, cljs.core.dissoc.call(null, G__18768, new cljs.core.Keyword(null, "p?", "p?", -1172161701), new cljs.core.Keyword(null, "pred-name", "pred-name", -3677451)), null);
};
schema.core.pred = function schema$core$pred(var_args) {
  var args18774 = [];
  var len__7279__auto___18777 = arguments.length;
  var i__7280__auto___18778 = 0;
  while (true) {
    if (i__7280__auto___18778 < len__7279__auto___18777) {
      args18774.push(arguments[i__7280__auto___18778]);
      var G__18779 = i__7280__auto___18778 + 1;
      i__7280__auto___18778 = G__18779;
      continue;
    } else {
    }
    break;
  }
  var G__18776 = args18774.length;
  switch(G__18776) {
    case 1:
      return schema.core.pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return schema.core.pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args18774.length)].join(""));;
  }
};
schema.core.pred.cljs$core$IFn$_invoke$arity$1 = function(p_QMARK_) {
  return schema.core.pred.call(null, p_QMARK_, cljs.core.symbol.call(null, schema.utils.fn_name.call(null, p_QMARK_)));
};
schema.core.pred.cljs$core$IFn$_invoke$arity$2 = function(p_QMARK_, pred_name) {
  if (cljs.core.ifn_QMARK_.call(null, p_QMARK_)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Not a function: %s", p_QMARK_));
  }
  return new schema.core.Predicate(p_QMARK_, pred_name, null, null, null);
};
schema.core.pred.cljs$lang$maxFixedArity = 2;
schema.core.protocol_name = function schema$core$protocol_name(protocol) {
  return (new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, protocol));
};
schema.core.Protocol = function(p, __meta, __extmap, __hash) {
  this.p = p;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Protocol.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18784, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18786 = k18784 instanceof cljs.core.Keyword ? k18784.fqn : null;
  switch(G__18786) {
    case "p":
      return self__.p;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18784, else__6835__auto__);
  }
};
schema.core.Protocol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Protocol{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IIterable$ = true;
schema.core.Protocol.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18783) {
  var self__ = this;
  var G__18783__$1 = this;
  return new cljs.core.RecordIter(0, G__18783__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Protocol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Protocol(self__.p, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Protocol.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Protocol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Protocol.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "p", "p", 151049309), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Protocol.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18783) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18787 = cljs.core.keyword_identical_QMARK_;
  var expr__18788 = k__6840__auto__;
  if (cljs.core.truth_(pred__18787.call(null, new cljs.core.Keyword(null, "p", "p", 151049309), expr__18788))) {
    return new schema.core.Protocol(G__18783, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Protocol(self__.p, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18783), null);
  }
};
schema.core.Protocol.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), self__.p], null)], null), self__.__extmap));
};
schema.core.Protocol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18783) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Protocol(self__.p, G__18783, self__.__extmap, self__.__hash);
};
schema.core.Protocol.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Protocol.prototype.schema$core$Schema$ = true;
schema.core.Protocol.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
    return function(p1__18781_SHARP_) {
      return (new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)).call(null, p1__18781_SHARP_);
    };
  }(this$__$1), function(this$__$1) {
    return function(p1__18782_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18782_SHARP_), schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null));
    };
  }(this$__$1)));
};
schema.core.Protocol.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.protocol_name.call(null, this$__$1)), new cljs.core.Symbol(null, "protocol", "protocol", -2001965651, null));
};
schema.core.Protocol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null)], null);
};
schema.core.Protocol.cljs$lang$type = true;
schema.core.Protocol.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Protocol");
};
schema.core.Protocol.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Protocol");
};
schema.core.__GT_Protocol = function schema$core$__GT_Protocol(p) {
  return new schema.core.Protocol(p, null, null, null);
};
schema.core.map__GT_Protocol = function schema$core$map__GT_Protocol(G__18785) {
  return new schema.core.Protocol((new cljs.core.Keyword(null, "p", "p", 151049309)).cljs$core$IFn$_invoke$arity$1(G__18785), null, cljs.core.dissoc.call(null, G__18785, new cljs.core.Keyword(null, "p", "p", 151049309)), null);
};
RegExp.prototype.schema$core$Schema$ = true;
RegExp.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, cljs.core.some_fn.call(null, schema.spec.core.precondition.call(null, this$__$1, cljs.core.string_QMARK_, function(this$__$1) {
    return function(p1__17437__17438__auto__) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__17437__17438__auto__), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null));
    };
  }(this$__$1)), schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
    return function(p1__18791_SHARP_) {
      return cljs.core.re_find.call(null, this$__$1, p1__18791_SHARP_);
    };
  }(this$__$1), function(this$__$1) {
    return function(p1__18792_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18792_SHARP_), schema.core.explain.call(null, this$__$1)), new cljs.core.Symbol(null, "re-find", "re-find", 1143444147, null));
    };
  }(this$__$1))));
};
RegExp.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.symbol.call(null, [cljs.core.str('#"'), cljs.core.str([cljs.core.str(this$__$1)].join("").slice(1, -1)), cljs.core.str('"')].join(""));
};
schema.core.Str = schema.core.pred.call(null, cljs.core.string_QMARK_);
schema.core.Bool = Boolean;
schema.core.Num = Number;
schema.core.Int = schema.core.pred.call(null, cljs.core.integer_QMARK_);
schema.core.Keyword = schema.core.pred.call(null, cljs.core.keyword_QMARK_);
schema.core.Symbol = schema.core.pred.call(null, cljs.core.symbol_QMARK_);
schema.core.Regex = function() {
  if (typeof schema.core.t_schema$core18795 !== "undefined") {
  } else {
    schema.core.t_schema$core18795 = function(meta18796) {
      this.meta18796 = meta18796;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    schema.core.t_schema$core18795.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18797, meta18796__$1) {
      var self__ = this;
      var _18797__$1 = this;
      return new schema.core.t_schema$core18795(meta18796__$1);
    };
    schema.core.t_schema$core18795.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18797) {
      var self__ = this;
      var _18797__$1 = this;
      return self__.meta18796;
    };
    schema.core.t_schema$core18795.prototype.schema$core$Schema$ = true;
    schema.core.t_schema$core18795.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return schema.spec.leaf.leaf_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
        return function(p1__18793_SHARP_) {
          return p1__18793_SHARP_ instanceof RegExp;
        };
      }(this$__$1), function(this$__$1) {
        return function(p1__18794_SHARP_) {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18794_SHARP_), new cljs.core.Symbol("js", "RegExp", "js/RegExp", 1778210562, null)), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
        };
      }(this$__$1)));
    };
    schema.core.t_schema$core18795.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return new cljs.core.Symbol(null, "Regex", "Regex", 205914413, null);
    };
    schema.core.t_schema$core18795.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta18796", "meta18796", -581927718, null)], null);
    };
    schema.core.t_schema$core18795.cljs$lang$type = true;
    schema.core.t_schema$core18795.cljs$lang$ctorStr = "schema.core/t_schema$core18795";
    schema.core.t_schema$core18795.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "schema.core/t_schema$core18795");
    };
    schema.core.__GT_t_schema$core18795 = function schema$core$__GT_t_schema$core18795(meta18796) {
      return new schema.core.t_schema$core18795(meta18796);
    };
  }
  return new schema.core.t_schema$core18795(cljs.core.PersistentArrayMap.EMPTY);
}();
schema.core.Inst = Date;
schema.core.Uuid = cljs.core.UUID;
schema.core.Maybe = function(schema, __meta, __extmap, __hash) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Maybe.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18799, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18801 = k18799 instanceof cljs.core.Keyword ? k18799.fqn : null;
  switch(G__18801) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18799, else__6835__auto__);
  }
};
schema.core.Maybe.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Maybe{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IIterable$ = true;
schema.core.Maybe.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18798) {
  var self__ = this;
  var G__18798__$1 = this;
  return new cljs.core.RecordIter(0, G__18798__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Maybe.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Maybe.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Maybe.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Maybe.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Maybe.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18798) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18802 = cljs.core.keyword_identical_QMARK_;
  var expr__18803 = k__6840__auto__;
  if (cljs.core.truth_(pred__18802.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__18803))) {
    return new schema.core.Maybe(G__18798, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Maybe(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18798), null);
  }
};
schema.core.Maybe.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Maybe.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18798) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Maybe(self__.schema, G__18798, self__.__extmap, self__.__hash);
};
schema.core.Maybe.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Maybe.prototype.schema$core$Schema$ = true;
schema.core.Maybe.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.variant.variant_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guard", "guard", -873147811), cljs.core.nil_QMARK_, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema.core.eq.call(null, null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
  self__.schema], null)], null));
};
schema.core.Maybe.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "maybe", "maybe", 1326133967, null));
};
schema.core.Maybe.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null)], null);
};
schema.core.Maybe.cljs$lang$type = true;
schema.core.Maybe.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Maybe");
};
schema.core.Maybe.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Maybe");
};
schema.core.__GT_Maybe = function schema$core$__GT_Maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1, null, null, null);
};
schema.core.map__GT_Maybe = function schema$core$map__GT_Maybe(G__18800) {
  return new schema.core.Maybe((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__18800), null, cljs.core.dissoc.call(null, G__18800, new cljs.core.Keyword(null, "schema", "schema", -1582001791)), null);
};
schema.core.maybe = function schema$core$maybe(schema__$1) {
  return new schema.core.Maybe(schema__$1, null, null, null);
};
schema.core.NamedSchema = function(schema, name, __meta, __extmap, __hash) {
  this.schema = schema;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.NamedSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18808, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18810 = k18808 instanceof cljs.core.Keyword ? k18808.fqn : null;
  switch(G__18810) {
    case "schema":
      return self__.schema;
      break;
    case "name":
      return self__.name;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18808, else__6835__auto__);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.NamedSchema{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IIterable$ = true;
schema.core.NamedSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18807) {
  var self__ = this;
  var G__18807__$1 = this;
  return new cljs.core.RecordIter(0, G__18807__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.NamedSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.NamedSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.NamedSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.NamedSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18807) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18811 = cljs.core.keyword_identical_QMARK_;
  var expr__18812 = k__6840__auto__;
  if (cljs.core.truth_(pred__18811.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__18812))) {
    return new schema.core.NamedSchema(G__18807, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18811.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__18812))) {
      return new schema.core.NamedSchema(self__.schema, G__18807, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.NamedSchema(self__.schema, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18807), null);
    }
  }
};
schema.core.NamedSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.NamedSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18807) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.NamedSchema(self__.schema, self__.name, G__18807, self__.__extmap, self__.__hash);
};
schema.core.NamedSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.NamedSchema.prototype.schema$core$Schema$ = true;
schema.core.NamedSchema.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.variant.variant_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema, new cljs.core.Keyword(null, "wrap-error", "wrap-error", 536732809), function(this$__$1) {
    return function(p1__18806_SHARP_) {
      return schema.utils.__GT_NamedError.call(null, self__.name, p1__18806_SHARP_);
    };
  }(this$__$1)], null)], null));
};
schema.core.NamedSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.name), schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "named", "named", 1218138048, null));
};
schema.core.NamedSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
schema.core.NamedSchema.cljs$lang$type = true;
schema.core.NamedSchema.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/NamedSchema");
};
schema.core.NamedSchema.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/NamedSchema");
};
schema.core.__GT_NamedSchema = function schema$core$__GT_NamedSchema(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name, null, null, null);
};
schema.core.map__GT_NamedSchema = function schema$core$map__GT_NamedSchema(G__18809) {
  return new schema.core.NamedSchema((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__18809), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__18809), null, cljs.core.dissoc.call(null, G__18809, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "name", "name", 1843675177)), null);
};
schema.core.named = function schema$core$named(schema__$1, name) {
  return new schema.core.NamedSchema(schema__$1, name, null, null, null);
};
schema.core.Either = function(schemas, __meta, __extmap, __hash) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Either.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18817, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18819 = k18817 instanceof cljs.core.Keyword ? k18817.fqn : null;
  switch(G__18819) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18817, else__6835__auto__);
  }
};
schema.core.Either.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Either{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IIterable$ = true;
schema.core.Either.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18816) {
  var self__ = this;
  var G__18816__$1 = this;
  return new cljs.core.RecordIter(0, G__18816__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Either.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Either(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Either.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Either.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Either.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Either.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18816) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18820 = cljs.core.keyword_identical_QMARK_;
  var expr__18821 = k__6840__auto__;
  if (cljs.core.truth_(pred__18820.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__18821))) {
    return new schema.core.Either(G__18816, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Either(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18816), null);
  }
};
schema.core.Either.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Either.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18816) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Either(self__.schemas, G__18816, self__.__extmap, self__.__hash);
};
schema.core.Either.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Either.prototype.schema$core$Schema$ = true;
schema.core.Either.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.variant.variant_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_, function() {
    var iter__6990__auto__ = function(this$__$1) {
      return function schema$core$iter__18823(s__18824) {
        return new cljs.core.LazySeq(null, function(this$__$1) {
          return function() {
            var s__18824__$1 = s__18824;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__18824__$1);
              if (temp__4657__auto__) {
                var s__18824__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__18824__$2)) {
                  var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18824__$2);
                  var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                  var b__18826 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                  if (function() {
                    var i__18825 = 0;
                    while (true) {
                      if (i__18825 < size__6989__auto__) {
                        var s = cljs.core._nth.call(null, c__6988__auto__, i__18825);
                        cljs.core.chunk_append.call(null, b__18826, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guard", "guard", -873147811), cljs.core.complement.call(null, schema.core.checker.call(null, s)), new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null));
                        var G__18828 = i__18825 + 1;
                        i__18825 = G__18828;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18826), schema$core$iter__18823.call(null, cljs.core.chunk_rest.call(null, s__18824__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18826), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__18824__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guard", "guard", -873147811), cljs.core.complement.call(null, schema.core.checker.call(null, s)), new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null), schema$core$iter__18823.call(null, cljs.core.rest.call(null, s__18824__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(this$__$1), null, null);
      };
    }(this$__$1);
    return iter__6990__auto__.call(null, self__.schemas);
  }(), function(this$__$1) {
    return function(p1__18815_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18815_SHARP_), new cljs.core.Symbol(null, "some-matching-either-clause?", "some-matching-either-clause?", -1443305015, null));
    };
  }(this$__$1));
};
schema.core.Either.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "either", "either", -2144373018, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Either.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)], null);
};
schema.core.Either.cljs$lang$type = true;
schema.core.Either.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Either");
};
schema.core.Either.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Either");
};
schema.core.__GT_Either = function schema$core$__GT_Either(schemas) {
  return new schema.core.Either(schemas, null, null, null);
};
schema.core.map__GT_Either = function schema$core$map__GT_Either(G__18818) {
  return new schema.core.Either((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__18818), null, cljs.core.dissoc.call(null, G__18818, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)), null);
};
schema.core.either = function schema$core$either(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___18830 = arguments.length;
  var i__7280__auto___18831 = 0;
  while (true) {
    if (i__7280__auto___18831 < len__7279__auto___18830) {
      args__7286__auto__.push(arguments[i__7280__auto___18831]);
      var G__18832 = i__7280__auto___18831 + 1;
      i__7280__auto___18831 = G__18832;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return schema.core.either.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
schema.core.either.cljs$core$IFn$_invoke$arity$variadic = function(schemas) {
  return new schema.core.Either(schemas, null, null, null);
};
schema.core.either.cljs$lang$maxFixedArity = 0;
schema.core.either.cljs$lang$applyTo = function(seq18829) {
  return schema.core.either.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq18829));
};
schema.core.ConditionalSchema = function(preds_and_schemas, error_symbol, __meta, __extmap, __hash) {
  this.preds_and_schemas = preds_and_schemas;
  this.error_symbol = error_symbol;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.ConditionalSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18835, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18837 = k18835 instanceof cljs.core.Keyword ? k18835.fqn : null;
  switch(G__18837) {
    case "preds-and-schemas":
      return self__.preds_and_schemas;
      break;
    case "error-symbol":
      return self__.error_symbol;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18835, else__6835__auto__);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.ConditionalSchema{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error-symbol", "error-symbol", -823480428), self__.error_symbol], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IIterable$ = true;
schema.core.ConditionalSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18834) {
  var self__ = this;
  var G__18834__$1 = this;
  return new cljs.core.RecordIter(0, G__18834__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), new cljs.core.Keyword(null, "error-symbol", "error-symbol", -823480428)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.ConditionalSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.error_symbol, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.ConditionalSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), null, new cljs.core.Keyword(null, "error-symbol", "error-symbol", -823480428), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.error_symbol, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18834) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18838 = cljs.core.keyword_identical_QMARK_;
  var expr__18839 = k__6840__auto__;
  if (cljs.core.truth_(pred__18838.call(null, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), expr__18839))) {
    return new schema.core.ConditionalSchema(G__18834, self__.error_symbol, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18838.call(null, new cljs.core.Keyword(null, "error-symbol", "error-symbol", -823480428), expr__18839))) {
      return new schema.core.ConditionalSchema(self__.preds_and_schemas, G__18834, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.error_symbol, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18834), null);
    }
  }
};
schema.core.ConditionalSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), self__.preds_and_schemas], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error-symbol", "error-symbol", -823480428), 
  self__.error_symbol], null)], null), self__.__extmap));
};
schema.core.ConditionalSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18834) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.ConditionalSchema(self__.preds_and_schemas, self__.error_symbol, G__18834, self__.__extmap, self__.__hash);
};
schema.core.ConditionalSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$ = true;
schema.core.ConditionalSchema.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.variant.variant_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_, function() {
    var iter__6990__auto__ = function(this$__$1) {
      return function schema$core$iter__18841(s__18842) {
        return new cljs.core.LazySeq(null, function(this$__$1) {
          return function() {
            var s__18842__$1 = s__18842;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__18842__$1);
              if (temp__4657__auto__) {
                var s__18842__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__18842__$2)) {
                  var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18842__$2);
                  var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                  var b__18844 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                  if (function() {
                    var i__18843 = 0;
                    while (true) {
                      if (i__18843 < size__6989__auto__) {
                        var vec__18847 = cljs.core._nth.call(null, c__6988__auto__, i__18843);
                        var p = cljs.core.nth.call(null, vec__18847, 0, null);
                        var s = cljs.core.nth.call(null, vec__18847, 1, null);
                        cljs.core.chunk_append.call(null, b__18844, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guard", "guard", -873147811), p, new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null));
                        var G__18852 = i__18843 + 1;
                        i__18843 = G__18852;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18844), schema$core$iter__18841.call(null, cljs.core.chunk_rest.call(null, s__18842__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18844), null);
                  }
                } else {
                  var vec__18848 = cljs.core.first.call(null, s__18842__$2);
                  var p = cljs.core.nth.call(null, vec__18848, 0, null);
                  var s = cljs.core.nth.call(null, vec__18848, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guard", "guard", -873147811), p, new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null), schema$core$iter__18841.call(null, cljs.core.rest.call(null, s__18842__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(this$__$1), null, null);
      };
    }(this$__$1);
    return iter__6990__auto__.call(null, self__.preds_and_schemas);
  }(), function(this$__$1) {
    return function(p1__18833_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18833_SHARP_), function() {
        var or__6210__auto__ = self__.error_symbol;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, self__.preds_and_schemas))) {
            return cljs.core.symbol.call(null, schema.utils.fn_name.call(null, cljs.core.ffirst.call(null, self__.preds_and_schemas)));
          } else {
            return new cljs.core.Symbol(null, "some-matching-condition?", "some-matching-condition?", 1512398506, null);
          }
        }
      }());
    };
  }(this$__$1));
};
schema.core.ConditionalSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "conditional", "conditional", -1212542970, null), cljs.core.concat.call(null, cljs.core.mapcat.call(null, function(this$__$1) {
    return function(p__18849) {
      var vec__18850 = p__18849;
      var pred = cljs.core.nth.call(null, vec__18850, 0, null);
      var schema__$1 = cljs.core.nth.call(null, vec__18850, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, schema.utils.fn_name.call(null, pred)), schema.core.explain.call(null, schema__$1)], null);
    };
  }(this$__$1), self__.preds_and_schemas), cljs.core.truth_(self__.error_symbol) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.error_symbol], null) : null));
};
schema.core.ConditionalSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "preds-and-schemas", "preds-and-schemas", 333765172, null), new cljs.core.Symbol(null, "error-symbol", "error-symbol", 817051099, null)], null);
};
schema.core.ConditionalSchema.cljs$lang$type = true;
schema.core.ConditionalSchema.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/ConditionalSchema");
};
schema.core.ConditionalSchema.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/ConditionalSchema");
};
schema.core.__GT_ConditionalSchema = function schema$core$__GT_ConditionalSchema(preds_and_schemas, error_symbol) {
  return new schema.core.ConditionalSchema(preds_and_schemas, error_symbol, null, null, null);
};
schema.core.map__GT_ConditionalSchema = function schema$core$map__GT_ConditionalSchema(G__18836) {
  return new schema.core.ConditionalSchema((new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355)).cljs$core$IFn$_invoke$arity$1(G__18836), (new cljs.core.Keyword(null, "error-symbol", "error-symbol", -823480428)).cljs$core$IFn$_invoke$arity$1(G__18836), null, cljs.core.dissoc.call(null, G__18836, new cljs.core.Keyword(null, "preds-and-schemas", "preds-and-schemas", -1306766355), new cljs.core.Keyword(null, "error-symbol", "error-symbol", -823480428)), null);
};
schema.core.conditional = function schema$core$conditional(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___18862 = arguments.length;
  var i__7280__auto___18863 = 0;
  while (true) {
    if (i__7280__auto___18863 < len__7279__auto___18862) {
      args__7286__auto__.push(arguments[i__7280__auto___18863]);
      var G__18864 = i__7280__auto___18863 + 1;
      i__7280__auto___18863 = G__18864;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic = function(preds_and_schemas) {
  if (cljs.core.seq.call(null, preds_and_schemas) && (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas)) || cljs.core.last.call(null, preds_and_schemas) instanceof cljs.core.Symbol)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected even, nonzero number of args (with optional trailing symbol); got %s", cljs.core.count.call(null, preds_and_schemas)));
  }
  return new schema.core.ConditionalSchema(function() {
    var iter__6990__auto__ = function schema$core$iter__18854(s__18855) {
      return new cljs.core.LazySeq(null, function() {
        var s__18855__$1 = s__18855;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__18855__$1);
          if (temp__4657__auto__) {
            var s__18855__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__18855__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18855__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__18857 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__18856 = 0;
                while (true) {
                  if (i__18856 < size__6989__auto__) {
                    var vec__18860 = cljs.core._nth.call(null, c__6988__auto__, i__18856);
                    var pred = cljs.core.nth.call(null, vec__18860, 0, null);
                    var schema__$1 = cljs.core.nth.call(null, vec__18860, 1, null);
                    cljs.core.chunk_append.call(null, b__18857, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null));
                    var G__18865 = i__18856 + 1;
                    i__18856 = G__18865;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18857), schema$core$iter__18854.call(null, cljs.core.chunk_rest.call(null, s__18855__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18857), null);
              }
            } else {
              var vec__18861 = cljs.core.first.call(null, s__18855__$2);
              var pred = cljs.core.nth.call(null, vec__18861, 0, null);
              var schema__$1 = cljs.core.nth.call(null, vec__18861, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, pred, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.constantly.call(null, true) : pred, schema__$1], null), schema$core$iter__18854.call(null, cljs.core.rest.call(null, s__18855__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, cljs.core.partition.call(null, 2, preds_and_schemas));
  }(), cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, preds_and_schemas)) ? cljs.core.last.call(null, preds_and_schemas) : null, null, null, null);
};
schema.core.conditional.cljs$lang$maxFixedArity = 0;
schema.core.conditional.cljs$lang$applyTo = function(seq18853) {
  return schema.core.conditional.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq18853));
};
schema.core.HasPrecondition = function() {
};
schema.core.precondition = function schema$core$precondition(this$) {
  if (!(this$ == null) && !(this$.schema$core$HasPrecondition$precondition$arity$1 == null)) {
    return this$.schema$core$HasPrecondition$precondition$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = schema.core.precondition[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = schema.core.precondition["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "HasPrecondition.precondition", this$);
      }
    }
  }
};
schema.spec.leaf.LeafSpec.prototype.schema$core$HasPrecondition$ = true;
schema.spec.leaf.LeafSpec.prototype.schema$core$HasPrecondition$precondition$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.complement.call(null, this$__$1.pre);
};
schema.spec.variant.VariantSpec.prototype.schema$core$HasPrecondition$ = true;
schema.spec.variant.VariantSpec.prototype.schema$core$HasPrecondition$precondition$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.every_pred.call(null, cljs.core.complement.call(null, this$__$1.pre), cljs.core.apply.call(null, cljs.core.some_fn, function() {
    var iter__6990__auto__ = function(this$__$1) {
      return function schema$core$iter__18866(s__18867) {
        return new cljs.core.LazySeq(null, function(this$__$1) {
          return function() {
            var s__18867__$1 = s__18867;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__18867__$1);
              if (temp__4657__auto__) {
                var s__18867__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__18867__$2)) {
                  var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18867__$2);
                  var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                  var b__18869 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                  if (function() {
                    var i__18868 = 0;
                    while (true) {
                      if (i__18868 < size__6989__auto__) {
                        var map__18874 = cljs.core._nth.call(null, c__6988__auto__, i__18868);
                        var map__18874__$1 = (!(map__18874 == null) ? map__18874.cljs$lang$protocol_mask$partition0$ & 64 || map__18874.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18874) : map__18874;
                        var guard = cljs.core.get.call(null, map__18874__$1, new cljs.core.Keyword(null, "guard", "guard", -873147811));
                        var schema__$1 = cljs.core.get.call(null, map__18874__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
                        cljs.core.chunk_append.call(null, b__18869, cljs.core.truth_(guard) ? cljs.core.every_pred.call(null, guard, schema.core.precondition.call(null, schema.core.spec.call(null, schema__$1))) : schema.core.precondition.call(null, schema.core.spec.call(null, schema__$1)));
                        var G__18878 = i__18868 + 1;
                        i__18868 = G__18878;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18869), schema$core$iter__18866.call(null, cljs.core.chunk_rest.call(null, s__18867__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18869), null);
                  }
                } else {
                  var map__18876 = cljs.core.first.call(null, s__18867__$2);
                  var map__18876__$1 = (!(map__18876 == null) ? map__18876.cljs$lang$protocol_mask$partition0$ & 64 || map__18876.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18876) : map__18876;
                  var guard = cljs.core.get.call(null, map__18876__$1, new cljs.core.Keyword(null, "guard", "guard", -873147811));
                  var schema__$1 = cljs.core.get.call(null, map__18876__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791));
                  return cljs.core.cons.call(null, cljs.core.truth_(guard) ? cljs.core.every_pred.call(null, guard, schema.core.precondition.call(null, schema.core.spec.call(null, schema__$1))) : schema.core.precondition.call(null, schema.core.spec.call(null, schema__$1)), schema$core$iter__18866.call(null, cljs.core.rest.call(null, s__18867__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(this$__$1), null, null);
      };
    }(this$__$1);
    return iter__6990__auto__.call(null, this$__$1.options);
  }()));
};
schema.spec.collection.CollectionSpec.prototype.schema$core$HasPrecondition$ = true;
schema.spec.collection.CollectionSpec.prototype.schema$core$HasPrecondition$precondition$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.complement.call(null, this$__$1.pre);
};
schema.core.CondPre = function(schemas, __meta, __extmap, __hash) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.CondPre.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.CondPre.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18881, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18883 = k18881 instanceof cljs.core.Keyword ? k18881.fqn : null;
  switch(G__18883) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18881, else__6835__auto__);
  }
};
schema.core.CondPre.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.CondPre{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.CondPre.prototype.cljs$core$IIterable$ = true;
schema.core.CondPre.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18880) {
  var self__ = this;
  var G__18880__$1 = this;
  return new cljs.core.RecordIter(0, G__18880__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.CondPre.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.CondPre.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.CondPre(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.CondPre.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.CondPre.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.CondPre.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.CondPre.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.CondPre(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.CondPre.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18880) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18884 = cljs.core.keyword_identical_QMARK_;
  var expr__18885 = k__6840__auto__;
  if (cljs.core.truth_(pred__18884.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__18885))) {
    return new schema.core.CondPre(G__18880, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.CondPre(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18880), null);
  }
};
schema.core.CondPre.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.CondPre.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18880) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.CondPre(self__.schemas, G__18880, self__.__extmap, self__.__hash);
};
schema.core.CondPre.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.CondPre.prototype.schema$core$Schema$ = true;
schema.core.CondPre.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.variant.variant_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_, function() {
    var iter__6990__auto__ = function(this$__$1) {
      return function schema$core$iter__18887(s__18888) {
        return new cljs.core.LazySeq(null, function(this$__$1) {
          return function() {
            var s__18888__$1 = s__18888;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__18888__$1);
              if (temp__4657__auto__) {
                var s__18888__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__18888__$2)) {
                  var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18888__$2);
                  var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                  var b__18890 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                  if (function() {
                    var i__18889 = 0;
                    while (true) {
                      if (i__18889 < size__6989__auto__) {
                        var s = cljs.core._nth.call(null, c__6988__auto__, i__18889);
                        cljs.core.chunk_append.call(null, b__18890, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guard", "guard", -873147811), schema.core.precondition.call(null, schema.core.spec.call(null, s)), new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null));
                        var G__18892 = i__18889 + 1;
                        i__18889 = G__18892;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18890), schema$core$iter__18887.call(null, cljs.core.chunk_rest.call(null, s__18888__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18890), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__18888__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "guard", "guard", -873147811), schema.core.precondition.call(null, schema.core.spec.call(null, s)), new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null), schema$core$iter__18887.call(null, cljs.core.rest.call(null, s__18888__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(this$__$1), null, null);
      };
    }(this$__$1);
    return iter__6990__auto__.call(null, self__.schemas);
  }(), function(this$__$1) {
    return function(p1__18879_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__18879_SHARP_), new cljs.core.Symbol(null, "matches-some-precondition?", "matches-some-precondition?", 2123072832, null));
    };
  }(this$__$1));
};
schema.core.CondPre.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "cond-pre", "cond-pre", -923707731, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.CondPre.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)], null);
};
schema.core.CondPre.cljs$lang$type = true;
schema.core.CondPre.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/CondPre");
};
schema.core.CondPre.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/CondPre");
};
schema.core.__GT_CondPre = function schema$core$__GT_CondPre(schemas) {
  return new schema.core.CondPre(schemas, null, null, null);
};
schema.core.map__GT_CondPre = function schema$core$map__GT_CondPre(G__18882) {
  return new schema.core.CondPre((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__18882), null, cljs.core.dissoc.call(null, G__18882, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)), null);
};
schema.core.cond_pre = function schema$core$cond_pre(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___18894 = arguments.length;
  var i__7280__auto___18895 = 0;
  while (true) {
    if (i__7280__auto___18895 < len__7279__auto___18894) {
      args__7286__auto__.push(arguments[i__7280__auto___18895]);
      var G__18896 = i__7280__auto___18895 + 1;
      i__7280__auto___18895 = G__18896;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic = function(schemas) {
  return new schema.core.CondPre(schemas, null, null, null);
};
schema.core.cond_pre.cljs$lang$maxFixedArity = 0;
schema.core.cond_pre.cljs$lang$applyTo = function(seq18893) {
  return schema.core.cond_pre.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq18893));
};
schema.core.Both = function(schemas, __meta, __extmap, __hash) {
  this.schemas = schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Both.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18899, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18901 = k18899 instanceof cljs.core.Keyword ? k18899.fqn : null;
  switch(G__18901) {
    case "schemas":
      return self__.schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18899, else__6835__auto__);
  }
};
schema.core.Both.prototype.schema$spec$core$CoreSpec$ = true;
schema.core.Both.prototype.schema$spec$core$CoreSpec$subschemas$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.schemas;
};
schema.core.Both.prototype.schema$spec$core$CoreSpec$checker$arity$2 = function(this$, params) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce.call(null, function(this$__$1) {
    return function(f, t) {
      return function(this$__$1) {
        return function(x) {
          var tx = t.call(null, x);
          if (cljs.core.truth_(schema.utils.error_QMARK_.call(null, tx))) {
            return tx;
          } else {
            return f.call(null, function() {
              var or__6210__auto__ = tx;
              if (cljs.core.truth_(or__6210__auto__)) {
                return or__6210__auto__;
              } else {
                return x;
              }
            }());
          }
        };
      }(this$__$1);
    };
  }(this$__$1), cljs.core.map.call(null, function(this$__$1) {
    return function(p1__18897_SHARP_) {
      return schema.spec.core.sub_checker.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), p1__18897_SHARP_], null), params);
    };
  }(this$__$1), cljs.core.reverse.call(null, self__.schemas)));
};
schema.core.Both.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Both{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IIterable$ = true;
schema.core.Both.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18898) {
  var self__ = this;
  var G__18898__$1 = this;
  return new cljs.core.RecordIter(0, G__18898__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Both.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Both(self__.schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Both.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Both.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Both.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Both.prototype.schema$core$HasPrecondition$ = true;
schema.core.Both.prototype.schema$core$HasPrecondition$precondition$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.apply.call(null, cljs.core.every_pred, cljs.core.map.call(null, cljs.core.comp.call(null, schema.core.precondition, schema.core.spec), self__.schemas));
};
schema.core.Both.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18898) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18902 = cljs.core.keyword_identical_QMARK_;
  var expr__18903 = k__6840__auto__;
  if (cljs.core.truth_(pred__18902.call(null, new cljs.core.Keyword(null, "schemas", "schemas", 575070579), expr__18903))) {
    return new schema.core.Both(G__18898, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Both(self__.schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18898), null);
  }
};
schema.core.Both.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schemas", "schemas", 575070579), self__.schemas], null)], null), self__.__extmap));
};
schema.core.Both.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18898) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Both(self__.schemas, G__18898, self__.__extmap, self__.__hash);
};
schema.core.Both.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Both.prototype.schema$core$Schema$ = true;
schema.core.Both.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
schema.core.Both.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, new cljs.core.Symbol(null, "both", "both", 1246882687, null), cljs.core.map.call(null, schema.core.explain, self__.schemas));
};
schema.core.Both.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schemas", "schemas", -2079365190, null)], null);
};
schema.core.Both.cljs$lang$type = true;
schema.core.Both.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Both");
};
schema.core.Both.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Both");
};
schema.core.__GT_Both = function schema$core$__GT_Both(schemas) {
  return new schema.core.Both(schemas, null, null, null);
};
schema.core.map__GT_Both = function schema$core$map__GT_Both(G__18900) {
  return new schema.core.Both((new cljs.core.Keyword(null, "schemas", "schemas", 575070579)).cljs$core$IFn$_invoke$arity$1(G__18900), null, cljs.core.dissoc.call(null, G__18900, new cljs.core.Keyword(null, "schemas", "schemas", 575070579)), null);
};
schema.core.both = function schema$core$both(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___18907 = arguments.length;
  var i__7280__auto___18908 = 0;
  while (true) {
    if (i__7280__auto___18908 < len__7279__auto___18907) {
      args__7286__auto__.push(arguments[i__7280__auto___18908]);
      var G__18909 = i__7280__auto___18908 + 1;
      i__7280__auto___18908 = G__18909;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return schema.core.both.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
schema.core.both.cljs$core$IFn$_invoke$arity$variadic = function(schemas) {
  return new schema.core.Both(schemas, null, null, null);
};
schema.core.both.cljs$lang$maxFixedArity = 0;
schema.core.both.cljs$lang$applyTo = function(seq18906) {
  return schema.core.both.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq18906));
};
schema.core.if$ = function schema$core$if(pred, if_schema, else_schema) {
  return schema.core.conditional.call(null, pred, if_schema, cljs.core.constantly.call(null, true), else_schema);
};
schema.core.var_name = function schema$core$var_name(v) {
  var map__18912 = cljs.core.meta.call(null, v);
  var map__18912__$1 = (!(map__18912 == null) ? map__18912.cljs$lang$protocol_mask$partition0$ & 64 || map__18912.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18912) : map__18912;
  var ns = cljs.core.get.call(null, map__18912__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var name = cljs.core.get.call(null, map__18912__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  return cljs.core.symbol.call(null, [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join(""));
};
schema.core.Recursive = function(derefable, __meta, __extmap, __hash) {
  this.derefable = derefable;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Recursive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Recursive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18915, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18917 = k18915 instanceof cljs.core.Keyword ? k18915.fqn : null;
  switch(G__18917) {
    case "derefable":
      return self__.derefable;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18915, else__6835__auto__);
  }
};
schema.core.Recursive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Recursive{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "derefable", "derefable", 377265868), self__.derefable], null)], null), self__.__extmap));
};
schema.core.Recursive.prototype.cljs$core$IIterable$ = true;
schema.core.Recursive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18914) {
  var self__ = this;
  var G__18914__$1 = this;
  return new cljs.core.RecordIter(0, G__18914__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "derefable", "derefable", 377265868)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Recursive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Recursive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Recursive(self__.derefable, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Recursive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Recursive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Recursive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Recursive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "derefable", "derefable", 377265868), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Recursive(self__.derefable, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Recursive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18914) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18918 = cljs.core.keyword_identical_QMARK_;
  var expr__18919 = k__6840__auto__;
  if (cljs.core.truth_(pred__18918.call(null, new cljs.core.Keyword(null, "derefable", "derefable", 377265868), expr__18919))) {
    return new schema.core.Recursive(G__18914, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Recursive(self__.derefable, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18914), null);
  }
};
schema.core.Recursive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "derefable", "derefable", 377265868), self__.derefable], null)], null), self__.__extmap));
};
schema.core.Recursive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18914) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Recursive(self__.derefable, G__18914, self__.__extmap, self__.__hash);
};
schema.core.Recursive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Recursive.prototype.schema$core$Schema$ = true;
schema.core.Recursive.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.variant.variant_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.deref.call(null, self__.derefable)], null)], null));
};
schema.core.Recursive.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.derefable instanceof cljs.core.Var ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.var_name.call(null, self__.derefable)), new cljs.core.Symbol(null, "var", "var", 870848730, null)) : new cljs.core.Symbol(null, "...", "...", -1926939749, null)), new cljs.core.Symbol(null, "recursive", "recursive", -1935549897, null));
};
schema.core.Recursive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "derefable", "derefable", 2017797395, null)], null);
};
schema.core.Recursive.cljs$lang$type = true;
schema.core.Recursive.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Recursive");
};
schema.core.Recursive.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Recursive");
};
schema.core.__GT_Recursive = function schema$core$__GT_Recursive(derefable) {
  return new schema.core.Recursive(derefable, null, null, null);
};
schema.core.map__GT_Recursive = function schema$core$map__GT_Recursive(G__18916) {
  return new schema.core.Recursive((new cljs.core.Keyword(null, "derefable", "derefable", 377265868)).cljs$core$IFn$_invoke$arity$1(G__18916), null, cljs.core.dissoc.call(null, G__18916, new cljs.core.Keyword(null, "derefable", "derefable", 377265868)), null);
};
schema.core.recursive = function schema$core$recursive(schema__$1) {
  if (!(schema__$1 == null) ? schema__$1.cljs$lang$protocol_mask$partition0$ & 32768 || schema__$1.cljs$core$IDeref$ ? true : !schema__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, schema__$1) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Not an IDeref: %s", schema__$1));
  }
  return new schema.core.Recursive(schema__$1, null, null, null);
};
schema.core.RequiredKey = function(k, __meta, __extmap, __hash) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.RequiredKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18925, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18927 = k18925 instanceof cljs.core.Keyword ? k18925.fqn : null;
  switch(G__18927) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18925, else__6835__auto__);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.RequiredKey{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IIterable$ = true;
schema.core.RequiredKey.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18924) {
  var self__ = this;
  var G__18924__$1 = this;
  return new cljs.core.RecordIter(0, G__18924__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.RequiredKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.RequiredKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.RequiredKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18924) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18928 = cljs.core.keyword_identical_QMARK_;
  var expr__18929 = k__6840__auto__;
  if (cljs.core.truth_(pred__18928.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__18929))) {
    return new schema.core.RequiredKey(G__18924, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.RequiredKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18924), null);
  }
};
schema.core.RequiredKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.RequiredKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18924) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.RequiredKey(self__.k, G__18924, self__.__extmap, self__.__hash);
};
schema.core.RequiredKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.RequiredKey.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null)], null);
};
schema.core.RequiredKey.cljs$lang$type = true;
schema.core.RequiredKey.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/RequiredKey");
};
schema.core.RequiredKey.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/RequiredKey");
};
schema.core.__GT_RequiredKey = function schema$core$__GT_RequiredKey(k) {
  return new schema.core.RequiredKey(k, null, null, null);
};
schema.core.map__GT_RequiredKey = function schema$core$map__GT_RequiredKey(G__18926) {
  return new schema.core.RequiredKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__18926), null, cljs.core.dissoc.call(null, G__18926, new cljs.core.Keyword(null, "k", "k", -2146297393)), null);
};
schema.core.required_key = function schema$core$required_key(k) {
  if (k instanceof cljs.core.Keyword) {
    return k;
  } else {
    return new schema.core.RequiredKey(k, null, null, null);
  }
};
schema.core.required_key_QMARK_ = function schema$core$required_key_QMARK_(ks) {
  return ks instanceof cljs.core.Keyword || ks instanceof schema.core.RequiredKey;
};
schema.core.OptionalKey = function(k, __meta, __extmap, __hash) {
  this.k = k;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.OptionalKey.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18933, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18935 = k18933 instanceof cljs.core.Keyword ? k18933.fqn : null;
  switch(G__18935) {
    case "k":
      return self__.k;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18933, else__6835__auto__);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.OptionalKey{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IIterable$ = true;
schema.core.OptionalKey.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18932) {
  var self__ = this;
  var G__18932__$1 = this;
  return new cljs.core.RecordIter(0, G__18932__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.OptionalKey.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.OptionalKey.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.OptionalKey.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "k", "k", -2146297393), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18932) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18936 = cljs.core.keyword_identical_QMARK_;
  var expr__18937 = k__6840__auto__;
  if (cljs.core.truth_(pred__18936.call(null, new cljs.core.Keyword(null, "k", "k", -2146297393), expr__18937))) {
    return new schema.core.OptionalKey(G__18932, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.OptionalKey(self__.k, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18932), null);
  }
};
schema.core.OptionalKey.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "k", "k", -2146297393), self__.k], null)], null), self__.__extmap));
};
schema.core.OptionalKey.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18932) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.OptionalKey(self__.k, G__18932, self__.__extmap, self__.__hash);
};
schema.core.OptionalKey.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.OptionalKey.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "k", "k", -505765866, null)], null);
};
schema.core.OptionalKey.cljs$lang$type = true;
schema.core.OptionalKey.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/OptionalKey");
};
schema.core.OptionalKey.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/OptionalKey");
};
schema.core.__GT_OptionalKey = function schema$core$__GT_OptionalKey(k) {
  return new schema.core.OptionalKey(k, null, null, null);
};
schema.core.map__GT_OptionalKey = function schema$core$map__GT_OptionalKey(G__18934) {
  return new schema.core.OptionalKey((new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(G__18934), null, cljs.core.dissoc.call(null, G__18934, new cljs.core.Keyword(null, "k", "k", -2146297393)), null);
};
schema.core.optional_key = function schema$core$optional_key(k) {
  return new schema.core.OptionalKey(k, null, null, null);
};
schema.core.optional_key_QMARK_ = function schema$core$optional_key_QMARK_(ks) {
  return ks instanceof schema.core.OptionalKey;
};
schema.core.explicit_schema_key = function schema$core$explicit_schema_key(ks) {
  if (ks instanceof cljs.core.Keyword) {
    return ks;
  } else {
    if (ks instanceof schema.core.RequiredKey) {
      return ks.k;
    } else {
      if (cljs.core.truth_(schema.core.optional_key_QMARK_.call(null, ks))) {
        return ks.k;
      } else {
        throw new Error(schema.utils.format_STAR_.call(null, "Bad explicit key: %s", ks));
      }
    }
  }
};
schema.core.specific_key_QMARK_ = function schema$core$specific_key_QMARK_(ks) {
  var or__6210__auto__ = schema.core.required_key_QMARK_.call(null, ks);
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return schema.core.optional_key_QMARK_.call(null, ks);
  }
};
schema.core.MapEntry = function(key_schema, val_schema, __meta, __extmap, __hash) {
  this.key_schema = key_schema;
  this.val_schema = val_schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k18941, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__18943 = k18941 instanceof cljs.core.Keyword ? k18941.fqn : null;
  switch(G__18943) {
    case "key-schema":
      return self__.key_schema;
      break;
    case "val-schema":
      return self__.val_schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18941, else__6835__auto__);
  }
};
schema.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.MapEntry{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key-schema", "key-schema", -1096660726), self__.key_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IIterable$ = true;
schema.core.MapEntry.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__18940) {
  var self__ = this;
  var G__18940__$1 = this;
  return new cljs.core.RecordIter(0, G__18940__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key-schema", "key-schema", -1096660726), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.MapEntry.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.MapEntry(self__.key_schema, self__.val_schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.MapEntry.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key-schema", "key-schema", -1096660726), null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.MapEntry(self__.key_schema, self__.val_schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__18940) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__18944 = cljs.core.keyword_identical_QMARK_;
  var expr__18945 = k__6840__auto__;
  if (cljs.core.truth_(pred__18944.call(null, new cljs.core.Keyword(null, "key-schema", "key-schema", -1096660726), expr__18945))) {
    return new schema.core.MapEntry(G__18940, self__.val_schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18944.call(null, new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), expr__18945))) {
      return new schema.core.MapEntry(self__.key_schema, G__18940, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.MapEntry(self__.key_schema, self__.val_schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__18940), null);
    }
  }
};
schema.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key-schema", "key-schema", -1096660726), self__.key_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619), self__.val_schema], null)], 
  null), self__.__extmap));
};
schema.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__18940) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.MapEntry(self__.key_schema, self__.val_schema, G__18940, self__.__extmap, self__.__hash);
};
schema.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.MapEntry.prototype.schema$core$Schema$ = true;
schema.core.MapEntry.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.collection.collection_spec.call(null, schema.spec.core._PLUS_no_precondition_PLUS_, cljs.core.vec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.spec.collection.one_element.call(null, true, self__.key_schema, function(this$__$1) {
    return function(item_fn, e) {
      item_fn.call(null, cljs.core.key.call(null, e));
      return e;
    };
  }(this$__$1)), schema.spec.collection.one_element.call(null, true, self__.val_schema, function(this$__$1) {
    return function(item_fn, e) {
      item_fn.call(null, cljs.core.val.call(null, e));
      return null;
    };
  }(this$__$1))], null), function(this$__$1) {
    return function(p__18947, p__18948, _) {
      var vec__18949 = p__18947;
      var k = cljs.core.nth.call(null, vec__18949, 0, null);
      var vec__18950 = p__18948;
      var xk = cljs.core.nth.call(null, vec__18950, 0, null);
      var xv = cljs.core.nth.call(null, vec__18950, 1, null);
      var temp__4655__auto__ = schema.utils.error_val.call(null, xk);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var k_err = temp__4655__auto__;
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k_err, new cljs.core.Symbol(null, "invalid-key", "invalid-key", -1461682245, null)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, schema.utils.error_val.call(null, xv)], null);
      }
    };
  }(this$__$1));
};
schema.core.MapEntry.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.val_schema)), schema.core.explain.call(null, self__.key_schema)), new cljs.core.Symbol(null, "map-entry", "map-entry", 329617471, null));
};
schema.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key-schema", "key-schema", 543870801, null), new cljs.core.Symbol(null, "val-schema", "val-schema", -374242092, null)], null);
};
schema.core.MapEntry.cljs$lang$type = true;
schema.core.MapEntry.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/MapEntry");
};
schema.core.MapEntry.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/MapEntry");
};
schema.core.__GT_MapEntry = function schema$core$__GT_MapEntry(key_schema, val_schema) {
  return new schema.core.MapEntry(key_schema, val_schema, null, null, null);
};
schema.core.map__GT_MapEntry = function schema$core$map__GT_MapEntry(G__18942) {
  return new schema.core.MapEntry((new cljs.core.Keyword(null, "key-schema", "key-schema", -1096660726)).cljs$core$IFn$_invoke$arity$1(G__18942), (new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)).cljs$core$IFn$_invoke$arity$1(G__18942), null, cljs.core.dissoc.call(null, G__18942, new cljs.core.Keyword(null, "key-schema", "key-schema", -1096660726), new cljs.core.Keyword(null, "val-schema", "val-schema", -2014773619)), null);
};
schema.core.map_entry = function schema$core$map_entry(key_schema, val_schema) {
  return new schema.core.MapEntry(key_schema, val_schema, null, null, null);
};
schema.core.find_extra_keys_schema = function schema$core$find_extra_keys_schema(map_schema) {
  var key_schemata = cljs.core.remove.call(null, schema.core.specific_key_QMARK_, cljs.core.keys.call(null, map_schema));
  if (cljs.core.count.call(null, key_schemata) < 2) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "More than one non-optional/required key schemata: %s", cljs.core.vec.call(null, key_schemata)));
  }
  return cljs.core.first.call(null, key_schemata);
};
schema.core.explain_kspec = function schema$core$explain_kspec(kspec) {
  if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, kspec))) {
    if (kspec instanceof cljs.core.Keyword) {
      return kspec;
    } else {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explicit_schema_key.call(null, kspec)), cljs.core.truth_(schema.core.required_key_QMARK_.call(null, kspec)) ? new cljs.core.Symbol(null, "required-key", "required-key", 1624616412, null) : cljs.core.truth_(schema.core.optional_key_QMARK_.call(null, kspec)) ? new cljs.core.Symbol(null, "optional-key", "optional-key", 988406145, null) : null);
    }
  } else {
    return schema.core.explain.call(null, kspec);
  }
};
schema.core.map_elements = function schema$core$map_elements(this$) {
  var extra_keys_schema = schema.core.find_extra_keys_schema.call(null, this$);
  var duplicate_keys_18969 = cljs.core.mapv.call(null, schema.core.explain_kspec, cljs.core.apply.call(null, cljs.core.concat, cljs.core.filter.call(null, function(extra_keys_schema) {
    return function(p1__18952_SHARP_) {
      return cljs.core.count.call(null, p1__18952_SHARP_) > 1;
    };
  }(extra_keys_schema), cljs.core.vals.call(null, cljs.core.group_by.call(null, schema.core.explicit_schema_key, cljs.core.keys.call(null, cljs.core.dissoc.call(null, this$, extra_keys_schema)))))));
  if (cljs.core.empty_QMARK_.call(null, duplicate_keys_18969)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Schema has multiple variants of the same explicit key: %s", duplicate_keys_18969));
  }
  return cljs.core.concat.call(null, function() {
    var iter__6990__auto__ = function(extra_keys_schema) {
      return function schema$core$map_elements_$_iter__18961(s__18962) {
        return new cljs.core.LazySeq(null, function(extra_keys_schema) {
          return function() {
            var s__18962__$1 = s__18962;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__18962__$1);
              if (temp__4657__auto__) {
                var s__18962__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__18962__$2)) {
                  var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18962__$2);
                  var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                  var b__18964 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                  if (function() {
                    var i__18963 = 0;
                    while (true) {
                      if (i__18963 < size__6989__auto__) {
                        var vec__18967 = cljs.core._nth.call(null, c__6988__auto__, i__18963);
                        var k = cljs.core.nth.call(null, vec__18967, 0, null);
                        var v = cljs.core.nth.call(null, vec__18967, 1, null);
                        cljs.core.chunk_append.call(null, b__18964, function() {
                          var rk = schema.core.explicit_schema_key.call(null, k);
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          return schema.spec.collection.one_element.call(null, required_QMARK_, schema.core.map_entry.call(null, schema.core.eq.call(null, rk), v), function(i__18963, rk, required_QMARK_, vec__18967, k, v, c__6988__auto__, size__6989__auto__, b__18964, s__18962__$2, temp__4657__auto__, extra_keys_schema) {
                            return function(item_fn, m) {
                              var e = cljs.core.find.call(null, m, rk);
                              if (cljs.core.truth_(e)) {
                                item_fn.call(null, e);
                              } else {
                                if (cljs.core.truth_(required_QMARK_)) {
                                  item_fn.call(null, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rk, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null)));
                                } else {
                                }
                              }
                              if (cljs.core.truth_(e)) {
                                return cljs.core.dissoc.call(null, m, rk);
                              } else {
                                return m;
                              }
                            };
                          }(i__18963, rk, required_QMARK_, vec__18967, k, v, c__6988__auto__, size__6989__auto__, b__18964, s__18962__$2, temp__4657__auto__, extra_keys_schema));
                        }());
                        var G__18970 = i__18963 + 1;
                        i__18963 = G__18970;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18964), schema$core$map_elements_$_iter__18961.call(null, cljs.core.chunk_rest.call(null, s__18962__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18964), null);
                  }
                } else {
                  var vec__18968 = cljs.core.first.call(null, s__18962__$2);
                  var k = cljs.core.nth.call(null, vec__18968, 0, null);
                  var v = cljs.core.nth.call(null, vec__18968, 1, null);
                  return cljs.core.cons.call(null, function() {
                    var rk = schema.core.explicit_schema_key.call(null, k);
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    return schema.spec.collection.one_element.call(null, required_QMARK_, schema.core.map_entry.call(null, schema.core.eq.call(null, rk), v), function(rk, required_QMARK_, vec__18968, k, v, s__18962__$2, temp__4657__auto__, extra_keys_schema) {
                      return function(item_fn, m) {
                        var e = cljs.core.find.call(null, m, rk);
                        if (cljs.core.truth_(e)) {
                          item_fn.call(null, e);
                        } else {
                          if (cljs.core.truth_(required_QMARK_)) {
                            item_fn.call(null, schema.utils.error.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rk, new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null)], null)));
                          } else {
                          }
                        }
                        if (cljs.core.truth_(e)) {
                          return cljs.core.dissoc.call(null, m, rk);
                        } else {
                          return m;
                        }
                      };
                    }(rk, required_QMARK_, vec__18968, k, v, s__18962__$2, temp__4657__auto__, extra_keys_schema));
                  }(), schema$core$map_elements_$_iter__18961.call(null, cljs.core.rest.call(null, s__18962__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(extra_keys_schema), null, null);
      };
    }(extra_keys_schema);
    return iter__6990__auto__.call(null, cljs.core.dissoc.call(null, this$, extra_keys_schema));
  }(), cljs.core.truth_(extra_keys_schema) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.spec.collection.all_elements.call(null, cljs.core.apply.call(null, schema.core.map_entry, cljs.core.find.call(null, this$, extra_keys_schema)))], null) : null);
};
schema.core.map_error = function schema$core$map_error() {
  return function(_, elts, extra) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.concat.call(null, cljs.core.keep.call(null, schema.utils.error_val, elts), function() {
      var iter__6990__auto__ = function schema$core$map_error_$_iter__18979(s__18980) {
        return new cljs.core.LazySeq(null, function() {
          var s__18980__$1 = s__18980;
          while (true) {
            var temp__4657__auto__ = cljs.core.seq.call(null, s__18980__$1);
            if (temp__4657__auto__) {
              var s__18980__$2 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__18980__$2)) {
                var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18980__$2);
                var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                var b__18982 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                if (function() {
                  var i__18981 = 0;
                  while (true) {
                    if (i__18981 < size__6989__auto__) {
                      var vec__18985 = cljs.core._nth.call(null, c__6988__auto__, i__18981);
                      var k = cljs.core.nth.call(null, vec__18985, 0, null);
                      var ___$1 = cljs.core.nth.call(null, vec__18985, 1, null);
                      cljs.core.chunk_append.call(null, b__18982, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null));
                      var G__18987 = i__18981 + 1;
                      i__18981 = G__18987;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18982), schema$core$map_error_$_iter__18979.call(null, cljs.core.chunk_rest.call(null, s__18980__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__18982), null);
                }
              } else {
                var vec__18986 = cljs.core.first.call(null, s__18980__$2);
                var k = cljs.core.nth.call(null, vec__18986, 0, null);
                var ___$1 = cljs.core.nth.call(null, vec__18986, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Symbol(null, "disallowed-key", "disallowed-key", -1877785633, null)], null), schema$core$map_error_$_iter__18979.call(null, cljs.core.rest.call(null, s__18980__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__6990__auto__.call(null, extra);
    }()));
  };
};
schema.core.map_spec = function schema$core$map_spec(this$) {
  return schema.spec.collection.collection_spec.call(null, schema.spec.core.precondition.call(null, this$, cljs.core.map_QMARK_, function(p1__17437__17438__auto__) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__17437__17438__auto__), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
  }), function(p1__18988_SHARP_) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, p1__18988_SHARP_);
  }, schema.core.map_elements.call(null, this$), schema.core.map_error.call(null));
};
schema.core.map_explain = function schema$core$map_explain(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6990__auto__ = function schema$core$map_explain_$_iter__18997(s__18998) {
      return new cljs.core.LazySeq(null, function() {
        var s__18998__$1 = s__18998;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__18998__$1);
          if (temp__4657__auto__) {
            var s__18998__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__18998__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__18998__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__19000 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__18999 = 0;
                while (true) {
                  if (i__18999 < size__6989__auto__) {
                    var vec__19003 = cljs.core._nth.call(null, c__6988__auto__, i__18999);
                    var k = cljs.core.nth.call(null, vec__19003, 0, null);
                    var v = cljs.core.nth.call(null, vec__19003, 1, null);
                    cljs.core.chunk_append.call(null, b__19000, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain_kspec.call(null, k), schema.core.explain.call(null, v)], null));
                    var G__19005 = i__18999 + 1;
                    i__18999 = G__19005;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19000), schema$core$map_explain_$_iter__18997.call(null, cljs.core.chunk_rest.call(null, s__18998__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19000), null);
              }
            } else {
              var vec__19004 = cljs.core.first.call(null, s__18998__$2);
              var k = cljs.core.nth.call(null, vec__19004, 0, null);
              var v = cljs.core.nth.call(null, vec__19004, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain_kspec.call(null, k), schema.core.explain.call(null, v)], null), schema$core$map_explain_$_iter__18997.call(null, cljs.core.rest.call(null, s__18998__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, this$);
  }());
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_spec.call(null, this$__$1);
};
cljs.core.PersistentArrayMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashMap.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_spec.call(null, this$__$1);
};
cljs.core.PersistentHashMap.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.core.map_explain.call(null, this$__$1);
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$ = true;
cljs.core.PersistentHashSet.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, this$__$1), 1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Set schema must have exactly one element"));
  }
  return schema.spec.collection.collection_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, cljs.core.set_QMARK_, function(this$__$1) {
    return function(p1__17437__17438__auto__) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__17437__17438__auto__), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null));
    };
  }(this$__$1)), cljs.core.set, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.spec.collection.all_elements.call(null, cljs.core.first.call(null, this$__$1))], null), function(this$__$1) {
    return function(_, xs, ___$1) {
      return cljs.core.set.call(null, cljs.core.keep.call(null, schema.utils.error_val, xs));
    };
  }(this$__$1));
};
cljs.core.PersistentHashSet.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, cljs.core.first.call(null, this$__$1))], null));
};
schema.core.queue_QMARK_ = function schema$core$queue_QMARK_(x) {
  return x instanceof cljs.core.PersistentQueue;
};
schema.core.as_queue = function schema$core$as_queue(col) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.PersistentQueue.EMPTY, col);
};
schema.core.Queue = function(schema, __meta, __extmap, __hash) {
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Queue.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Queue.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k19007, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__19009 = k19007 instanceof cljs.core.Keyword ? k19007.fqn : null;
  switch(G__19009) {
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19007, else__6835__auto__);
  }
};
schema.core.Queue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Queue{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Queue.prototype.cljs$core$IIterable$ = true;
schema.core.Queue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19006) {
  var self__ = this;
  var G__19006__$1 = this;
  return new cljs.core.RecordIter(0, G__19006__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Queue.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Queue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Queue(self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Queue.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Queue.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Queue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Queue.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Queue(self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Queue.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__19006) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__19010 = cljs.core.keyword_identical_QMARK_;
  var expr__19011 = k__6840__auto__;
  if (cljs.core.truth_(pred__19010.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__19011))) {
    return new schema.core.Queue(G__19006, self__.__meta, self__.__extmap, null);
  } else {
    return new schema.core.Queue(self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__19006), null);
  }
};
schema.core.Queue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Queue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__19006) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Queue(self__.schema, G__19006, self__.__extmap, self__.__hash);
};
schema.core.Queue.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Queue.prototype.schema$core$Schema$ = true;
schema.core.Queue.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.collection.collection_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, schema.core.queue_QMARK_, function(this$__$1) {
    return function(p1__17437__17438__auto__) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__17437__17438__auto__), new cljs.core.Symbol(null, "queue?", "queue?", -880510795, null));
    };
  }(this$__$1)), schema.core.as_queue, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.spec.collection.all_elements.call(null, self__.schema)], null), function(this$__$1) {
    return function(_, xs, ___$1) {
      return schema.core.as_queue.call(null, cljs.core.keep.call(null, schema.utils.error_val, xs));
    };
  }(this$__$1));
};
schema.core.Queue.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), new cljs.core.Symbol(null, "queue", "queue", -1198599890, null));
};
schema.core.Queue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null)], null);
};
schema.core.Queue.cljs$lang$type = true;
schema.core.Queue.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Queue");
};
schema.core.Queue.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Queue");
};
schema.core.__GT_Queue = function schema$core$__GT_Queue(schema__$1) {
  return new schema.core.Queue(schema__$1, null, null, null);
};
schema.core.map__GT_Queue = function schema$core$map__GT_Queue(G__19008) {
  return new schema.core.Queue((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__19008), null, cljs.core.dissoc.call(null, G__19008, new cljs.core.Keyword(null, "schema", "schema", -1582001791)), null);
};
schema.core.queue = function schema$core$queue(x) {
  return new schema.core.Queue(x, null, null, null);
};
schema.core.One = function(schema, optional_QMARK_, name, __meta, __extmap, __hash) {
  this.schema = schema;
  this.optional_QMARK_ = optional_QMARK_;
  this.name = name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.One.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k19015, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__19017 = k19015 instanceof cljs.core.Keyword ? k19015.fqn : null;
  switch(G__19017) {
    case "schema":
      return self__.schema;
      break;
    case "optional?":
      return self__.optional_QMARK_;
      break;
    case "name":
      return self__.name;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19015, else__6835__auto__);
  }
};
schema.core.One.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.One{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IIterable$ = true;
schema.core.One.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19014) {
  var self__ = this;
  var G__19014__$1 = this;
  return new cljs.core.RecordIter(0, G__19014__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.One.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.One.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.One.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.One.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.One.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "name", "name", 1843675177), null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.One.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__19014) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__19018 = cljs.core.keyword_identical_QMARK_;
  var expr__19019 = k__6840__auto__;
  if (cljs.core.truth_(pred__19018.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__19019))) {
    return new schema.core.One(G__19014, self__.optional_QMARK_, self__.name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19018.call(null, new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), expr__19019))) {
      return new schema.core.One(self__.schema, G__19014, self__.name, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__19018.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), expr__19019))) {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, G__19014, self__.__meta, self__.__extmap, null);
      } else {
        return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__19014), null);
      }
    }
  }
};
schema.core.One.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optional?", "optional?", 1184638129), self__.optional_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), self__.name], null)], null), self__.__extmap));
};
schema.core.One.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__19014) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.One(self__.schema, self__.optional_QMARK_, self__.name, G__19014, self__.__extmap, self__.__hash);
};
schema.core.One.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.One.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "optional?", "optional?", -1469797640, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
schema.core.One.cljs$lang$type = true;
schema.core.One.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/One");
};
schema.core.One.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/One");
};
schema.core.__GT_One = function schema$core$__GT_One(schema__$1, optional_QMARK_, name) {
  return new schema.core.One(schema__$1, optional_QMARK_, name, null, null, null);
};
schema.core.map__GT_One = function schema$core$map__GT_One(G__19016) {
  return new schema.core.One((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__19016), (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(G__19016), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__19016), null, cljs.core.dissoc.call(null, G__19016, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "optional?", "optional?", 
  1184638129), new cljs.core.Keyword(null, "name", "name", 1843675177)), null);
};
schema.core.one = function schema$core$one(schema__$1, name) {
  return new schema.core.One(schema__$1, false, name, null, null, null);
};
schema.core.optional = function schema$core$optional(schema__$1, name) {
  return new schema.core.One(schema__$1, true, name, null, null, null);
};
schema.core.parse_sequence_schema = function schema$core$parse_sequence_schema(s) {
  var vec__19027 = cljs.core.split_with.call(null, function(p1__19022_SHARP_) {
    return p1__19022_SHARP_ instanceof schema.core.One && cljs.core.not.call(null, (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__19022_SHARP_));
  }, s);
  var required = cljs.core.nth.call(null, vec__19027, 0, null);
  var more = cljs.core.nth.call(null, vec__19027, 1, null);
  var vec__19028 = cljs.core.split_with.call(null, function(vec__19027, required, more) {
    return function(p1__19023_SHARP_) {
      var and__6198__auto__ = p1__19023_SHARP_ instanceof schema.core.One;
      if (and__6198__auto__) {
        return (new cljs.core.Keyword(null, "optional?", "optional?", 1184638129)).cljs$core$IFn$_invoke$arity$1(p1__19023_SHARP_);
      } else {
        return and__6198__auto__;
      }
    };
  }(vec__19027, required, more), more);
  var optional = cljs.core.nth.call(null, vec__19028, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__19028, 1, null);
  if (cljs.core.count.call(null, more__$1) <= 1 && cljs.core.every_QMARK_.call(null, function(vec__19027, required, more, vec__19028, optional, more__$1) {
    return function(p1__19024_SHARP_) {
      return !(p1__19024_SHARP_ instanceof schema.core.One);
    };
  }(vec__19027, required, more, vec__19028, optional, more__$1), more__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Sequence schema %s does not match [one* optional* rest-schema?]", s));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.call(null, required, optional), cljs.core.first.call(null, more__$1)], null);
};
cljs.core.PersistentVector.prototype.schema$core$Schema$ = true;
cljs.core.PersistentVector.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var this$__$1 = this;
  return schema.spec.collection.collection_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
    return function(x) {
      return x == null || cljs.core.sequential_QMARK_.call(null, x);
    };
  }(this$__$1), function(this$__$1) {
    return function(p1__19029_SHARP_) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__19029_SHARP_), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null));
    };
  }(this$__$1)), cljs.core.vec, function() {
    var vec__19030 = schema.core.parse_sequence_schema.call(null, this$__$1);
    var singles = cljs.core.nth.call(null, vec__19030, 0, null);
    var multi = cljs.core.nth.call(null, vec__19030, 1, null);
    return cljs.core.concat.call(null, function() {
      var iter__6990__auto__ = function(vec__19030, singles, multi, this$__$1) {
        return function schema$core$iter__19031(s__19032) {
          return new cljs.core.LazySeq(null, function(vec__19030, singles, multi, this$__$1) {
            return function() {
              var s__19032__$1 = s__19032;
              while (true) {
                var temp__4657__auto__ = cljs.core.seq.call(null, s__19032__$1);
                if (temp__4657__auto__) {
                  var s__19032__$2 = temp__4657__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__19032__$2)) {
                    var c__6988__auto__ = cljs.core.chunk_first.call(null, s__19032__$2);
                    var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                    var b__19034 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                    if (function() {
                      var i__19033 = 0;
                      while (true) {
                        if (i__19033 < size__6989__auto__) {
                          var s = cljs.core._nth.call(null, c__6988__auto__, i__19033);
                          cljs.core.chunk_append.call(null, b__19034, function() {
                            var required_QMARK_ = cljs.core.not.call(null, s.optional_QMARK_);
                            return schema.spec.collection.one_element.call(null, required_QMARK_, schema.core.named.call(null, s.schema, s.name), function(i__19033, required_QMARK_, s, c__6988__auto__, size__6989__auto__, b__19034, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1) {
                              return function(item_fn, x) {
                                var temp__4655__auto__ = cljs.core.seq.call(null, x);
                                if (temp__4655__auto__) {
                                  var x__$1 = temp__4655__auto__;
                                  item_fn.call(null, cljs.core.first.call(null, x__$1));
                                  return cljs.core.rest.call(null, x__$1);
                                } else {
                                  if (required_QMARK_) {
                                    item_fn.call(null, schema.utils.error.call(null, schema.utils.make_ValidationError.call(null, s.schema, new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325), new cljs.core.Delay(function(i__19033, temp__4655__auto__, required_QMARK_, s, c__6988__auto__, size__6989__auto__, b__19034, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1) {
                                      return function() {
                                        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, s.name), new cljs.core.Symbol(null, "present?", "present?", -1810613791, null));
                                      };
                                    }(i__19033, temp__4655__auto__, required_QMARK_, s, c__6988__auto__, size__6989__auto__, b__19034, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1), null), null)));
                                  } else {
                                  }
                                  return null;
                                }
                              };
                            }(i__19033, required_QMARK_, s, c__6988__auto__, size__6989__auto__, b__19034, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1));
                          }());
                          var G__19040 = i__19033 + 1;
                          i__19033 = G__19040;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19034), schema$core$iter__19031.call(null, cljs.core.chunk_rest.call(null, s__19032__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19034), null);
                    }
                  } else {
                    var s = cljs.core.first.call(null, s__19032__$2);
                    return cljs.core.cons.call(null, function() {
                      var required_QMARK_ = cljs.core.not.call(null, s.optional_QMARK_);
                      return schema.spec.collection.one_element.call(null, required_QMARK_, schema.core.named.call(null, s.schema, s.name), function(required_QMARK_, s, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1) {
                        return function(item_fn, x) {
                          var temp__4655__auto__ = cljs.core.seq.call(null, x);
                          if (temp__4655__auto__) {
                            var x__$1 = temp__4655__auto__;
                            item_fn.call(null, cljs.core.first.call(null, x__$1));
                            return cljs.core.rest.call(null, x__$1);
                          } else {
                            if (required_QMARK_) {
                              item_fn.call(null, schema.utils.error.call(null, schema.utils.make_ValidationError.call(null, s.schema, new cljs.core.Keyword("schema.core", "missing", "schema.core/missing", 1420181325), new cljs.core.Delay(function(temp__4655__auto__, required_QMARK_, s, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1) {
                                return function() {
                                  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, s.name), new cljs.core.Symbol(null, "present?", "present?", -1810613791, null));
                                };
                              }(temp__4655__auto__, required_QMARK_, s, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1), null), null)));
                            } else {
                            }
                            return null;
                          }
                        };
                      }(required_QMARK_, s, s__19032__$2, temp__4657__auto__, vec__19030, singles, multi, this$__$1));
                    }(), schema$core$iter__19031.call(null, cljs.core.rest.call(null, s__19032__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(vec__19030, singles, multi, this$__$1), null, null);
        };
      }(vec__19030, singles, multi, this$__$1);
      return iter__6990__auto__.call(null, singles);
    }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.spec.collection.all_elements.call(null, multi)], null) : null);
  }(), function(this$__$1) {
    return function(_, elts, extra) {
      var head = cljs.core.mapv.call(null, schema.utils.error_val, elts);
      if (cljs.core.seq.call(null, extra)) {
        return cljs.core.conj.call(null, head, schema.utils.error_val.call(null, schema.utils.error.call(null, schema.utils.make_ValidationError.call(null, null, extra, new cljs.core.Delay(function(head, this$__$1) {
          return function() {
            return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, extra)), new cljs.core.Symbol(null, "has-extra-elts?", "has-extra-elts?", -1376562869, null));
          };
        }(head, this$__$1), null), null))));
      } else {
        return head;
      }
    };
  }(this$__$1));
};
cljs.core.PersistentVector.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var this$__$1 = this;
  var vec__19035 = schema.core.parse_sequence_schema.call(null, this$__$1);
  var singles = cljs.core.nth.call(null, vec__19035, 0, null);
  var multi = cljs.core.nth.call(null, vec__19035, 1, null);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, function() {
    var iter__6990__auto__ = function(vec__19035, singles, multi, this$__$1) {
      return function schema$core$iter__19036(s__19037) {
        return new cljs.core.LazySeq(null, function(vec__19035, singles, multi, this$__$1) {
          return function() {
            var s__19037__$1 = s__19037;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__19037__$1);
              if (temp__4657__auto__) {
                var s__19037__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__19037__$2)) {
                  var c__6988__auto__ = cljs.core.chunk_first.call(null, s__19037__$2);
                  var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                  var b__19039 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                  if (function() {
                    var i__19038 = 0;
                    while (true) {
                      if (i__19038 < size__6989__auto__) {
                        var s = cljs.core._nth.call(null, c__6988__auto__, i__19038);
                        cljs.core.chunk_append.call(null, b__19039, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : 
                        new cljs.core.Symbol(null, "one", "one", -1719427865, null)));
                        var G__19041 = i__19038 + 1;
                        i__19038 = G__19041;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19039), schema$core$iter__19036.call(null, cljs.core.chunk_rest.call(null, s__19037__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19039), null);
                  }
                } else {
                  var s = cljs.core.first.call(null, s__19037__$2);
                  return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(s)), schema.core.explain.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(s))), cljs.core.truth_(s.optional_QMARK_) ? new cljs.core.Symbol(null, "optional", "optional", -600484260, null) : new cljs.core.Symbol(null, 
                  "one", "one", -1719427865, null)), schema$core$iter__19036.call(null, cljs.core.rest.call(null, s__19037__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(vec__19035, singles, multi, this$__$1), null, null);
      };
    }(vec__19035, singles, multi, this$__$1);
    return iter__6990__auto__.call(null, singles);
  }(), cljs.core.truth_(multi) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explain.call(null, multi)], null) : null));
};
schema.core.pair = function schema$core$pair(first_schema, first_name, second_schema, second_name) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, first_schema, first_name), schema.core.one.call(null, second_schema, second_name)], null);
};
schema.core.Record = function(klass, schema, __meta, __extmap, __hash) {
  this.klass = klass;
  this.schema = schema;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.Record.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k19046, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__19048 = k19046 instanceof cljs.core.Keyword ? k19046.fqn : null;
  switch(G__19048) {
    case "klass":
      return self__.klass;
      break;
    case "schema":
      return self__.schema;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19046, else__6835__auto__);
  }
};
schema.core.Record.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.Record{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IIterable$ = true;
schema.core.Record.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19045) {
  var self__ = this;
  var G__19045__$1 = this;
  return new cljs.core.RecordIter(0, G__19045__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.Record.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.Record.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.Record.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.Record.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.Record.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__19045) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__19049 = cljs.core.keyword_identical_QMARK_;
  var expr__19050 = k__6840__auto__;
  if (cljs.core.truth_(pred__19049.call(null, new cljs.core.Keyword(null, "klass", "klass", -1386752349), expr__19050))) {
    return new schema.core.Record(G__19045, self__.schema, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19049.call(null, new cljs.core.Keyword(null, "schema", "schema", -1582001791), expr__19050))) {
      return new schema.core.Record(self__.klass, G__19045, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.Record(self__.klass, self__.schema, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__19045), null);
    }
  }
};
schema.core.Record.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "klass", "klass", -1386752349), self__.klass], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), self__.schema], null)], null), self__.__extmap));
};
schema.core.Record.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__19045) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.Record(self__.klass, self__.schema, G__19045, self__.__extmap, self__.__hash);
};
schema.core.Record.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.Record.prototype.schema$core$Schema$ = true;
schema.core.Record.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.collection.collection_spec.call(null, function() {
    var p = schema.spec.core.precondition.call(null, this$__$1, function(this$__$1) {
      return function(p1__19042_SHARP_) {
        return p1__19042_SHARP_ instanceof self__.klass;
      };
    }(this$__$1), function(this$__$1) {
      return function(p1__19043_SHARP_) {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__19043_SHARP_), self__.klass), new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null));
      };
    }(this$__$1));
    var temp__4655__auto__ = (new cljs.core.Keyword(null, "extra-validator-fn", "extra-validator-fn", 1562905865)).cljs$core$IFn$_invoke$arity$1(this$__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var evf = temp__4655__auto__;
      return cljs.core.some_fn.call(null, p, schema.spec.core.precondition.call(null, this$__$1, evf, function(evf, temp__4655__auto__, p, this$__$1) {
        return function(p1__19044_SHARP_) {
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__19044_SHARP_), new cljs.core.Symbol(null, "passes-extra-validation?", "passes-extra-validation?", -1964809231, null));
        };
      }(evf, temp__4655__auto__, p, this$__$1)));
    } else {
      return p;
    }
  }(), (new cljs.core.Keyword(null, "constructor", "constructor", -1953928811)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, this$__$1)), schema.core.map_elements.call(null, self__.schema), schema.core.map_error.call(null));
};
schema.core.Record.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, self__.schema)), cljs.core.symbol.call(null, cljs.core.pr_str.call(null, self__.klass))), new cljs.core.Symbol(null, "record", "record", 861424668, null));
};
schema.core.Record.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "klass", "klass", 253779178, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null)], null);
};
schema.core.Record.cljs$lang$type = true;
schema.core.Record.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/Record");
};
schema.core.Record.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/Record");
};
schema.core.__GT_Record = function schema$core$__GT_Record(klass, schema__$1) {
  return new schema.core.Record(klass, schema__$1, null, null, null);
};
schema.core.map__GT_Record = function schema$core$map__GT_Record(G__19047) {
  return new schema.core.Record((new cljs.core.Keyword(null, "klass", "klass", -1386752349)).cljs$core$IFn$_invoke$arity$1(G__19047), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(G__19047), null, cljs.core.dissoc.call(null, G__19047, new cljs.core.Keyword(null, "klass", "klass", -1386752349), new cljs.core.Keyword(null, "schema", "schema", -1582001791)), null);
};
schema.core.record_STAR_ = function schema$core$record_STAR_(klass, schema__$1, map_constructor) {
  if (cljs.core.map_QMARK_.call(null, schema__$1)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected map, got %s", schema.utils.type_of.call(null, schema__$1)));
  }
  return cljs.core.with_meta.call(null, new schema.core.Record(klass, schema__$1, null, null, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "constructor", "constructor", -1953928811), map_constructor], null));
};
schema.core.explain_input_schema = function schema$core$explain_input_schema(input_schema) {
  var vec__19056 = cljs.core.split_with.call(null, function(p1__19053_SHARP_) {
    return p1__19053_SHARP_ instanceof schema.core.One;
  }, input_schema);
  var required = cljs.core.nth.call(null, vec__19056, 0, null);
  var more = cljs.core.nth.call(null, vec__19056, 1, null);
  return cljs.core.concat.call(null, cljs.core.map.call(null, function(vec__19056, required, more) {
    return function(p1__19054_SHARP_) {
      return schema.core.explain.call(null, p1__19054_SHARP_.schema);
    };
  }(vec__19056, required, more), required), cljs.core.seq.call(null, more) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.core.mapv.call(null, schema.core.explain, more)], null) : null);
};
schema.core.FnSchema = function(output_schema, input_schemas, __meta, __extmap, __hash) {
  this.output_schema = output_schema;
  this.input_schemas = input_schemas;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
schema.core.FnSchema.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k19058, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__19060 = k19058 instanceof cljs.core.Keyword ? k19058.fqn : null;
  switch(G__19060) {
    case "output-schema":
      return self__.output_schema;
      break;
    case "input-schemas":
      return self__.input_schemas;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19058, else__6835__auto__);
  }
};
schema.core.FnSchema.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#schema.core.FnSchema{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IIterable$ = true;
schema.core.FnSchema.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__19057) {
  var self__ = this;
  var G__19057__$1 = this;
  return new cljs.core.RecordIter(0, G__19057__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)], null), cljs.core._iterator.call(null, self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
schema.core.FnSchema.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
schema.core.FnSchema.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
schema.core.FnSchema.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
schema.core.FnSchema.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
schema.core.FnSchema.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__19057) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__19061 = cljs.core.keyword_identical_QMARK_;
  var expr__19062 = k__6840__auto__;
  if (cljs.core.truth_(pred__19061.call(null, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), expr__19062))) {
    return new schema.core.FnSchema(G__19057, self__.input_schemas, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19061.call(null, new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), expr__19062))) {
      return new schema.core.FnSchema(self__.output_schema, G__19057, self__.__meta, self__.__extmap, null);
    } else {
      return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__19057), null);
    }
  }
};
schema.core.FnSchema.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), self__.output_schema], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805), self__.input_schemas], 
  null)], null), self__.__extmap));
};
schema.core.FnSchema.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__19057) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new schema.core.FnSchema(self__.output_schema, self__.input_schemas, G__19057, self__.__extmap, self__.__hash);
};
schema.core.FnSchema.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
schema.core.FnSchema.prototype.schema$core$Schema$ = true;
schema.core.FnSchema.prototype.schema$core$Schema$spec$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return schema.spec.leaf.leaf_spec.call(null, schema.spec.core.precondition.call(null, this$__$1, cljs.core.ifn_QMARK_, function(this$__$1) {
    return function(p1__17437__17438__auto__) {
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, p1__17437__17438__auto__), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null));
    };
  }(this$__$1)));
};
schema.core.FnSchema.prototype.schema$core$Schema$explain$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.input_schemas) > 1) {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e*", "\x3d\x3e*", 1909690043, null), schema.core.explain.call(null, self__.output_schema), cljs.core.map.call(null, schema.core.explain_input_schema, self__.input_schemas));
  } else {
    return cljs.core.list_STAR_.call(null, new cljs.core.Symbol(null, "\x3d\x3e", "\x3d\x3e", -813269641, null), schema.core.explain.call(null, self__.output_schema), schema.core.explain_input_schema.call(null, cljs.core.first.call(null, self__.input_schemas)));
  }
};
schema.core.FnSchema.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "output-schema", "output-schema", 1913035664, null), new cljs.core.Symbol(null, "input-schemas", "input-schemas", 658376722, null)], null);
};
schema.core.FnSchema.cljs$lang$type = true;
schema.core.FnSchema.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "schema.core/FnSchema");
};
schema.core.FnSchema.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "schema.core/FnSchema");
};
schema.core.__GT_FnSchema = function schema$core$__GT_FnSchema(output_schema, input_schemas) {
  return new schema.core.FnSchema(output_schema, input_schemas, null, null, null);
};
schema.core.map__GT_FnSchema = function schema$core$map__GT_FnSchema(G__19059) {
  return new schema.core.FnSchema((new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137)).cljs$core$IFn$_invoke$arity$1(G__19059), (new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)).cljs$core$IFn$_invoke$arity$1(G__19059), null, cljs.core.dissoc.call(null, G__19059, new cljs.core.Keyword(null, "output-schema", "output-schema", 272504137), new cljs.core.Keyword(null, "input-schemas", "input-schemas", -982154805)), null);
};
schema.core.arity = function schema$core$arity(input_schema) {
  if (cljs.core.seq.call(null, input_schema)) {
    if (cljs.core.last.call(null, input_schema) instanceof schema.core.One) {
      return cljs.core.count.call(null, input_schema);
    } else {
      return Number.MAX_VALUE;
    }
  } else {
    return 0;
  }
};
schema.core.make_fn_schema = function schema$core$make_fn_schema(output_schema, input_schemas) {
  if (cljs.core.seq.call(null, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Function must have at least one input schema"));
  }
  if (cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, input_schemas)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Each arity must be a vector."));
  }
  if (cljs.core.truth_(cljs.core.apply.call(null, cljs.core.distinct_QMARK_, cljs.core.map.call(null, schema.core.arity, input_schemas)))) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Arities must be distinct"));
  }
  return new schema.core.FnSchema(output_schema, cljs.core.sort_by.call(null, schema.core.arity, input_schemas), null, null, null);
};
schema.core.schema_with_name = function schema$core$schema_with_name(schema__$1, name) {
  return cljs.core.vary_meta.call(null, schema__$1, cljs.core.assoc, new cljs.core.Keyword(null, "name", "name", 1843675177), name);
};
schema.core.schema_name = function schema$core$schema_name(schema__$1) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
schema.core.schema_ns = function schema$core$schema_ns(schema__$1) {
  return (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, schema__$1));
};
schema.core.fn_validation_QMARK_ = function schema$core$fn_validation_QMARK_() {
  return schema.utils.use_fn_validation.get_cell();
};
schema.core.set_fn_validation_BANG_ = function schema$core$set_fn_validation_BANG_(on_QMARK_) {
  return schema.utils.use_fn_validation.set_cell(on_QMARK_);
};
schema.core.schematize_fn = function schema$core$schematize_fn(f, schema__$1) {
  return cljs.core.vary_meta.call(null, f, cljs.core.assoc, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema__$1);
};
schema.core.fn_schema = function schema$core$fn_schema(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Non-function %s", schema.utils.type_of.call(null, f)));
  }
  var or__6210__auto__ = schema.utils.class_schema.call(null, schema.utils.fn_schema_bearer.call(null, f));
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    var m__17158__auto__ = cljs.core.meta.call(null, f);
    var k__17159__auto__ = new cljs.core.Keyword(null, "schema", "schema", -1582001791);
    var temp__4655__auto__ = cljs.core.find.call(null, m__17158__auto__, k__17159__auto__);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var pair__17160__auto__ = temp__4655__auto__;
      return cljs.core.val.call(null, pair__17160__auto__);
    } else {
      throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k__17159__auto__, m__17158__auto__));
    }
  }
};
schema.core.set_max_value_length_BANG_ = function schema$core$set_max_value_length_BANG_(max_length) {
  return cljs.core.reset_BANG_.call(null, schema.utils.max_value_length, max_length);
};
goog.provide("plumbing.fnk.schema");
goog.require("cljs.core");
goog.require("schema.core");
goog.require("schema.utils");
plumbing.fnk.schema.Schema = cljs.core.with_meta.call(null, schema.core.__GT_Protocol.call(null, schema.core.Schema), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "proto-sym", "proto-sym", -886371734), new cljs.core.Symbol("s", "Schema", "s/Schema", -1305723789, null), new cljs.core.Keyword(null, "proto-pred", "proto-pred", 1885698716), function(p1__17961__17962__auto__) {
  if (!(p1__17961__17962__auto__ == null)) {
    if (false || p1__17961__17962__auto__.schema$core$Schema$) {
      return true;
    } else {
      if (!p1__17961__17962__auto__.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, p1__17961__17962__auto__);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, schema.core.Schema, p1__17961__17962__auto__);
  }
}], null));
plumbing.fnk.schema.InputSchema = cljs.core.PersistentArrayMap.fromArray([schema.core.cond_pre.call(null, schema.core.eq.call(null, schema.core.Keyword), schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.OutputSchema = plumbing.fnk.schema.Schema;
plumbing.fnk.schema.IOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.OutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.GraphInputSchema = cljs.core.PersistentArrayMap.fromArray([schema.core.cond_pre.call(null, schema.core.OptionalKey, schema.core.Keyword), plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.MapOutputSchema = cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, plumbing.fnk.schema.Schema], true, false);
plumbing.fnk.schema.GraphIOSchemata = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphInputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, new cljs.core.Symbol(null, "output", "output", 534662484, null))], null);
plumbing.fnk.schema.assert_distinct = function plumbing$fnk$schema$assert_distinct(things) {
  var repeated_things = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p1__19378_SHARP_) {
    return cljs.core.val.call(null, p1__19378_SHARP_) > 1;
  }, cljs.core.frequencies.call(null, things)));
  if (cljs.core.empty_QMARK_.call(null, repeated_things)) {
    return null;
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Got repeated items (expected distinct): %s", repeated_things));
  }
};
plumbing.fnk.schema.safe_get = function plumbing$fnk$schema$safe_get(m, k, key_path) {
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Expected a map at key-path %s, got type %s", key_path, schema.utils.type_of.call(null, m)));
  }
  var vec__19380 = cljs.core.find.call(null, m, k);
  var _ = cljs.core.nth.call(null, vec__19380, 0, null);
  var v = cljs.core.nth.call(null, vec__19380, 1, null);
  var p = vec__19380;
  if (cljs.core.truth_(p)) {
  } else {
    throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.keys.call(null, m)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "missing-key", "missing-key", 1259209562), new cljs.core.Keyword(null, "key", "key", -1516042587), k, new cljs.core.Keyword(null, "map", "map", 1371690461), m], null));
  }
  return v;
};
plumbing.fnk.schema.non_map_union = function plumbing$fnk$schema$non_map_union(s1, s2) {
  if (cljs.core._EQ_.call(null, s1, s2)) {
    return s1;
  } else {
    if (cljs.core._EQ_.call(null, s1, schema.core.Any)) {
      return s2;
    } else {
      if (cljs.core._EQ_.call(null, s2, schema.core.Any)) {
        return s1;
      } else {
        return s1;
      }
    }
  }
};
plumbing.fnk.schema.non_map_diff = function plumbing$fnk$schema$non_map_diff(s1, s2) {
  return null;
};
plumbing.fnk.schema.map_schema_QMARK_ = function plumbing$fnk$schema$map_schema_QMARK_(m) {
  return m instanceof cljs.core.PersistentArrayMap || m instanceof cljs.core.PersistentHashMap;
};
var ufv___19386 = schema.utils.use_fn_validation;
var output_schema19381_19387 = schema.core.maybe.call(null, schema.core.pair.call(null, schema.core.Keyword, "k", schema.core.Bool, "optional?"));
var input_schema19382_19388 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19383_19389 = schema.core.checker.call(null, input_schema19382_19388);
var output_checker19384_19390 = schema.core.checker.call(null, output_schema19381_19387);
plumbing.fnk.schema.unwrap_schema_form_key = function(ufv___19386, output_schema19381_19387, input_schema19382_19388, input_checker19383_19389, output_checker19384_19390) {
  return function plumbing$fnk$schema$unwrap_schema_form_key(G__19385) {
    var validate__17227__auto__ = ufv___19386.get_cell();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var args__17228__auto___19391 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19385], null);
      var temp__4657__auto___19392 = input_checker19383_19389.call(null, args__17228__auto___19391);
      if (cljs.core.truth_(temp__4657__auto___19392)) {
        var error__17229__auto___19393 = temp__4657__auto___19392;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "maybe", "s/maybe", 1326133944, null), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), 
        new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), "k", new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), "optional?")), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated schema map key form, unpack an explicit keyword\n   and optional? flag, or return nil for a non-explicit key"], null)), cljs.core.pr_str.call(null, error__17229__auto___19393)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", 
        "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19382_19388, new cljs.core.Keyword(null, "value", "value", 305978217), args__17228__auto___19391, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19393], null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var k = G__19385;
      while (true) {
        if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, k))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.explicit_schema_key.call(null, k), schema.core.required_key_QMARK_.call(null, k)], null);
        } else {
          if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.count.call(null, k), 2) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("schema.core", "optional-key", "schema.core/optional-key", -170069547, null))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second.call(null, k), false], null);
          } else {
            if (cljs.core.sequential_QMARK_.call(null, k) && !cljs.core.vector_QMARK_.call(null, k) && cljs.core._EQ_.call(null, cljs.core.first.call(null, k), new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null))) {
              return plumbing$fnk$schema$unwrap_schema_form_key.call(null, cljs.core.second.call(null, k));
            } else {
              return null;
            }
          }
        }
        break;
      }
    }();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var temp__4657__auto___19394 = output_checker19384_19390.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19394)) {
        var error__17229__auto___19395 = temp__4657__auto___19394;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "unwrap-schema-form-key", "unwrap-schema-form-key", -300088791, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), cljs.core.list(new cljs.core.Symbol("s", "maybe", "s/maybe", 1326133944, null), cljs.core.list(new cljs.core.Symbol("s", "pair", "s/pair", 1193014306, null), 
        new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), "k", new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null), "optional?")), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated schema map key form, unpack an explicit keyword\n   and optional? flag, or return nil for a non-explicit key"], null)), cljs.core.pr_str.call(null, error__17229__auto___19395)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", 
        "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19381_19387, new cljs.core.Keyword(null, "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19395], null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19386, output_schema19381_19387, input_schema19382_19388, input_checker19383_19389, output_checker19384_19390);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.unwrap_schema_form_key), schema.core.make_fn_schema.call(null, output_schema19381_19387, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19382_19388], null)));
var ufv___19401 = schema.utils.use_fn_validation;
var output_schema19396_19402 = cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false);
var input_schema19397_19403 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Any, cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null)], null)))], null);
var input_checker19398_19404 = schema.core.checker.call(null, input_schema19397_19403);
var output_checker19399_19405 = schema.core.checker.call(null, output_schema19396_19402);
plumbing.fnk.schema.explicit_schema_key_map = function(ufv___19401, output_schema19396_19402, input_schema19397_19403, input_checker19398_19404, output_checker19399_19405) {
  return function plumbing$fnk$schema$explicit_schema_key_map(G__19400) {
    var validate__17227__auto__ = ufv___19401.get_cell();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var args__17228__auto___19406 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19400], null);
      var temp__4657__auto___19407 = input_checker19398_19404.call(null, args__17228__auto___19406);
      if (cljs.core.truth_(temp__4657__auto___19407)) {
        var error__17229__auto___19408 = temp__4657__auto___19407;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 
        195910545, null)], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated map schema, return a map from bare keyword to true\n   (for required) or false (for optional)"], null)), cljs.core.pr_str.call(null, error__17229__auto___19408)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", 
        -1582001791), input_schema19397_19403, new cljs.core.Keyword(null, "value", "value", 305978217), args__17228__auto___19406, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19408], null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var s = G__19400;
      while (true) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, plumbing.fnk.schema.unwrap_schema_form_key, cljs.core.keys.call(null, s)));
        break;
      }
    }();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var temp__4657__auto___19409 = output_checker19399_19405.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19409)) {
        var error__17229__auto___19410 = temp__4657__auto___19409;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "explicit-schema-key-map", "explicit-schema-key-map", 1668953963, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 
        195910545, null)], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given a possibly-unevaluated map schema, return a map from bare keyword to true\n   (for required) or false (for optional)"], null)), cljs.core.pr_str.call(null, error__17229__auto___19410)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", 
        -1582001791), output_schema19396_19402, new cljs.core.Keyword(null, "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19410], null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19401, output_schema19396_19402, input_schema19397_19403, input_checker19398_19404, output_checker19399_19405);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.explicit_schema_key_map), schema.core.make_fn_schema.call(null, output_schema19396_19402, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19397_19403], null)));
var ufv___19416 = schema.utils.use_fn_validation;
var output_schema19411_19417 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "required", "required", -846788763, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), new cljs.core.Symbol(null, "optional", 
"optional", -600484260, null))], null);
var input_schema19412_19418 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, cljs.core.PersistentArrayMap.fromArray([schema.core.Keyword, schema.core.Bool], true, false), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", 
-850066400, null), new cljs.core.Symbol("s", "Bool", "s/Bool", 195910545, null)], null)], null)))], null);
var input_checker19413_19419 = schema.core.checker.call(null, input_schema19412_19418);
var output_checker19414_19420 = schema.core.checker.call(null, output_schema19411_19417);
plumbing.fnk.schema.split_schema_keys = function(ufv___19416, output_schema19411_19417, input_schema19412_19418, input_checker19413_19419, output_checker19414_19420) {
  return function plumbing$fnk$schema$split_schema_keys(G__19415) {
    var validate__17227__auto__ = ufv___19416.get_cell();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var args__17228__auto___19421 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19415], null);
      var temp__4657__auto___19422 = input_checker19413_19419.call(null, args__17228__auto___19421);
      if (cljs.core.truth_(temp__4657__auto___19422)) {
        var error__17229__auto___19423 = temp__4657__auto___19422;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "required", "required", -846788763, null))), cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, 
        null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "optional", "optional", -600484260, null)))], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given output of explicit-schema-key-map, split into seq [req opt]."], null)), cljs.core.pr_str.call(null, error__17229__auto___19423)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", 
        "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19412_19418, new cljs.core.Keyword(null, "value", "value", 305978217), args__17228__auto___19421, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19423], null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var s = G__19415;
      while (true) {
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.mapv, cljs.core.key), cljs.core.juxt.call(null, cljs.core.filter, cljs.core.remove).call(null, cljs.core.val, s));
        break;
      }
    }();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var temp__4657__auto___19424 = output_checker19414_19420.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19424)) {
        var error__17229__auto___19425 = temp__4657__auto___19424;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema-keys", "split-schema-keys", 933671594, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "required", "required", -846788763, null))), cljs.core.list(new cljs.core.Symbol("s", "one", "s/one", -1719427222, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, 
        null)], null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "optional", "optional", -600484260, null)))], null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given output of explicit-schema-key-map, split into seq [req opt]."], null)), cljs.core.pr_str.call(null, error__17229__auto___19425)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", 
        "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19411_19417, new cljs.core.Keyword(null, "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19425], null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19416, output_schema19411_19417, input_schema19412_19418, input_checker19413_19419, output_checker19414_19420);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema_keys), schema.core.make_fn_schema.call(null, output_schema19411_19417, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19412_19418], null)));
plumbing.fnk.schema.merge_on_with = function plumbing$fnk$schema$merge_on_with(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___19433 = arguments.length;
  var i__7280__auto___19434 = 0;
  while (true) {
    if (i__7280__auto___19434 < len__7279__auto___19433) {
      args__7286__auto__.push(arguments[i__7280__auto___19434]);
      var G__19435 = i__7280__auto___19434 + 1;
      i__7280__auto___19434 = G__19435;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 3 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(3), 0, null) : null;
  return plumbing.fnk.schema.merge_on_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7287__auto__);
};
plumbing.fnk.schema.merge_on_with.cljs$core$IFn$_invoke$arity$variadic = function(key_project, key_combine, val_combine, maps) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.vals.call(null, cljs.core.reduce.call(null, function(m, p__19430) {
    var vec__19431 = p__19430;
    var k = cljs.core.nth.call(null, vec__19431, 0, null);
    var v = cljs.core.nth.call(null, vec__19431, 1, null);
    var pk = key_project.call(null, k);
    var temp__4655__auto__ = cljs.core.get.call(null, m, pk);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var vec__19432 = temp__4655__auto__;
      var ok = cljs.core.nth.call(null, vec__19432, 0, null);
      var ov = cljs.core.nth.call(null, vec__19432, 1, null);
      return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_combine.call(null, ok, k), val_combine.call(null, ov, v)], null));
    } else {
      return cljs.core.assoc.call(null, m, pk, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.apply.call(null, cljs.core.concat, maps))));
};
plumbing.fnk.schema.merge_on_with.cljs$lang$maxFixedArity = 3;
plumbing.fnk.schema.merge_on_with.cljs$lang$applyTo = function(seq19426) {
  var G__19427 = cljs.core.first.call(null, seq19426);
  var seq19426__$1 = cljs.core.next.call(null, seq19426);
  var G__19428 = cljs.core.first.call(null, seq19426__$1);
  var seq19426__$2 = cljs.core.next.call(null, seq19426__$1);
  var G__19429 = cljs.core.first.call(null, seq19426__$2);
  var seq19426__$3 = cljs.core.next.call(null, seq19426__$2);
  return plumbing.fnk.schema.merge_on_with.cljs$core$IFn$_invoke$arity$variadic(G__19427, G__19428, G__19429, seq19426__$3);
};
var ufv___19443 = schema.utils.use_fn_validation;
var output_schema19437_19444 = plumbing.fnk.schema.InputSchema;
var input_schema19438_19445 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, cljs.core.with_meta(new cljs.core.Symbol(null, "i1", "i1", -572470430, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null))), schema.core.one.call(null, plumbing.fnk.schema.InputSchema, 
cljs.core.with_meta(new cljs.core.Symbol(null, "i2", "i2", 850408895, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null)))], null);
var input_checker19439_19446 = schema.core.checker.call(null, input_schema19438_19445);
var output_checker19440_19447 = schema.core.checker.call(null, output_schema19437_19444);
plumbing.fnk.schema.union_input_schemata = function(ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447) {
  return function plumbing$fnk$schema$union_input_schemata(G__19441, G__19442) {
    var validate__17227__auto__ = ufv___19443.get_cell();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var args__17228__auto___19448 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19441, G__19442], null);
      var temp__4657__auto___19449 = input_checker19439_19446.call(null, args__17228__auto___19448);
      if (cljs.core.truth_(temp__4657__auto___19449)) {
        var error__17229__auto___19450 = temp__4657__auto___19449;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a minimal input schema schema that entails satisfaction of both s1 and s2"], 
        null)), cljs.core.pr_str.call(null, error__17229__auto___19450)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19438_19445, new cljs.core.Keyword(null, "value", "value", 305978217), args__17228__auto___19448, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19450], 
        null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var i1 = G__19441;
      var i2 = G__19442;
      while (true) {
        return plumbing.fnk.schema.merge_on_with.call(null, function(validate__17227__auto__, ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447) {
          return function(p1__19436_SHARP_) {
            if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, p1__19436_SHARP_))) {
              return schema.core.explicit_schema_key.call(null, p1__19436_SHARP_);
            } else {
              return new cljs.core.Keyword(null, "extra", "extra", 1612569067);
            }
          };
        }(validate__17227__auto__, ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447), function(validate__17227__auto__, ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447) {
          return function(k1, k2) {
            if (cljs.core.truth_(schema.core.required_key_QMARK_.call(null, k1))) {
              return k1;
            } else {
              if (cljs.core.truth_(schema.core.required_key_QMARK_.call(null, k2))) {
                return k2;
              } else {
                if (cljs.core.truth_(schema.core.optional_key_QMARK_.call(null, k1))) {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                  } else {
                    throw new Error("Assert failed: (\x3d k1 k2)");
                  }
                  return k1;
                } else {
                  if (cljs.core._EQ_.call(null, k1, k2)) {
                    return k1;
                  } else {
                    throw new Error(schema.utils.format_STAR_.call(null, "Only one extra schema allowed"));
                  }
                }
              }
            }
          };
        }(validate__17227__auto__, ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447), function(validate__17227__auto__, ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447) {
          return function(s1, s2) {
            if (cljs.core.truth_(function() {
              var and__6198__auto__ = plumbing.fnk.schema.map_schema_QMARK_.call(null, s1);
              if (cljs.core.truth_(and__6198__auto__)) {
                return plumbing.fnk.schema.map_schema_QMARK_.call(null, s2);
              } else {
                return and__6198__auto__;
              }
            }())) {
              return plumbing$fnk$schema$union_input_schemata.call(null, s1, s2);
            } else {
              return plumbing.fnk.schema.non_map_union.call(null, s1, s2);
            }
          };
        }(validate__17227__auto__, ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447), i1, i2);
        break;
      }
    }();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var temp__4657__auto___19451 = output_checker19440_19447.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19451)) {
        var error__17229__auto___19452 = temp__4657__auto___19451;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "union-input-schemata", "union-input-schemata", -1338811970, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a minimal input schema schema that entails satisfaction of both s1 and s2"], 
        null)), cljs.core.pr_str.call(null, error__17229__auto___19452)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19437_19444, new cljs.core.Keyword(null, "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19452], 
        null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19443, output_schema19437_19444, input_schema19438_19445, input_checker19439_19446, output_checker19440_19447);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.union_input_schemata), schema.core.make_fn_schema.call(null, output_schema19437_19444, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19438_19445], null)));
var ufv___19458 = schema.utils.use_fn_validation;
var output_schema19453_19459 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null);
var input_schema19454_19460 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, cljs.core.with_meta(new cljs.core.Symbol(null, "input-schema", "input-schema", 1373647181, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null)))], null);
var input_checker19455_19461 = schema.core.checker.call(null, input_schema19454_19460);
var output_checker19456_19462 = schema.core.checker.call(null, output_schema19453_19459);
plumbing.fnk.schema.required_toplevel_keys = function(ufv___19458, output_schema19453_19459, input_schema19454_19460, input_checker19455_19461, output_checker19456_19462) {
  return function plumbing$fnk$schema$required_toplevel_keys(G__19457) {
    var validate__17227__auto__ = ufv___19458.get_cell();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var args__17228__auto___19463 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19457], null);
      var temp__4657__auto___19464 = input_checker19455_19461.call(null, args__17228__auto___19463);
      if (cljs.core.truth_(temp__4657__auto___19464)) {
        var error__17229__auto___19465 = temp__4657__auto___19464;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), 
        new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Which top-level keys are required (i.e., non-false) by this input schema."], null)), cljs.core.pr_str.call(null, error__17229__auto___19465)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19454_19460, new cljs.core.Keyword(null, 
        "value", "value", 305978217), args__17228__auto___19463, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19465], null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var input_schema = G__19457;
      while (true) {
        return cljs.core.keep.call(null, function(validate__17227__auto__, ufv___19458, output_schema19453_19459, input_schema19454_19460, input_checker19455_19461, output_checker19456_19462) {
          return function(k) {
            if (cljs.core.truth_(schema.core.required_key_QMARK_.call(null, k))) {
              return schema.core.explicit_schema_key.call(null, k);
            } else {
              return null;
            }
          };
        }(validate__17227__auto__, ufv___19458, output_schema19453_19459, input_schema19454_19460, input_checker19455_19461, output_checker19456_19462), cljs.core.keys.call(null, input_schema));
        break;
      }
    }();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var temp__4657__auto___19466 = output_checker19456_19462.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19466)) {
        var error__17229__auto___19467 = temp__4657__auto___19466;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "required-toplevel-keys", "required-toplevel-keys", 1052167617, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null), 
        new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Which top-level keys are required (i.e., non-false) by this input schema."], null)), cljs.core.pr_str.call(null, error__17229__auto___19467)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19453_19459, new cljs.core.Keyword(null, 
        "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19467], null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19458, output_schema19453_19459, input_schema19454_19460, input_checker19455_19461, output_checker19456_19462);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.required_toplevel_keys), schema.core.make_fn_schema.call(null, output_schema19453_19459, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19454_19460], null)));
plumbing.fnk.schema.guess_expr_output_schema = function plumbing$fnk$schema$guess_expr_output_schema(expr) {
  if (cljs.core.map_QMARK_.call(null, expr) && cljs.core.every_QMARK_.call(null, cljs.core.keyword_QMARK_, cljs.core.keys.call(null, expr))) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
      var iter__6990__auto__ = function plumbing$fnk$schema$guess_expr_output_schema_$_iter__19476(s__19477) {
        return new cljs.core.LazySeq(null, function() {
          var s__19477__$1 = s__19477;
          while (true) {
            var temp__4657__auto__ = cljs.core.seq.call(null, s__19477__$1);
            if (temp__4657__auto__) {
              var s__19477__$2 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__19477__$2)) {
                var c__6988__auto__ = cljs.core.chunk_first.call(null, s__19477__$2);
                var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                var b__19479 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                if (function() {
                  var i__19478 = 0;
                  while (true) {
                    if (i__19478 < size__6989__auto__) {
                      var vec__19482 = cljs.core._nth.call(null, c__6988__auto__, i__19478);
                      var k = cljs.core.nth.call(null, vec__19482, 0, null);
                      var v = cljs.core.nth.call(null, vec__19482, 1, null);
                      cljs.core.chunk_append.call(null, b__19479, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, plumbing$fnk$schema$guess_expr_output_schema.call(null, v)], null));
                      var G__19484 = i__19478 + 1;
                      i__19478 = G__19484;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19479), plumbing$fnk$schema$guess_expr_output_schema_$_iter__19476.call(null, cljs.core.chunk_rest.call(null, s__19477__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19479), null);
                }
              } else {
                var vec__19483 = cljs.core.first.call(null, s__19477__$2);
                var k = cljs.core.nth.call(null, vec__19483, 0, null);
                var v = cljs.core.nth.call(null, vec__19483, 1, null);
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, plumbing$fnk$schema$guess_expr_output_schema.call(null, v)], null), plumbing$fnk$schema$guess_expr_output_schema_$_iter__19476.call(null, cljs.core.rest.call(null, s__19477__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__6990__auto__.call(null, expr);
    }());
  } else {
    return new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null);
  }
};
plumbing.fnk.schema.schema_diff = function plumbing$fnk$schema$schema_diff(input_schema, output_schema) {
  if (cljs.core.not.call(null, plumbing.fnk.schema.map_schema_QMARK_.call(null, input_schema))) {
    return plumbing.fnk.schema.non_map_diff.call(null, input_schema, output_schema);
  } else {
    if (cljs.core.not.call(null, plumbing.fnk.schema.map_schema_QMARK_.call(null, output_schema))) {
      return schema.utils.error.call(null, schema.utils.make_ValidationError.call(null, input_schema, output_schema, new cljs.core.Delay(function() {
        return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, schema.core.explain.call(null, output_schema)), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null));
      }, null), null));
    } else {
      return cljs.core.not_empty.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__6990__auto__ = function plumbing$fnk$schema$schema_diff_$_iter__19493(s__19494) {
          return new cljs.core.LazySeq(null, function() {
            var s__19494__$1 = s__19494;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__19494__$1);
              if (temp__4657__auto__) {
                var s__19494__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__19494__$2)) {
                  var c__6988__auto__ = cljs.core.chunk_first.call(null, s__19494__$2);
                  var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                  var b__19496 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                  if (function() {
                    var i__19495 = 0;
                    while (true) {
                      if (i__19495 < size__6989__auto__) {
                        var vec__19499 = cljs.core._nth.call(null, c__6988__auto__, i__19495);
                        var k = cljs.core.nth.call(null, vec__19499, 0, null);
                        var v = cljs.core.nth.call(null, vec__19499, 1, null);
                        if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, k))) {
                          var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                          var raw_k = schema.core.explicit_schema_key.call(null, k);
                          var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                          if (cljs.core.truth_(function() {
                            var or__6210__auto__ = required_QMARK_;
                            if (cljs.core.truth_(or__6210__auto__)) {
                              return or__6210__auto__;
                            } else {
                              return present_QMARK_;
                            }
                          }())) {
                            var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : plumbing$fnk$schema$schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                            if (cljs.core.truth_(fail)) {
                              cljs.core.chunk_append.call(null, b__19496, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null));
                              var G__19501 = i__19495 + 1;
                              i__19495 = G__19501;
                              continue;
                            } else {
                              var G__19502 = i__19495 + 1;
                              i__19495 = G__19502;
                              continue;
                            }
                          } else {
                            var G__19503 = i__19495 + 1;
                            i__19495 = G__19503;
                            continue;
                          }
                        } else {
                          var G__19504 = i__19495 + 1;
                          i__19495 = G__19504;
                          continue;
                        }
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19496), plumbing$fnk$schema$schema_diff_$_iter__19493.call(null, cljs.core.chunk_rest.call(null, s__19494__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19496), null);
                  }
                } else {
                  var vec__19500 = cljs.core.first.call(null, s__19494__$2);
                  var k = cljs.core.nth.call(null, vec__19500, 0, null);
                  var v = cljs.core.nth.call(null, vec__19500, 1, null);
                  if (cljs.core.truth_(schema.core.specific_key_QMARK_.call(null, k))) {
                    var required_QMARK_ = schema.core.required_key_QMARK_.call(null, k);
                    var raw_k = schema.core.explicit_schema_key.call(null, k);
                    var present_QMARK_ = cljs.core.contains_QMARK_.call(null, output_schema, raw_k);
                    if (cljs.core.truth_(function() {
                      var or__6210__auto__ = required_QMARK_;
                      if (cljs.core.truth_(or__6210__auto__)) {
                        return or__6210__auto__;
                      } else {
                        return present_QMARK_;
                      }
                    }())) {
                      var fail = !present_QMARK_ ? new cljs.core.Symbol(null, "missing-required-key", "missing-required-key", 709961446, null) : plumbing$fnk$schema$schema_diff.call(null, v, cljs.core.get.call(null, output_schema, raw_k));
                      if (cljs.core.truth_(fail)) {
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, fail], null), plumbing$fnk$schema$schema_diff_$_iter__19493.call(null, cljs.core.rest.call(null, s__19494__$2)));
                      } else {
                        var G__19505 = cljs.core.rest.call(null, s__19494__$2);
                        s__19494__$1 = G__19505;
                        continue;
                      }
                    } else {
                      var G__19506 = cljs.core.rest.call(null, s__19494__$2);
                      s__19494__$1 = G__19506;
                      continue;
                    }
                  } else {
                    var G__19507 = cljs.core.rest.call(null, s__19494__$2);
                    s__19494__$1 = G__19507;
                    continue;
                  }
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__6990__auto__.call(null, input_schema);
      }()));
    }
  }
};
plumbing.fnk.schema.assert_satisfies_schema = function plumbing$fnk$schema$assert_satisfies_schema(input_schema, output_schema) {
  var fails = plumbing.fnk.schema.schema_diff.call(null, input_schema, output_schema);
  if (cljs.core.truth_(fails)) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(fails)].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "does-not-satisfy-schema", "does-not-satisfy-schema", -1543152824), new cljs.core.Keyword(null, "failures", "failures", -912916356), fails], null));
  } else {
    return null;
  }
};
var ufv___19530 = schema.utils.use_fn_validation;
var output_schema19508_19531 = schema.core.Any;
var input_schema19509_19532 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, new cljs.core.Symbol(null, "input", "input", -2097503808, null)), schema.core.one.call(null, plumbing.fnk.schema.MapOutputSchema, 
new cljs.core.Symbol(null, "output", "output", 534662484, null))], null), new cljs.core.Symbol(null, "arg1", "arg1", -1702536411, null))], null);
var input_checker19510_19533 = schema.core.checker.call(null, input_schema19509_19532);
var output_checker19511_19534 = schema.core.checker.call(null, output_schema19508_19531);
plumbing.fnk.schema.compose_schemata = function(ufv___19530, output_schema19508_19531, input_schema19509_19532, input_checker19510_19533, output_checker19511_19534) {
  return function plumbing$fnk$schema$compose_schemata(G__19512, G__19513) {
    var validate__17227__auto__ = true;
    if (validate__17227__auto__) {
      var args__17228__auto___19535 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19512, G__19513], null);
      var temp__4657__auto___19536 = input_checker19510_19533.call(null, args__17228__auto___19535);
      if (cljs.core.truth_(temp__4657__auto___19536)) {
        var error__17229__auto___19537 = temp__4657__auto___19536;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "always-validate", "always-validate", 1031872127), true, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2,\n   return a pair of input and output schemata for #(f2 (merge % (f1 %))).\n   f1's output schema must not contain any optional keys."], null)), cljs.core.pr_str.call(null, error__17229__auto___19537)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), input_schema19509_19532, new cljs.core.Keyword(null, "value", "value", 305978217), args__17228__auto___19535, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19537], null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var G__19524 = G__19512;
      var vec__19526 = G__19524;
      var i2 = cljs.core.nth.call(null, vec__19526, 0, null);
      var o2 = cljs.core.nth.call(null, vec__19526, 1, null);
      var G__19525 = G__19513;
      var vec__19527 = G__19525;
      var i1 = cljs.core.nth.call(null, vec__19527, 0, null);
      var o1 = cljs.core.nth.call(null, vec__19527, 1, null);
      var G__19524__$1 = G__19524;
      var G__19525__$1 = G__19525;
      while (true) {
        var vec__19528 = G__19524__$1;
        var i2__$1 = cljs.core.nth.call(null, vec__19528, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__19528, 1, null);
        var vec__19529 = G__19525__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__19529, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__19529, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, cljs.core.select_keys.call(null, i2__$1, cljs.core.keys.call(null, o1__$1)), o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, cljs.core.apply.call(null, cljs.core.dissoc, i2__$1, cljs.core.concat.call(null, cljs.core.keys.call(null, o1__$1), cljs.core.map.call(null, schema.core.optional_key, cljs.core.keys.call(null, o1__$1)))), i1__$1), o2__$1], null);
        break;
      }
    }();
    if (validate__17227__auto__) {
      var temp__4657__auto___19538 = output_checker19511_19534.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19538)) {
        var error__17229__auto___19539 = temp__4657__auto___19538;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "compose-schemata", "compose-schemata", 918607729, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "always-validate", "always-validate", 1031872127), true, new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, 
        "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2,\n   return a pair of input and output schemata for #(f2 (merge % (f1 %))).\n   f1's output schema must not contain any optional keys."], null)), cljs.core.pr_str.call(null, error__17229__auto___19539)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, 
        "schema", "schema", -1582001791), output_schema19508_19531, new cljs.core.Keyword(null, "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19539], null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19530, output_schema19508_19531, input_schema19509_19532, input_checker19510_19533, output_checker19511_19534);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.compose_schemata), schema.core.make_fn_schema.call(null, output_schema19508_19531, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19509_19532], null)));
plumbing.fnk.schema.schema_key = function plumbing$fnk$schema$schema_key(m, k) {
  if (cljs.core.contains_QMARK_.call(null, m, k)) {
    return k;
  } else {
    if (cljs.core.contains_QMARK_.call(null, m, schema.core.optional_key.call(null, k))) {
      return schema.core.optional_key.call(null, k);
    } else {
      return null;
    }
  }
};
plumbing.fnk.schema.possibly_contains_QMARK_ = function plumbing$fnk$schema$possibly_contains_QMARK_(m, k) {
  return cljs.core.boolean$.call(null, plumbing.fnk.schema.schema_key.call(null, m, k));
};
var ufv___19618 = schema.utils.use_fn_validation;
var output_schema19540_19619 = schema.core.Any;
var input_schema19541_19620 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.InputSchema, cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "InputSchema", "InputSchema", -824370558, null)], null))), schema.core.one.call(null, new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.Keyword], null), cljs.core.with_meta(new cljs.core.Symbol(null, "ks", "ks", -754231827, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("s", "Keyword", "s/Keyword", -850066400, null)], null)], null)))], null);
var input_checker19542_19621 = schema.core.checker.call(null, input_schema19541_19620);
var output_checker19543_19622 = schema.core.checker.call(null, output_schema19540_19619);
plumbing.fnk.schema.split_schema = function(ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622) {
  return function plumbing$fnk$schema$split_schema(G__19544, G__19545) {
    var validate__17227__auto__ = ufv___19618.get_cell();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var args__17228__auto___19623 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19544, G__19545], null);
      var temp__4657__auto___19624 = input_checker19542_19621.call(null, args__17228__auto___19623);
      if (cljs.core.truth_(temp__4657__auto___19624)) {
        var error__17229__auto___19625 = temp__4657__auto___19624;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Return a pair [ks-part non-ks-part], with any extra schema removed."], 
        null)), cljs.core.pr_str.call(null, error__17229__auto___19625)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19541_19620, new cljs.core.Keyword(null, "value", "value", 305978217), args__17228__auto___19623, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19625], 
        null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var s = G__19544;
      var ks = G__19545;
      while (true) {
        var ks__$1 = cljs.core.set.call(null, ks);
        var iter__6990__auto__ = function(ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622) {
          return function plumbing$fnk$schema$split_schema_$_iter__19582(s__19583) {
            return new cljs.core.LazySeq(null, function(ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622) {
              return function() {
                var s__19583__$1 = s__19583;
                while (true) {
                  var temp__4657__auto__ = cljs.core.seq.call(null, s__19583__$1);
                  if (temp__4657__auto__) {
                    var s__19583__$2 = temp__4657__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__19583__$2)) {
                      var c__6988__auto__ = cljs.core.chunk_first.call(null, s__19583__$2);
                      var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                      var b__19585 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                      if (function() {
                        var i__19584 = 0;
                        while (true) {
                          if (i__19584 < size__6989__auto__) {
                            var in_QMARK_ = cljs.core._nth.call(null, c__6988__auto__, i__19584);
                            cljs.core.chunk_append.call(null, b__19585, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                              var iter__6990__auto__ = function(i__19584, in_QMARK_, c__6988__auto__, size__6989__auto__, b__19585, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622) {
                                return function plumbing$fnk$schema$split_schema_$_iter__19582_$_iter__19602(s__19603) {
                                  return new cljs.core.LazySeq(null, function(i__19584, in_QMARK_, c__6988__auto__, size__6989__auto__, b__19585, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622) {
                                    return function() {
                                      var s__19603__$1 = s__19603;
                                      while (true) {
                                        var temp__4657__auto____$1 = cljs.core.seq.call(null, s__19603__$1);
                                        if (temp__4657__auto____$1) {
                                          var s__19603__$2 = temp__4657__auto____$1;
                                          if (cljs.core.chunked_seq_QMARK_.call(null, s__19603__$2)) {
                                            var c__6988__auto____$1 = cljs.core.chunk_first.call(null, s__19603__$2);
                                            var size__6989__auto____$1 = cljs.core.count.call(null, c__6988__auto____$1);
                                            var b__19605 = cljs.core.chunk_buffer.call(null, size__6989__auto____$1);
                                            if (function() {
                                              var i__19604 = 0;
                                              while (true) {
                                                if (i__19604 < size__6989__auto____$1) {
                                                  var vec__19608 = cljs.core._nth.call(null, c__6988__auto____$1, i__19604);
                                                  var k = cljs.core.nth.call(null, vec__19608, 0, null);
                                                  var v = cljs.core.nth.call(null, vec__19608, 1, null);
                                                  if (cljs.core.truth_(function() {
                                                    var and__6198__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                                    if (cljs.core.truth_(and__6198__auto__)) {
                                                      return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                                    } else {
                                                      return and__6198__auto__;
                                                    }
                                                  }())) {
                                                    cljs.core.chunk_append.call(null, b__19605, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                                    var G__19626 = i__19604 + 1;
                                                    i__19604 = G__19626;
                                                    continue;
                                                  } else {
                                                    var G__19627 = i__19604 + 1;
                                                    i__19604 = G__19627;
                                                    continue;
                                                  }
                                                } else {
                                                  return true;
                                                }
                                                break;
                                              }
                                            }()) {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19605), plumbing$fnk$schema$split_schema_$_iter__19582_$_iter__19602.call(null, cljs.core.chunk_rest.call(null, s__19603__$2)));
                                            } else {
                                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19605), null);
                                            }
                                          } else {
                                            var vec__19609 = cljs.core.first.call(null, s__19603__$2);
                                            var k = cljs.core.nth.call(null, vec__19609, 0, null);
                                            var v = cljs.core.nth.call(null, vec__19609, 1, null);
                                            if (cljs.core.truth_(function() {
                                              var and__6198__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                              if (cljs.core.truth_(and__6198__auto__)) {
                                                return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                              } else {
                                                return and__6198__auto__;
                                              }
                                            }())) {
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), plumbing$fnk$schema$split_schema_$_iter__19582_$_iter__19602.call(null, cljs.core.rest.call(null, s__19603__$2)));
                                            } else {
                                              var G__19628 = cljs.core.rest.call(null, s__19603__$2);
                                              s__19603__$1 = G__19628;
                                              continue;
                                            }
                                          }
                                        } else {
                                          return null;
                                        }
                                        break;
                                      }
                                    };
                                  }(i__19584, in_QMARK_, c__6988__auto__, size__6989__auto__, b__19585, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622), null, null);
                                };
                              }(i__19584, in_QMARK_, c__6988__auto__, size__6989__auto__, b__19585, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622);
                              return iter__6990__auto__.call(null, s);
                            }()));
                            var G__19629 = i__19584 + 1;
                            i__19584 = G__19629;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19585), plumbing$fnk$schema$split_schema_$_iter__19582.call(null, cljs.core.chunk_rest.call(null, s__19583__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19585), null);
                      }
                    } else {
                      var in_QMARK_ = cljs.core.first.call(null, s__19583__$2);
                      return cljs.core.cons.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__6990__auto__ = function(in_QMARK_, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622) {
                          return function plumbing$fnk$schema$split_schema_$_iter__19582_$_iter__19610(s__19611) {
                            return new cljs.core.LazySeq(null, function(in_QMARK_, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622) {
                              return function() {
                                var s__19611__$1 = s__19611;
                                while (true) {
                                  var temp__4657__auto____$1 = cljs.core.seq.call(null, s__19611__$1);
                                  if (temp__4657__auto____$1) {
                                    var s__19611__$2 = temp__4657__auto____$1;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__19611__$2)) {
                                      var c__6988__auto__ = cljs.core.chunk_first.call(null, s__19611__$2);
                                      var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                                      var b__19613 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                                      if (function() {
                                        var i__19612 = 0;
                                        while (true) {
                                          if (i__19612 < size__6989__auto__) {
                                            var vec__19616 = cljs.core._nth.call(null, c__6988__auto__, i__19612);
                                            var k = cljs.core.nth.call(null, vec__19616, 0, null);
                                            var v = cljs.core.nth.call(null, vec__19616, 1, null);
                                            if (cljs.core.truth_(function() {
                                              var and__6198__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                              if (cljs.core.truth_(and__6198__auto__)) {
                                                return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                              } else {
                                                return and__6198__auto__;
                                              }
                                            }())) {
                                              cljs.core.chunk_append.call(null, b__19613, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                                              var G__19630 = i__19612 + 1;
                                              i__19612 = G__19630;
                                              continue;
                                            } else {
                                              var G__19631 = i__19612 + 1;
                                              i__19612 = G__19631;
                                              continue;
                                            }
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19613), plumbing$fnk$schema$split_schema_$_iter__19582_$_iter__19610.call(null, cljs.core.chunk_rest.call(null, s__19611__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19613), null);
                                      }
                                    } else {
                                      var vec__19617 = cljs.core.first.call(null, s__19611__$2);
                                      var k = cljs.core.nth.call(null, vec__19617, 0, null);
                                      var v = cljs.core.nth.call(null, vec__19617, 1, null);
                                      if (cljs.core.truth_(function() {
                                        var and__6198__auto__ = schema.core.specific_key_QMARK_.call(null, k);
                                        if (cljs.core.truth_(and__6198__auto__)) {
                                          return cljs.core._EQ_.call(null, in_QMARK_, cljs.core.contains_QMARK_.call(null, ks__$1, schema.core.explicit_schema_key.call(null, k)));
                                        } else {
                                          return and__6198__auto__;
                                        }
                                      }())) {
                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), plumbing$fnk$schema$split_schema_$_iter__19582_$_iter__19610.call(null, cljs.core.rest.call(null, s__19611__$2)));
                                      } else {
                                        var G__19632 = cljs.core.rest.call(null, s__19611__$2);
                                        s__19611__$1 = G__19632;
                                        continue;
                                      }
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(in_QMARK_, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622), null, null);
                          };
                        }(in_QMARK_, s__19583__$2, temp__4657__auto__, ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622);
                        return iter__6990__auto__.call(null, s);
                      }()), plumbing$fnk$schema$split_schema_$_iter__19582.call(null, cljs.core.rest.call(null, s__19583__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622), null, null);
          };
        }(ks__$1, validate__17227__auto__, ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622);
        return iter__6990__auto__.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, false], null));
        break;
      }
    }();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var temp__4657__auto___19633 = output_checker19543_19622.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19633)) {
        var error__17229__auto___19634 = temp__4657__auto___19633;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "split-schema", "split-schema", 1859174771, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol("schema.core", "Any", "schema.core/Any", -1891898271, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Return a pair [ks-part non-ks-part], with any extra schema removed."], 
        null)), cljs.core.pr_str.call(null, error__17229__auto___19634)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19540_19619, new cljs.core.Keyword(null, "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19634], 
        null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19618, output_schema19540_19619, input_schema19541_19620, input_checker19542_19621, output_checker19543_19622);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.split_schema), schema.core.make_fn_schema.call(null, output_schema19540_19619, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19541_19620], null)));
var ufv___19665 = schema.utils.use_fn_validation;
var output_schema19635_19666 = plumbing.fnk.schema.GraphIOSchemata;
var input_schema19636_19667 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, plumbing.fnk.schema.GraphIOSchemata, new cljs.core.Symbol(null, "arg0", "arg0", -1024593414, null)), schema.core.one.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema.core.one.call(null, schema.core.Keyword, "key"), schema.core.one.call(null, plumbing.fnk.schema.IOSchemata, "inner-schemas")], null), new cljs.core.Symbol(null, 
"arg1", "arg1", -1702536411, null))], null);
var input_checker19637_19668 = schema.core.checker.call(null, input_schema19636_19667);
var output_checker19638_19669 = schema.core.checker.call(null, output_schema19635_19666);
plumbing.fnk.schema.sequence_schemata = function(ufv___19665, output_schema19635_19666, input_schema19636_19667, input_checker19637_19668, output_checker19638_19669) {
  return function plumbing$fnk$schema$sequence_schemata(G__19639, G__19640) {
    var validate__17227__auto__ = ufv___19665.get_cell();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var args__17228__auto___19670 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [G__19639, G__19640], null);
      var temp__4657__auto___19671 = input_checker19637_19668.call(null, args__17228__auto___19670);
      if (cljs.core.truth_(temp__4657__auto___19671)) {
        var error__17229__auto___19672 = temp__4657__auto___19671;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Input to %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "GraphIOSchemata", "GraphIOSchemata", -2137701253, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2, and a keyword k,\n   return a pair of input and output schemata for #(let [v1 (f1 %)] (assoc v1 k (f2 (merge-disjoint % v1))))"], 
        null)), cljs.core.pr_str.call(null, error__17229__auto___19672)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), input_schema19636_19667, new cljs.core.Keyword(null, "value", "value", 305978217), args__17228__auto___19670, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19672], 
        null));
      } else {
      }
    } else {
    }
    var o__17230__auto__ = function() {
      var G__19656 = G__19639;
      var vec__19658 = G__19656;
      var i1 = cljs.core.nth.call(null, vec__19658, 0, null);
      var o1 = cljs.core.nth.call(null, vec__19658, 1, null);
      var G__19657 = G__19640;
      var vec__19659 = G__19657;
      var k = cljs.core.nth.call(null, vec__19659, 0, null);
      var vec__19660 = cljs.core.nth.call(null, vec__19659, 1, null);
      var i2 = cljs.core.nth.call(null, vec__19660, 0, null);
      var o2 = cljs.core.nth.call(null, vec__19660, 1, null);
      var G__19656__$1 = G__19656;
      var G__19657__$1 = G__19657;
      while (true) {
        var vec__19661 = G__19656__$1;
        var i1__$1 = cljs.core.nth.call(null, vec__19661, 0, null);
        var o1__$1 = cljs.core.nth.call(null, vec__19661, 1, null);
        var vec__19662 = G__19657__$1;
        var k__$1 = cljs.core.nth.call(null, vec__19662, 0, null);
        var vec__19663 = cljs.core.nth.call(null, vec__19662, 1, null);
        var i2__$1 = cljs.core.nth.call(null, vec__19663, 0, null);
        var o2__$1 = cljs.core.nth.call(null, vec__19663, 1, null);
        if (cljs.core.not.call(null, plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i1__$1, k__$1))) {
        } else {
          throw new Error(schema.utils.format_STAR_.call(null, "Duplicate key output (possibly due to a misordered graph) %s for input %s from input %s", k__$1, schema.core.explain.call(null, i2__$1), schema.core.explain.call(null, i1__$1)));
        }
        if (cljs.core.not.call(null, plumbing.fnk.schema.possibly_contains_QMARK_.call(null, i2__$1, k__$1))) {
        } else {
          throw new Error(schema.utils.format_STAR_.call(null, "Node outputs a key %s in its inputs %s", k__$1, schema.core.explain.call(null, i2__$1)));
        }
        if (cljs.core.not.call(null, plumbing.fnk.schema.possibly_contains_QMARK_.call(null, o1__$1, k__$1))) {
        } else {
          throw new Error(schema.utils.format_STAR_.call(null, "Node outputs a duplicate key %s given inputs %s", k__$1, schema.core.explain.call(null, i1__$1)));
        }
        var vec__19664 = plumbing.fnk.schema.split_schema.call(null, i2__$1, cljs.core.keys.call(null, o1__$1));
        var used = cljs.core.nth.call(null, vec__19664, 0, null);
        var unused = cljs.core.nth.call(null, vec__19664, 1, null);
        plumbing.fnk.schema.assert_satisfies_schema.call(null, used, o1__$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [plumbing.fnk.schema.union_input_schemata.call(null, unused, i1__$1), cljs.core.assoc.call(null, o1__$1, k__$1, o2__$1)], null);
        break;
      }
    }();
    if (cljs.core.truth_(validate__17227__auto__)) {
      var temp__4657__auto___19673 = output_checker19638_19669.call(null, o__17230__auto__);
      if (cljs.core.truth_(temp__4657__auto___19673)) {
        var error__17229__auto___19674 = temp__4657__auto___19673;
        throw cljs.core.ex_info.call(null, schema.utils.format_STAR_.call(null, "Output of %s does not match schema: %s", cljs.core.with_meta(new cljs.core.Symbol(null, "sequence-schemata", "sequence-schemata", -2061205313, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Symbol(null, "GraphIOSchemata", "GraphIOSchemata", -2137701253, null), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Given pairs of input and output schemata for fnks f1 and f2, and a keyword k,\n   return a pair of input and output schemata for #(let [v1 (f1 %)] (assoc v1 k (f2 (merge-disjoint % v1))))"], 
        null)), cljs.core.pr_str.call(null, error__17229__auto___19674)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("schema.core", "error", "schema.core/error", 1991454308), new cljs.core.Keyword(null, "schema", "schema", -1582001791), output_schema19635_19666, new cljs.core.Keyword(null, "value", "value", 305978217), o__17230__auto__, new cljs.core.Keyword(null, "error", "error", -978969032), error__17229__auto___19674], 
        null));
      } else {
      }
    } else {
    }
    return o__17230__auto__;
  };
}(ufv___19665, output_schema19635_19666, input_schema19636_19667, input_checker19637_19668, output_checker19638_19669);
schema.utils.declare_class_schema_BANG_.call(null, schema.utils.fn_schema_bearer.call(null, plumbing.fnk.schema.sequence_schemata), schema.core.make_fn_schema.call(null, output_schema19635_19666, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_schema19636_19667], null)));
goog.provide("plumbing.core");
goog.require("cljs.core");
goog.require("schema.utils");
goog.require("plumbing.fnk.schema");
plumbing.core._PLUS_none_PLUS_ = new cljs.core.Keyword("plumbing.core", "missing", "plumbing.core/missing", 1721767298);
plumbing.core.update = function plumbing$core$update(var_args) {
  var args20099 = [];
  var len__7279__auto___20108 = arguments.length;
  var i__7280__auto___20109 = 0;
  while (true) {
    if (i__7280__auto___20109 < len__7279__auto___20108) {
      args20099.push(arguments[i__7280__auto___20109]);
      var G__20110 = i__7280__auto___20109 + 1;
      i__7280__auto___20109 = G__20110;
      continue;
    } else {
    }
    break;
  }
  var G__20107 = args20099.length;
  switch(G__20107) {
    case 3:
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args20099.slice(5), 0, null);
      return plumbing.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__7298__auto__);
  }
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x1) {
  return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1));
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x1, x2) {
  return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), x1, x2));
};
plumbing.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x1, x2, xs) {
  return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), x1, x2, xs));
};
plumbing.core.update.cljs$lang$applyTo = function(seq20100) {
  var G__20101 = cljs.core.first.call(null, seq20100);
  var seq20100__$1 = cljs.core.next.call(null, seq20100);
  var G__20102 = cljs.core.first.call(null, seq20100__$1);
  var seq20100__$2 = cljs.core.next.call(null, seq20100__$1);
  var G__20103 = cljs.core.first.call(null, seq20100__$2);
  var seq20100__$3 = cljs.core.next.call(null, seq20100__$2);
  var G__20104 = cljs.core.first.call(null, seq20100__$3);
  var seq20100__$4 = cljs.core.next.call(null, seq20100__$3);
  var G__20105 = cljs.core.first.call(null, seq20100__$4);
  var seq20100__$5 = cljs.core.next.call(null, seq20100__$4);
  return plumbing.core.update.cljs$core$IFn$_invoke$arity$variadic(G__20101, G__20102, G__20103, G__20104, G__20105, seq20100__$5);
};
plumbing.core.update.cljs$lang$maxFixedArity = 5;
plumbing.core.map_vals = function plumbing$core$map_vals(f, m) {
  if (cljs.core.sorted_QMARK_.call(null, m)) {
    return cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc.call(null, out_m, k, f.call(null, v));
    }, cljs.core.sorted_map.call(null), m);
  } else {
    if (cljs.core.map_QMARK_.call(null, m)) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
        return cljs.core.assoc_BANG_.call(null, out_m, k, f.call(null, v));
      }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
    } else {
      var m_atom__19837__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
      var seq__20120_20126 = cljs.core.seq.call(null, m);
      var chunk__20121_20127 = null;
      var count__20122_20128 = 0;
      var i__20123_20129 = 0;
      while (true) {
        if (i__20123_20129 < count__20122_20128) {
          var vec__20124_20130 = cljs.core._nth.call(null, chunk__20121_20127, i__20123_20129);
          var k_20131 = cljs.core.nth.call(null, vec__20124_20130, 0, null);
          var v_20132 = cljs.core.nth.call(null, vec__20124_20130, 1, null);
          var m20119_20133 = cljs.core.deref.call(null, m_atom__19837__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20119_20133, k_20131, f.call(null, v_20132)));
          var G__20134 = seq__20120_20126;
          var G__20135 = chunk__20121_20127;
          var G__20136 = count__20122_20128;
          var G__20137 = i__20123_20129 + 1;
          seq__20120_20126 = G__20134;
          chunk__20121_20127 = G__20135;
          count__20122_20128 = G__20136;
          i__20123_20129 = G__20137;
          continue;
        } else {
          var temp__4657__auto___20138 = cljs.core.seq.call(null, seq__20120_20126);
          if (temp__4657__auto___20138) {
            var seq__20120_20139__$1 = temp__4657__auto___20138;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__20120_20139__$1)) {
              var c__7021__auto___20140 = cljs.core.chunk_first.call(null, seq__20120_20139__$1);
              var G__20141 = cljs.core.chunk_rest.call(null, seq__20120_20139__$1);
              var G__20142 = c__7021__auto___20140;
              var G__20143 = cljs.core.count.call(null, c__7021__auto___20140);
              var G__20144 = 0;
              seq__20120_20126 = G__20141;
              chunk__20121_20127 = G__20142;
              count__20122_20128 = G__20143;
              i__20123_20129 = G__20144;
              continue;
            } else {
              var vec__20125_20145 = cljs.core.first.call(null, seq__20120_20139__$1);
              var k_20146 = cljs.core.nth.call(null, vec__20125_20145, 0, null);
              var v_20147 = cljs.core.nth.call(null, vec__20125_20145, 1, null);
              var m20119_20148 = cljs.core.deref.call(null, m_atom__19837__auto__);
              cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20119_20148, k_20146, f.call(null, v_20147)));
              var G__20149 = cljs.core.next.call(null, seq__20120_20139__$1);
              var G__20150 = null;
              var G__20151 = 0;
              var G__20152 = 0;
              seq__20120_20126 = G__20149;
              chunk__20121_20127 = G__20150;
              count__20122_20128 = G__20151;
              i__20123_20129 = G__20152;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__19837__auto__));
    }
  }
};
plumbing.core.map_keys = function plumbing$core$map_keys(f, m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(out_m, k, v) {
      return cljs.core.assoc_BANG_.call(null, out_m, f.call(null, k), v);
    }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  } else {
    var m_atom__19837__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__20161_20167 = cljs.core.seq.call(null, m);
    var chunk__20162_20168 = null;
    var count__20163_20169 = 0;
    var i__20164_20170 = 0;
    while (true) {
      if (i__20164_20170 < count__20163_20169) {
        var vec__20165_20171 = cljs.core._nth.call(null, chunk__20162_20168, i__20164_20170);
        var k_20172 = cljs.core.nth.call(null, vec__20165_20171, 0, null);
        var v_20173 = cljs.core.nth.call(null, vec__20165_20171, 1, null);
        var m20160_20174 = cljs.core.deref.call(null, m_atom__19837__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20160_20174, f.call(null, k_20172), v_20173));
        var G__20175 = seq__20161_20167;
        var G__20176 = chunk__20162_20168;
        var G__20177 = count__20163_20169;
        var G__20178 = i__20164_20170 + 1;
        seq__20161_20167 = G__20175;
        chunk__20162_20168 = G__20176;
        count__20163_20169 = G__20177;
        i__20164_20170 = G__20178;
        continue;
      } else {
        var temp__4657__auto___20179 = cljs.core.seq.call(null, seq__20161_20167);
        if (temp__4657__auto___20179) {
          var seq__20161_20180__$1 = temp__4657__auto___20179;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20161_20180__$1)) {
            var c__7021__auto___20181 = cljs.core.chunk_first.call(null, seq__20161_20180__$1);
            var G__20182 = cljs.core.chunk_rest.call(null, seq__20161_20180__$1);
            var G__20183 = c__7021__auto___20181;
            var G__20184 = cljs.core.count.call(null, c__7021__auto___20181);
            var G__20185 = 0;
            seq__20161_20167 = G__20182;
            chunk__20162_20168 = G__20183;
            count__20163_20169 = G__20184;
            i__20164_20170 = G__20185;
            continue;
          } else {
            var vec__20166_20186 = cljs.core.first.call(null, seq__20161_20180__$1);
            var k_20187 = cljs.core.nth.call(null, vec__20166_20186, 0, null);
            var v_20188 = cljs.core.nth.call(null, vec__20166_20186, 1, null);
            var m20160_20189 = cljs.core.deref.call(null, m_atom__19837__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20160_20189, f.call(null, k_20187), v_20188));
            var G__20190 = cljs.core.next.call(null, seq__20161_20180__$1);
            var G__20191 = null;
            var G__20192 = 0;
            var G__20193 = 0;
            seq__20161_20167 = G__20190;
            chunk__20162_20168 = G__20191;
            count__20163_20169 = G__20192;
            i__20164_20170 = G__20193;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__19837__auto__));
  }
};
plumbing.core.map_from_keys = function plumbing$core$map_from_keys(f, ks) {
  var m_atom__19837__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__20200_20204 = cljs.core.seq.call(null, ks);
  var chunk__20201_20205 = null;
  var count__20202_20206 = 0;
  var i__20203_20207 = 0;
  while (true) {
    if (i__20203_20207 < count__20202_20206) {
      var k_20208 = cljs.core._nth.call(null, chunk__20201_20205, i__20203_20207);
      var m20199_20209 = cljs.core.deref.call(null, m_atom__19837__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20199_20209, k_20208, f.call(null, k_20208)));
      var G__20210 = seq__20200_20204;
      var G__20211 = chunk__20201_20205;
      var G__20212 = count__20202_20206;
      var G__20213 = i__20203_20207 + 1;
      seq__20200_20204 = G__20210;
      chunk__20201_20205 = G__20211;
      count__20202_20206 = G__20212;
      i__20203_20207 = G__20213;
      continue;
    } else {
      var temp__4657__auto___20214 = cljs.core.seq.call(null, seq__20200_20204);
      if (temp__4657__auto___20214) {
        var seq__20200_20215__$1 = temp__4657__auto___20214;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20200_20215__$1)) {
          var c__7021__auto___20216 = cljs.core.chunk_first.call(null, seq__20200_20215__$1);
          var G__20217 = cljs.core.chunk_rest.call(null, seq__20200_20215__$1);
          var G__20218 = c__7021__auto___20216;
          var G__20219 = cljs.core.count.call(null, c__7021__auto___20216);
          var G__20220 = 0;
          seq__20200_20204 = G__20217;
          chunk__20201_20205 = G__20218;
          count__20202_20206 = G__20219;
          i__20203_20207 = G__20220;
          continue;
        } else {
          var k_20221 = cljs.core.first.call(null, seq__20200_20215__$1);
          var m20199_20222 = cljs.core.deref.call(null, m_atom__19837__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20199_20222, k_20221, f.call(null, k_20221)));
          var G__20223 = cljs.core.next.call(null, seq__20200_20215__$1);
          var G__20224 = null;
          var G__20225 = 0;
          var G__20226 = 0;
          seq__20200_20204 = G__20223;
          chunk__20201_20205 = G__20224;
          count__20202_20206 = G__20225;
          i__20203_20207 = G__20226;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__19837__auto__));
};
plumbing.core.map_from_vals = function plumbing$core$map_from_vals(f, vs) {
  var m_atom__19837__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
  var seq__20233_20237 = cljs.core.seq.call(null, vs);
  var chunk__20234_20238 = null;
  var count__20235_20239 = 0;
  var i__20236_20240 = 0;
  while (true) {
    if (i__20236_20240 < count__20235_20239) {
      var v_20241 = cljs.core._nth.call(null, chunk__20234_20238, i__20236_20240);
      var m20232_20242 = cljs.core.deref.call(null, m_atom__19837__auto__);
      cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20232_20242, f.call(null, v_20241), v_20241));
      var G__20243 = seq__20233_20237;
      var G__20244 = chunk__20234_20238;
      var G__20245 = count__20235_20239;
      var G__20246 = i__20236_20240 + 1;
      seq__20233_20237 = G__20243;
      chunk__20234_20238 = G__20244;
      count__20235_20239 = G__20245;
      i__20236_20240 = G__20246;
      continue;
    } else {
      var temp__4657__auto___20247 = cljs.core.seq.call(null, seq__20233_20237);
      if (temp__4657__auto___20247) {
        var seq__20233_20248__$1 = temp__4657__auto___20247;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20233_20248__$1)) {
          var c__7021__auto___20249 = cljs.core.chunk_first.call(null, seq__20233_20248__$1);
          var G__20250 = cljs.core.chunk_rest.call(null, seq__20233_20248__$1);
          var G__20251 = c__7021__auto___20249;
          var G__20252 = cljs.core.count.call(null, c__7021__auto___20249);
          var G__20253 = 0;
          seq__20233_20237 = G__20250;
          chunk__20234_20238 = G__20251;
          count__20235_20239 = G__20252;
          i__20236_20240 = G__20253;
          continue;
        } else {
          var v_20254 = cljs.core.first.call(null, seq__20233_20248__$1);
          var m20232_20255 = cljs.core.deref.call(null, m_atom__19837__auto__);
          cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20232_20255, f.call(null, v_20254), v_20254));
          var G__20256 = cljs.core.next.call(null, seq__20233_20248__$1);
          var G__20257 = null;
          var G__20258 = 0;
          var G__20259 = 0;
          seq__20233_20237 = G__20256;
          chunk__20234_20238 = G__20257;
          count__20235_20239 = G__20258;
          i__20236_20240 = G__20259;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__19837__auto__));
};
plumbing.core.dissoc_in = function plumbing$core$dissoc_in(m, p__20260) {
  var vec__20262 = p__20260;
  var k = cljs.core.nth.call(null, vec__20262, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__20262, 1);
  if (cljs.core.truth_(m)) {
    var temp__4655__auto__ = function() {
      var and__6198__auto__ = ks;
      if (cljs.core.truth_(and__6198__auto__)) {
        return plumbing$core$dissoc_in.call(null, cljs.core.get.call(null, m, k), ks);
      } else {
        return and__6198__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4655__auto__)) {
      var res = temp__4655__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
plumbing.core.keywordize_map = function plumbing$core$keywordize_map(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    var m_atom__19837__auto__ = cljs.core.atom.call(null, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY));
    var seq__20271_20277 = cljs.core.seq.call(null, x);
    var chunk__20272_20278 = null;
    var count__20273_20279 = 0;
    var i__20274_20280 = 0;
    while (true) {
      if (i__20274_20280 < count__20273_20279) {
        var vec__20275_20281 = cljs.core._nth.call(null, chunk__20272_20278, i__20274_20280);
        var k_20282 = cljs.core.nth.call(null, vec__20275_20281, 0, null);
        var v_20283 = cljs.core.nth.call(null, vec__20275_20281, 1, null);
        var m20270_20284 = cljs.core.deref.call(null, m_atom__19837__auto__);
        cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20270_20284, typeof k_20282 === "string" ? cljs.core.keyword.call(null, k_20282) : k_20282, plumbing$core$keywordize_map.call(null, v_20283)));
        var G__20285 = seq__20271_20277;
        var G__20286 = chunk__20272_20278;
        var G__20287 = count__20273_20279;
        var G__20288 = i__20274_20280 + 1;
        seq__20271_20277 = G__20285;
        chunk__20272_20278 = G__20286;
        count__20273_20279 = G__20287;
        i__20274_20280 = G__20288;
        continue;
      } else {
        var temp__4657__auto___20289 = cljs.core.seq.call(null, seq__20271_20277);
        if (temp__4657__auto___20289) {
          var seq__20271_20290__$1 = temp__4657__auto___20289;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20271_20290__$1)) {
            var c__7021__auto___20291 = cljs.core.chunk_first.call(null, seq__20271_20290__$1);
            var G__20292 = cljs.core.chunk_rest.call(null, seq__20271_20290__$1);
            var G__20293 = c__7021__auto___20291;
            var G__20294 = cljs.core.count.call(null, c__7021__auto___20291);
            var G__20295 = 0;
            seq__20271_20277 = G__20292;
            chunk__20272_20278 = G__20293;
            count__20273_20279 = G__20294;
            i__20274_20280 = G__20295;
            continue;
          } else {
            var vec__20276_20296 = cljs.core.first.call(null, seq__20271_20290__$1);
            var k_20297 = cljs.core.nth.call(null, vec__20276_20296, 0, null);
            var v_20298 = cljs.core.nth.call(null, vec__20276_20296, 1, null);
            var m20270_20299 = cljs.core.deref.call(null, m_atom__19837__auto__);
            cljs.core.reset_BANG_.call(null, m_atom__19837__auto__, cljs.core.assoc_BANG_.call(null, m20270_20299, typeof k_20297 === "string" ? cljs.core.keyword.call(null, k_20297) : k_20297, plumbing$core$keywordize_map.call(null, v_20298)));
            var G__20300 = cljs.core.next.call(null, seq__20271_20290__$1);
            var G__20301 = null;
            var G__20302 = 0;
            var G__20303 = 0;
            seq__20271_20277 = G__20300;
            chunk__20272_20278 = G__20301;
            count__20273_20279 = G__20302;
            i__20274_20280 = G__20303;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.persistent_BANG_.call(null, cljs.core.deref.call(null, m_atom__19837__auto__));
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.map.call(null, plumbing$core$keywordize_map, x);
    } else {
      if (cljs.core.vector_QMARK_.call(null, x)) {
        return cljs.core.mapv.call(null, plumbing$core$keywordize_map, x);
      } else {
        return x;
      }
    }
  }
};
plumbing.core.safe_get = function plumbing$core$safe_get(m, k) {
  var temp__4655__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var pair__19913__auto__ = temp__4655__auto__;
    return cljs.core.val.call(null, pair__19913__auto__);
  } else {
    throw new Error(schema.utils.format_STAR_.call(null, "Key %s not found in %s", k, cljs.core.mapv.call(null, cljs.core.key, m)));
  }
};
plumbing.core.safe_get_in = function plumbing$core$safe_get_in(m, ks) {
  while (true) {
    if (cljs.core.seq.call(null, ks)) {
      var G__20304 = plumbing.core.safe_get.call(null, m, cljs.core.first.call(null, ks));
      var G__20305 = cljs.core.next.call(null, ks);
      m = G__20304;
      ks = G__20305;
      continue;
    } else {
      return m;
    }
    break;
  }
};
plumbing.core.assoc_when = function plumbing$core$assoc_when(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___20316 = arguments.length;
  var i__7280__auto___20317 = 0;
  while (true) {
    if (i__7280__auto___20317 < len__7279__auto___20316) {
      args__7286__auto__.push(arguments[i__7280__auto___20317]);
      var G__20318 = i__7280__auto___20317 + 1;
      i__7280__auto___20317 = G__20318;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return plumbing.core.assoc_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
plumbing.core.assoc_when.cljs$core$IFn$_invoke$arity$variadic = function(m, kvs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
  } else {
    throw new Error("Assert failed: (even? (count kvs))");
  }
  return cljs.core.into.call(null, function() {
    var or__6210__auto__ = m;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }(), function() {
    var iter__6990__auto__ = function plumbing$core$iter__20308(s__20309) {
      return new cljs.core.LazySeq(null, function() {
        var s__20309__$1 = s__20309;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__20309__$1);
          if (temp__4657__auto__) {
            var s__20309__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__20309__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__20309__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__20311 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__20310 = 0;
                while (true) {
                  if (i__20310 < size__6989__auto__) {
                    var vec__20314 = cljs.core._nth.call(null, c__6988__auto__, i__20310);
                    var k = cljs.core.nth.call(null, vec__20314, 0, null);
                    var v = cljs.core.nth.call(null, vec__20314, 1, null);
                    if (cljs.core.truth_(v)) {
                      cljs.core.chunk_append.call(null, b__20311, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                      var G__20319 = i__20310 + 1;
                      i__20310 = G__20319;
                      continue;
                    } else {
                      var G__20320 = i__20310 + 1;
                      i__20310 = G__20320;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20311), plumbing$core$iter__20308.call(null, cljs.core.chunk_rest.call(null, s__20309__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20311), null);
              }
            } else {
              var vec__20315 = cljs.core.first.call(null, s__20309__$2);
              var k = cljs.core.nth.call(null, vec__20315, 0, null);
              var v = cljs.core.nth.call(null, vec__20315, 1, null);
              if (cljs.core.truth_(v)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), plumbing$core$iter__20308.call(null, cljs.core.rest.call(null, s__20309__$2)));
              } else {
                var G__20321 = cljs.core.rest.call(null, s__20309__$2);
                s__20309__$1 = G__20321;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
  }());
};
plumbing.core.assoc_when.cljs$lang$maxFixedArity = 1;
plumbing.core.assoc_when.cljs$lang$applyTo = function(seq20306) {
  var G__20307 = cljs.core.first.call(null, seq20306);
  var seq20306__$1 = cljs.core.next.call(null, seq20306);
  return plumbing.core.assoc_when.cljs$core$IFn$_invoke$arity$variadic(G__20307, seq20306__$1);
};
plumbing.core.update_in_when = function plumbing$core$update_in_when(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___20326 = arguments.length;
  var i__7280__auto___20327 = 0;
  while (true) {
    if (i__7280__auto___20327 < len__7279__auto___20326) {
      args__7286__auto__.push(arguments[i__7280__auto___20327]);
      var G__20328 = i__7280__auto___20327 + 1;
      i__7280__auto___20327 = G__20328;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 3 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(3), 0, null) : null;
  return plumbing.core.update_in_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7287__auto__);
};
plumbing.core.update_in_when.cljs$core$IFn$_invoke$arity$variadic = function(m, key_seq, f, args) {
  var found = cljs.core.get_in.call(null, m, key_seq, plumbing.core._PLUS_none_PLUS_);
  if (!(plumbing.core._PLUS_none_PLUS_ === found)) {
    return cljs.core.assoc_in.call(null, m, key_seq, cljs.core.apply.call(null, f, found, args));
  } else {
    return m;
  }
};
plumbing.core.update_in_when.cljs$lang$maxFixedArity = 3;
plumbing.core.update_in_when.cljs$lang$applyTo = function(seq20322) {
  var G__20323 = cljs.core.first.call(null, seq20322);
  var seq20322__$1 = cljs.core.next.call(null, seq20322);
  var G__20324 = cljs.core.first.call(null, seq20322__$1);
  var seq20322__$2 = cljs.core.next.call(null, seq20322__$1);
  var G__20325 = cljs.core.first.call(null, seq20322__$2);
  var seq20322__$3 = cljs.core.next.call(null, seq20322__$2);
  return plumbing.core.update_in_when.cljs$core$IFn$_invoke$arity$variadic(G__20323, G__20324, G__20325, seq20322__$3);
};
plumbing.core.grouped_map = function plumbing$core$grouped_map(key_fn, map_fn, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = key_fn.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), map_fn.call(null, x)));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
plumbing.core.aconcat = function plumbing$core$aconcat(s) {
  return cljs.core.concat.call(null, new cljs.core.LazySeq(null, function() {
    return cljs.core.first.call(null, s);
  }, null, null), new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.next.call(null, s);
    if (temp__4657__auto__) {
      var n = temp__4657__auto__;
      return plumbing$core$aconcat.call(null, n);
    } else {
      return null;
    }
  }, null, null));
};
plumbing.core.unchunk = function plumbing$core$unchunk(s) {
  if (cljs.core.seq.call(null, s)) {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), new cljs.core.LazySeq(null, function() {
      return plumbing$core$unchunk.call(null, cljs.core.rest.call(null, s));
    }, null, null));
  } else {
    return null;
  }
};
plumbing.core.sum = function plumbing$core$sum(var_args) {
  var args20329 = [];
  var len__7279__auto___20332 = arguments.length;
  var i__7280__auto___20333 = 0;
  while (true) {
    if (i__7280__auto___20333 < len__7279__auto___20332) {
      args20329.push(arguments[i__7280__auto___20333]);
      var G__20334 = i__7280__auto___20333 + 1;
      i__7280__auto___20333 = G__20334;
      continue;
    } else {
    }
    break;
  }
  var G__20331 = args20329.length;
  switch(G__20331) {
    case 2:
      return plumbing.core.sum.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return plumbing.core.sum.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20329.length)].join(""));;
  }
};
plumbing.core.sum.cljs$core$IFn$_invoke$arity$2 = function(f, xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, f, xs));
};
plumbing.core.sum.cljs$core$IFn$_invoke$arity$1 = function(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs);
};
plumbing.core.sum.cljs$lang$maxFixedArity = 2;
plumbing.core.singleton = function plumbing$core$singleton(xs) {
  var temp__4657__auto__ = cljs.core.seq.call(null, xs);
  if (temp__4657__auto__) {
    var xs__$1 = temp__4657__auto__;
    if (cljs.core.next.call(null, xs__$1)) {
      return null;
    } else {
      return cljs.core.first.call(null, xs__$1);
    }
  } else {
    return null;
  }
};
plumbing.core.indexed = function plumbing$core$indexed(s) {
  return cljs.core.map_indexed.call(null, cljs.core.vector, s);
};
plumbing.core.positions = function plumbing$core$positions(f, s) {
  return cljs.core.keep_indexed.call(null, function(i, x) {
    if (cljs.core.truth_(f.call(null, x))) {
      return i;
    } else {
      return null;
    }
  }, s);
};
plumbing.core.distinct_by = function plumbing$core$distinct_by(f, xs) {
  var s = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  var iter__6990__auto__ = function(s) {
    return function plumbing$core$distinct_by_$_iter__20340(s__20341) {
      return new cljs.core.LazySeq(null, function(s) {
        return function() {
          var s__20341__$1 = s__20341;
          while (true) {
            var temp__4657__auto__ = cljs.core.seq.call(null, s__20341__$1);
            if (temp__4657__auto__) {
              var s__20341__$2 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__20341__$2)) {
                var c__6988__auto__ = cljs.core.chunk_first.call(null, s__20341__$2);
                var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                var b__20343 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                if (function() {
                  var i__20342 = 0;
                  while (true) {
                    if (i__20342 < size__6989__auto__) {
                      var x = cljs.core._nth.call(null, c__6988__auto__, i__20342);
                      var id = f.call(null, x);
                      if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                        cljs.core.chunk_append.call(null, b__20343, function() {
                          cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                          return x;
                        }());
                        var G__20344 = i__20342 + 1;
                        i__20342 = G__20344;
                        continue;
                      } else {
                        var G__20345 = i__20342 + 1;
                        i__20342 = G__20345;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20343), plumbing$core$distinct_by_$_iter__20340.call(null, cljs.core.chunk_rest.call(null, s__20341__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20343), null);
                }
              } else {
                var x = cljs.core.first.call(null, s__20341__$2);
                var id = f.call(null, x);
                if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, s), id)) {
                  return cljs.core.cons.call(null, function() {
                    cljs.core.swap_BANG_.call(null, s, cljs.core.conj, id);
                    return x;
                  }(), plumbing$core$distinct_by_$_iter__20340.call(null, cljs.core.rest.call(null, s__20341__$2)));
                } else {
                  var G__20346 = cljs.core.rest.call(null, s__20341__$2);
                  s__20341__$1 = G__20346;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(s), null, null);
    };
  }(s);
  return iter__6990__auto__.call(null, xs);
};
plumbing.core.interleave_all = function plumbing$core$interleave_all(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___20348 = arguments.length;
  var i__7280__auto___20349 = 0;
  while (true) {
    if (i__7280__auto___20349 < len__7279__auto___20348) {
      args__7286__auto__.push(arguments[i__7280__auto___20349]);
      var G__20350 = i__7280__auto___20349 + 1;
      i__7280__auto___20349 = G__20350;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return plumbing.core.interleave_all.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
plumbing.core.interleave_all.cljs$core$IFn$_invoke$arity$variadic = function(colls) {
  return new cljs.core.LazySeq(null, function() {
    return function plumbing$core$helper(seqs) {
      if (cljs.core.seq.call(null, seqs)) {
        return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, seqs), new cljs.core.LazySeq(null, function() {
          return plumbing$core$helper.call(null, cljs.core.keep.call(null, cljs.core.next, seqs));
        }, null, null));
      } else {
        return null;
      }
    }.call(null, cljs.core.keep.call(null, cljs.core.seq, colls));
  }, null, null);
};
plumbing.core.interleave_all.cljs$lang$maxFixedArity = 0;
plumbing.core.interleave_all.cljs$lang$applyTo = function(seq20347) {
  return plumbing.core.interleave_all.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq20347));
};
plumbing.core.count_when = function plumbing$core$count_when(pred, xs) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, pred, xs));
};
plumbing.core.conj_when = function plumbing$core$conj_when(var_args) {
  var args20351 = [];
  var len__7279__auto___20357 = arguments.length;
  var i__7280__auto___20358 = 0;
  while (true) {
    if (i__7280__auto___20358 < len__7279__auto___20357) {
      args20351.push(arguments[i__7280__auto___20358]);
      var G__20359 = i__7280__auto___20358 + 1;
      i__7280__auto___20358 = G__20359;
      continue;
    } else {
    }
    break;
  }
  var G__20356 = args20351.length;
  switch(G__20356) {
    case 2:
      return plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args20351.slice(2), 0, null);
      return plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (cljs.core.truth_(x)) {
    return cljs.core.conj.call(null, coll, x);
  } else {
    return coll;
  }
};
plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__20361 = plumbing.core.conj_when.call(null, coll, x);
      var G__20362 = cljs.core.first.call(null, xs);
      var G__20363 = cljs.core.next.call(null, xs);
      coll = G__20361;
      x = G__20362;
      xs = G__20363;
      continue;
    } else {
      return plumbing.core.conj_when.call(null, coll, x);
    }
    break;
  }
};
plumbing.core.conj_when.cljs$lang$applyTo = function(seq20352) {
  var G__20353 = cljs.core.first.call(null, seq20352);
  var seq20352__$1 = cljs.core.next.call(null, seq20352);
  var G__20354 = cljs.core.first.call(null, seq20352__$1);
  var seq20352__$2 = cljs.core.next.call(null, seq20352__$1);
  return plumbing.core.conj_when.cljs$core$IFn$_invoke$arity$variadic(G__20353, G__20354, seq20352__$2);
};
plumbing.core.conj_when.cljs$lang$maxFixedArity = 2;
plumbing.core.cons_when = function plumbing$core$cons_when(x, s) {
  if (cljs.core.truth_(x)) {
    return cljs.core.cons.call(null, x, s);
  } else {
    return s;
  }
};
plumbing.core.rsort_by = cljs.core.comp.call(null, cljs.core.reverse, cljs.core.sort_by);
plumbing.core.swap_pair_BANG_ = function plumbing$core$swap_pair_BANG_(var_args) {
  var args20365 = [];
  var len__7279__auto___20371 = arguments.length;
  var i__7280__auto___20372 = 0;
  while (true) {
    if (i__7280__auto___20372 < len__7279__auto___20371) {
      args20365.push(arguments[i__7280__auto___20372]);
      var G__20373 = i__7280__auto___20372 + 1;
      i__7280__auto___20372 = G__20373;
      continue;
    } else {
    }
    break;
  }
  var G__20370 = args20365.length;
  switch(G__20370) {
    case 2:
      return plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args20365.slice(2), 0, null);
      return plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  while (true) {
    var old_val = cljs.core.deref.call(null, a);
    var new_val = f.call(null, old_val);
    if (cljs.core.truth_(cljs.core.compare_and_set_BANG_.call(null, a, old_val, new_val))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_val, new_val], null);
    } else {
      continue;
    }
    break;
  }
};
plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, args) {
  return plumbing.core.swap_pair_BANG_.call(null, a, function(p1__20364_SHARP_) {
    return cljs.core.apply.call(null, f, p1__20364_SHARP_, args);
  });
};
plumbing.core.swap_pair_BANG_.cljs$lang$applyTo = function(seq20366) {
  var G__20367 = cljs.core.first.call(null, seq20366);
  var seq20366__$1 = cljs.core.next.call(null, seq20366);
  var G__20368 = cljs.core.first.call(null, seq20366__$1);
  var seq20366__$2 = cljs.core.next.call(null, seq20366__$1);
  return plumbing.core.swap_pair_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__20367, G__20368, seq20366__$2);
};
plumbing.core.swap_pair_BANG_.cljs$lang$maxFixedArity = 2;
plumbing.core.get_and_set_BANG_ = function plumbing$core$get_and_set_BANG_(a, new_val) {
  return cljs.core.first.call(null, plumbing.core.swap_pair_BANG_.call(null, a, cljs.core.constantly.call(null, new_val)));
};
plumbing.core.millis = function plumbing$core$millis() {
  return (new Date).getTime();
};
plumbing.core.mapply = function plumbing$core$mapply(var_args) {
  var args20375 = [];
  var len__7279__auto___20381 = arguments.length;
  var i__7280__auto___20382 = 0;
  while (true) {
    if (i__7280__auto___20382 < len__7279__auto___20381) {
      args20375.push(arguments[i__7280__auto___20382]);
      var G__20383 = i__7280__auto___20382 + 1;
      i__7280__auto___20382 = G__20383;
      continue;
    } else {
    }
    break;
  }
  var G__20380 = args20375.length;
  switch(G__20380) {
    case 2:
      return plumbing.core.mapply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__7298__auto__ = new cljs.core.IndexedSeq(args20375.slice(2), 0, null);
      return plumbing.core.mapply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7298__auto__);
  }
};
plumbing.core.mapply.cljs$core$IFn$_invoke$arity$2 = function(f, m) {
  return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, m));
};
plumbing.core.mapply.cljs$core$IFn$_invoke$arity$variadic = function(f, arg, args) {
  return cljs.core.apply.call(null, f, arg, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), cljs.core.apply.call(null, cljs.core.concat, cljs.core.last.call(null, args))));
};
plumbing.core.mapply.cljs$lang$applyTo = function(seq20376) {
  var G__20377 = cljs.core.first.call(null, seq20376);
  var seq20376__$1 = cljs.core.next.call(null, seq20376);
  var G__20378 = cljs.core.first.call(null, seq20376__$1);
  var seq20376__$2 = cljs.core.next.call(null, seq20376__$1);
  return plumbing.core.mapply.cljs$core$IFn$_invoke$arity$variadic(G__20377, G__20378, seq20376__$2);
};
plumbing.core.mapply.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__6873__auto__ = port == null ? null : port;
    var m__6874__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, port, fn1_handler);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__6873__auto__ = port == null ? null : port;
    var m__6874__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__6873__auto__ = chan == null ? null : chan;
    var m__6874__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, chan);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__6873__auto__ = chan == null ? null : chan;
    var m__6874__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, chan);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__6873__auto__ = h == null ? null : h;
    var m__6874__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, h);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function cljs$core$async$impl$protocols$blockable_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(h);
  } else {
    var x__6873__auto__ = h == null ? null : h;
    var m__6874__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, h);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.blockable_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.blockable?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__6873__auto__ = h == null ? null : h;
    var m__6874__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, h);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__6873__auto__ = b == null ? null : b;
    var m__6874__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, b);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__6873__auto__ = b == null ? null : b;
    var m__6874__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, b);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__6873__auto__ = b == null ? null : b;
    var m__6874__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, b, itm);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function cljs$core$async$impl$protocols$close_buf_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(b);
  } else {
    var x__6873__auto__ = b == null ? null : b;
    var m__6874__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, b);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.protocols.close_buf_BANG_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var args12830 = [];
  var len__7279__auto___12833 = arguments.length;
  var i__7280__auto___12834 = 0;
  while (true) {
    if (i__7280__auto___12834 < len__7279__auto___12833) {
      args12830.push(arguments[i__7280__auto___12834]);
      var G__12835 = i__7280__auto___12834 + 1;
      i__7280__auto___12834 = G__12835;
      continue;
    } else {
    }
    break;
  }
  var G__12832 = args12830.length;
  switch(G__12832) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12830.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114 = function(fn_handler, f, meta14115) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta14115 = meta14115;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14116, meta14115__$1) {
      var self__ = this;
      var _14116__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114(self__.fn_handler, self__.f, meta14115__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14116) {
      var self__ = this;
      var _14116__$1 = this;
      return self__.meta14115;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta14115", "meta14115", -1786038360, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers14114";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers14114");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers14114 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers14114(fn_handler__$1, f__$1, meta14115) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114(fn_handler__$1, f__$1, meta14115);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers14114(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e14118) {
    if (e14118 instanceof Object) {
      var ex = e14118;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e14118;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_14121_14123 = state;
    statearr_14121_14123[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_14121_14123[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_14122_14124 = state;
    statearr_14122_14124[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14122_14124[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_14127_14129 = state;
    statearr_14127_14129[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_14127_14129[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_14128_14130 = state;
    statearr_14128_14130[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14128_14130[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k14132, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__14134 = k14132 instanceof cljs.core.Keyword ? k14132.fqn : null;
  switch(G__14134) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14132, else__6835__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__14131) {
  var self__ = this;
  var G__14131__$1 = this;
  return new cljs.core.RecordIter(0, G__14131__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__14131) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__14135 = cljs.core.keyword_identical_QMARK_;
  var expr__14136 = k__6840__auto__;
  if (cljs.core.truth_(pred__14135.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__14136))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__14131, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14135.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__14136))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__14131, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14135.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__14136))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__14131, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14135.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__14136))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__14131, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__14135.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__14136))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__14131, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__14131), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__14131) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__14131, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__14133) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__14133), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__14133), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__14133), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__14133), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__14133), null, cljs.core.dissoc.call(null, G__14133, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_14140 = state;
  statearr_14140[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_14140;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = exception;
      if (cljs.core.truth_(and__6198__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__6198__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = exception;
        if (cljs.core.truth_(and__6198__auto__)) {
          var and__6198__auto____$1 = catch_block;
          if (cljs.core.truth_(and__6198__auto____$1)) {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), catch_exception) || exception instanceof catch_exception;
          } else {
            return and__6198__auto____$1;
          }
        } else {
          return and__6198__auto__;
        }
      }())) {
        var statearr_14146 = state;
        statearr_14146[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_14146[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_14146[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_14146[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_14146;
      } else {
        if (cljs.core.truth_(function() {
          var and__6198__auto__ = exception;
          if (cljs.core.truth_(and__6198__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__6198__auto__;
          }
        }())) {
          var statearr_14147_14151 = state;
          statearr_14147_14151[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__14152 = state;
          state = G__14152;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__6198__auto__ = exception;
            if (cljs.core.truth_(and__6198__auto__)) {
              var and__6198__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__6198__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__6198__auto____$1;
              }
            } else {
              return and__6198__auto__;
            }
          }())) {
            var statearr_14148 = state;
            statearr_14148[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_14148[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_14148;
          } else {
            if (cljs.core.truth_(function() {
              var and__6198__auto__ = cljs.core.not.call(null, exception);
              if (and__6198__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__6198__auto__;
              }
            }())) {
              var statearr_14149 = state;
              statearr_14149[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_14149[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_14149;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_14150 = state;
                statearr_14150[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_14150[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_14150;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  return (function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(null, args);
    }, interval);
  });
};
goog.functions.throttle = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = null;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(null, args);
  };
  return (function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  });
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11467 = arguments.length;
  var i__7280__auto___11468 = 0;
  while (true) {
    if (i__7280__auto___11468 < len__7279__auto___11467) {
      args__7286__auto__.push(arguments[i__7280__auto___11468]);
      var G__11469 = i__7280__auto___11468 + 1;
      i__7280__auto___11468 = G__11469;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq11466) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11466));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11471 = arguments.length;
  var i__7280__auto___11472 = 0;
  while (true) {
    if (i__7280__auto___11472 < len__7279__auto___11471) {
      args__7286__auto__.push(arguments[i__7280__auto___11472]);
      var G__11473 = i__7280__auto___11472 + 1;
      i__7280__auto___11472 = G__11473;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq11470) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11470));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__11477 = cljs.core._EQ_;
    var expr__11478 = c;
    if (cljs.core.truth_(pred__11477.call(null, "\b", expr__11478))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__11477.call(null, "\t", expr__11478))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__11477.call(null, "\n", expr__11478))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__11477.call(null, "\f", expr__11478))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__11477.call(null, "\r", expr__11478))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__11477.call(null, '"', expr__11478))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__11477.call(null, "\\", expr__11478))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11481 = arguments.length;
  var i__7280__auto___11482 = 0;
  while (true) {
    if (i__7280__auto___11482 < len__7279__auto___11481) {
      args__7286__auto__.push(arguments[i__7280__auto___11482]);
      var G__11483 = i__7280__auto___11482 + 1;
      i__7280__auto___11482 = G__11483;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq11480) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11480));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11485 = arguments.length;
  var i__7280__auto___11486 = 0;
  while (true) {
    if (i__7280__auto___11486 < len__7279__auto___11485) {
      args__7286__auto__.push(arguments[i__7280__auto___11486]);
      var G__11487 = i__7280__auto___11486 + 1;
      i__7280__auto___11486 = G__11487;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 0 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__7287__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq11484) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11484));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__11489 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__11489, 0, null);
      var new_context = cljs.core.nth.call(null, vec__11489, 1, null);
      var G__11490 = new_context;
      var G__11491 = remainder;
      var G__11492 = cljs.core.conj.call(null, acc, result);
      context = G__11490;
      lis__$1 = G__11491;
      acc = G__11492;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__11494 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__11494, 0, null);
    var new_context = cljs.core.nth.call(null, vec__11494, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__11495 = new_context;
      var G__11496 = cljs.core.conj.call(null, acc, result);
      context = G__11495;
      acc = G__11496;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__11498 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__11498, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__11498, 1, null);
    var new_context = cljs.core.nth.call(null, vec__11498, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__11499 = new_context;
      var G__11500 = cljs.core.conj.call(null, acc, result);
      context = G__11499;
      acc = G__11500;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6990__auto__ = function cljs$pprint$unzip_map_$_iter__11525(s__11526) {
      return new cljs.core.LazySeq(null, function() {
        var s__11526__$1 = s__11526;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__11526__$1);
          if (temp__4657__auto__) {
            var s__11526__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11526__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__11526__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__11528 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__11527 = 0;
                while (true) {
                  if (i__11527 < size__6989__auto__) {
                    var vec__11533 = cljs.core._nth.call(null, c__6988__auto__, i__11527);
                    var k = cljs.core.nth.call(null, vec__11533, 0, null);
                    var vec__11534 = cljs.core.nth.call(null, vec__11533, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__11534, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__11534, 1, null);
                    cljs.core.chunk_append.call(null, b__11528, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__11549 = i__11527 + 1;
                    i__11527 = G__11549;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11528), cljs$pprint$unzip_map_$_iter__11525.call(null, cljs.core.chunk_rest.call(null, s__11526__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11528), null);
              }
            } else {
              var vec__11535 = cljs.core.first.call(null, s__11526__$2);
              var k = cljs.core.nth.call(null, vec__11535, 0, null);
              var vec__11536 = cljs.core.nth.call(null, vec__11535, 1, null);
              var v1 = cljs.core.nth.call(null, vec__11536, 0, null);
              var v2 = cljs.core.nth.call(null, vec__11536, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__11525.call(null, cljs.core.rest.call(null, s__11526__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6990__auto__ = function cljs$pprint$unzip_map_$_iter__11537(s__11538) {
      return new cljs.core.LazySeq(null, function() {
        var s__11538__$1 = s__11538;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__11538__$1);
          if (temp__4657__auto__) {
            var s__11538__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11538__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__11538__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__11540 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__11539 = 0;
                while (true) {
                  if (i__11539 < size__6989__auto__) {
                    var vec__11545 = cljs.core._nth.call(null, c__6988__auto__, i__11539);
                    var k = cljs.core.nth.call(null, vec__11545, 0, null);
                    var vec__11546 = cljs.core.nth.call(null, vec__11545, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__11546, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__11546, 1, null);
                    cljs.core.chunk_append.call(null, b__11540, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__11550 = i__11539 + 1;
                    i__11539 = G__11550;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11540), cljs$pprint$unzip_map_$_iter__11537.call(null, cljs.core.chunk_rest.call(null, s__11538__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11540), null);
              }
            } else {
              var vec__11547 = cljs.core.first.call(null, s__11538__$2);
              var k = cljs.core.nth.call(null, vec__11547, 0, null);
              var vec__11548 = cljs.core.nth.call(null, vec__11547, 1, null);
              var v1 = cljs.core.nth.call(null, vec__11548, 0, null);
              var v2 = cljs.core.nth.call(null, vec__11548, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__11537.call(null, cljs.core.rest.call(null, s__11538__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__6990__auto__ = function cljs$pprint$tuple_map_$_iter__11559(s__11560) {
      return new cljs.core.LazySeq(null, function() {
        var s__11560__$1 = s__11560;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__11560__$1);
          if (temp__4657__auto__) {
            var s__11560__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11560__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__11560__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__11562 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__11561 = 0;
                while (true) {
                  if (i__11561 < size__6989__auto__) {
                    var vec__11565 = cljs.core._nth.call(null, c__6988__auto__, i__11561);
                    var k = cljs.core.nth.call(null, vec__11565, 0, null);
                    var v = cljs.core.nth.call(null, vec__11565, 1, null);
                    cljs.core.chunk_append.call(null, b__11562, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__11567 = i__11561 + 1;
                    i__11561 = G__11567;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11562), cljs$pprint$tuple_map_$_iter__11559.call(null, cljs.core.chunk_rest.call(null, s__11560__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11562), null);
              }
            } else {
              var vec__11566 = cljs.core.first.call(null, s__11560__$2);
              var k = cljs.core.nth.call(null, vec__11566, 0, null);
              var v = cljs.core.nth.call(null, vec__11566, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__11559.call(null, cljs.core.rest.call(null, s__11560__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__11568 = n - 1;
          n = G__11568;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__11569 = n + 1;
        n = G__11569;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__11570 = pos + 1;
      pos = G__11570;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__6873__auto__ = pp == null ? null : pp;
    var m__6874__auto__ = cljs.pprint._ppflush[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, pp);
    } else {
      var m__6874__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var args11572 = [];
  var len__7279__auto___11581 = arguments.length;
  var i__7280__auto___11582 = 0;
  while (true) {
    if (i__7280__auto___11582 < len__7279__auto___11581) {
      args11572.push(arguments[i__7280__auto___11582]);
      var G__11583 = i__7280__auto___11582 + 1;
      i__7280__auto___11582 = G__11583;
      continue;
    } else {
    }
    break;
  }
  var G__11574 = args11572.length;
  switch(G__11574) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11572.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t_cljs$pprint11575 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint11575 = function(writer, max_columns, fields, meta11576) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta11576 = meta11576;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint11575.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_11577, meta11576__$1) {
        var self__ = this;
        var _11577__$1 = this;
        return new cljs.pprint.t_cljs$pprint11575(self__.writer, self__.max_columns, self__.fields, meta11576__$1);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint11575.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_11577) {
        var self__ = this;
        var _11577__$1 = this;
        return self__.meta11576;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint11575.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint11575.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint11575.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__11578 = cljs.core._EQ_;
        var expr__11579 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__11578.call(null, String, expr__11579))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__11578, expr__11579, this$__$1, fields) {
              return function(p1__11571_SHARP_) {
                return cljs.core._EQ_.call(null, p1__11571_SHARP_, "\n");
              };
            }(s, nl, pred__11578, expr__11579, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__11578.call(null, Number, expr__11579))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__11579)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t_cljs$pprint11575.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta11576", "meta11576", 670366928, null)], null);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint11575.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint11575.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint11575";
    cljs.pprint.t_cljs$pprint11575.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint11575");
      };
    }(fields);
    cljs.pprint.__GT_t_cljs$pprint11575 = function(fields) {
      return function cljs$pprint$__GT_t_cljs$pprint11575(writer__$1, max_columns__$1, fields__$1, meta11576) {
        return new cljs.pprint.t_cljs$pprint11575(writer__$1, max_columns__$1, fields__$1, meta11576);
      };
    }(fields);
  }
  return new cljs.pprint.t_cljs$pprint11575(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11586, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11588 = k11586 instanceof cljs.core.Keyword ? k11586.fqn : null;
  switch(G__11588) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11586, else__6835__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11585) {
  var self__ = this;
  var G__11585__$1 = this;
  return new cljs.core.RecordIter(0, G__11585__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11585) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11589 = cljs.core.keyword_identical_QMARK_;
  var expr__11590 = k__6840__auto__;
  if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__11590))) {
    return new cljs.pprint.logical_block(G__11585, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__11590))) {
      return new cljs.pprint.logical_block(self__.parent, G__11585, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__11590))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__11585, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__11590))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__11585, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__11590))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__11585, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__11590))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__11585, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__11590))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__11585, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__11590))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__11585, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__11590))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__11585, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__11589.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__11590))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__11585, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11585), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11585) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__11585, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__11587) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__11587), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__11587), null, cljs.core.dissoc.call(null, G__11587, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__11593 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__11593;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11595, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11597 = k11595 instanceof cljs.core.Keyword ? k11595.fqn : null;
  switch(G__11597) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11595, else__6835__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11594) {
  var self__ = this;
  var G__11594__$1 = this;
  return new cljs.core.RecordIter(0, G__11594__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11594) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11598 = cljs.core.keyword_identical_QMARK_;
  var expr__11599 = k__6840__auto__;
  if (cljs.core.truth_(pred__11598.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__11599))) {
    return new cljs.pprint.buffer_blob(G__11594, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11598.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__11599))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__11594, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11598.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__11599))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__11594, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11598.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__11599))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__11594, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__11598.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__11599))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__11594, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11594), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11594) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__11594, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__11596) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__11596), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__11596), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__11596), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__11596), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__11596), null, cljs.core.dissoc.call(null, G__11596, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__11401__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__11401__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11603, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11605 = k11603 instanceof cljs.core.Keyword ? k11603.fqn : null;
  switch(G__11605) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11603, else__6835__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11602) {
  var self__ = this;
  var G__11602__$1 = this;
  return new cljs.core.RecordIter(0, G__11602__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11602) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11606 = cljs.core.keyword_identical_QMARK_;
  var expr__11607 = k__6840__auto__;
  if (cljs.core.truth_(pred__11606.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__11607))) {
    return new cljs.pprint.nl_t(G__11602, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11606.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__11607))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__11602, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11606.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__11607))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__11602, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11606.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__11607))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__11602, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__11606.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__11607))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__11602, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11602), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11602) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__11602, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__11604) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__11604), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__11604), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__11604), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__11604), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__11604), null, cljs.core.dissoc.call(null, G__11604, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__11401__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__11401__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11611, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11613 = k11611 instanceof cljs.core.Keyword ? k11611.fqn : null;
  switch(G__11613) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11611, else__6835__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11610) {
  var self__ = this;
  var G__11610__$1 = this;
  return new cljs.core.RecordIter(0, G__11610__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11610) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11614 = cljs.core.keyword_identical_QMARK_;
  var expr__11615 = k__6840__auto__;
  if (cljs.core.truth_(pred__11614.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__11615))) {
    return new cljs.pprint.start_block_t(G__11610, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11614.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__11615))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__11610, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11614.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__11615))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__11610, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11614.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__11615))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__11610, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11610), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11610) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__11610, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__11612) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__11612), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__11612), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__11612), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__11612), null, cljs.core.dissoc.call(null, 
  G__11612, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__11401__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__11401__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11619, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11621 = k11619 instanceof cljs.core.Keyword ? k11619.fqn : null;
  switch(G__11621) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11619, else__6835__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11618) {
  var self__ = this;
  var G__11618__$1 = this;
  return new cljs.core.RecordIter(0, G__11618__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11618) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11622 = cljs.core.keyword_identical_QMARK_;
  var expr__11623 = k__6840__auto__;
  if (cljs.core.truth_(pred__11622.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__11623))) {
    return new cljs.pprint.end_block_t(G__11618, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11622.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__11623))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__11618, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11622.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__11623))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__11618, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11622.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__11623))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__11618, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11618), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11618) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__11618, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__11620) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__11620), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__11620), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__11620), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__11620), null, cljs.core.dissoc.call(null, 
  G__11620, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__11401__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__11401__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11627, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11629 = k11627 instanceof cljs.core.Keyword ? k11627.fqn : null;
  switch(G__11629) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11627, else__6835__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11626) {
  var self__ = this;
  var G__11626__$1 = this;
  return new cljs.core.RecordIter(0, G__11626__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11626) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11630 = cljs.core.keyword_identical_QMARK_;
  var expr__11631 = k__6840__auto__;
  if (cljs.core.truth_(pred__11630.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__11631))) {
    return new cljs.pprint.indent_t(G__11626, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11630.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__11631))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__11626, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11630.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__11631))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__11626, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11630.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__11631))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__11626, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__11630.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__11631))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__11626, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__11630.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__11631))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__11626, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11626), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11626) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__11626, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__11628) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__11628), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__11628), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__11628), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__11628), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__11628), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__11628), null, cljs.core.dissoc.call(null, G__11628, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__11401__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__11401__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__7134__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7138__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__, hierarchy__7138__auto__) {
      return function(p1__11635_SHARP_, p2__11634_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__11634_SHARP_);
      };
    }(method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__, hierarchy__7138__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7138__auto__, method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4657__auto___11636 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___11636)) {
    var cb_11637 = temp__4657__auto___11636;
    cb_11637.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4657__auto___11638 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4657__auto___11638)) {
    var prefix_11639 = temp__4657__auto___11638;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_11639);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4657__auto___11640 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___11640)) {
    var cb_11641 = temp__4657__auto___11640;
    cb_11641.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var suffix = temp__4657__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__11642 = cljs.core._EQ_;
    var expr__11643 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__11642.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__11643))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__11642.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__11643))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__11643)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__6210__auto__) {
      return or__6210__auto__;
    } else {
      var and__6198__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__6198__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__6198__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4655__auto___11645 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4655__auto___11645)) {
      var tws_11646 = temp__4655__auto___11645;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_11646);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__11651 = cljs.core.seq.call(null, tokens);
  var chunk__11652 = null;
  var count__11653 = 0;
  var i__11654 = 0;
  while (true) {
    if (i__11654 < count__11653) {
      var token = cljs.core._nth.call(null, chunk__11652, i__11654);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4655__auto___11655 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4655__auto___11655)) {
          var tws_11656 = temp__4655__auto___11655;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_11656);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_11657 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__6198__auto__)) {
          return tws_11657;
        } else {
          return and__6198__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_11657);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__11658 = seq__11651;
      var G__11659 = chunk__11652;
      var G__11660 = count__11653;
      var G__11661 = i__11654 + 1;
      seq__11651 = G__11658;
      chunk__11652 = G__11659;
      count__11653 = G__11660;
      i__11654 = G__11661;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__11651);
      if (temp__4657__auto__) {
        var seq__11651__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11651__$1)) {
          var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__11651__$1);
          var G__11662 = cljs.core.chunk_rest.call(null, seq__11651__$1);
          var G__11663 = c__7021__auto__;
          var G__11664 = cljs.core.count.call(null, c__7021__auto__);
          var G__11665 = 0;
          seq__11651 = G__11662;
          chunk__11652 = G__11663;
          count__11653 = G__11664;
          i__11654 = G__11665;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__11651__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4655__auto___11666 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4655__auto___11666)) {
              var tws_11667 = temp__4655__auto___11666;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_11667);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_11668 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__6198__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__6198__auto__)) {
              return tws_11668;
            } else {
              return and__6198__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_11668);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__11669 = cljs.core.next.call(null, seq__11651__$1);
          var G__11670 = null;
          var G__11671 = 0;
          var G__11672 = 0;
          seq__11651 = G__11669;
          chunk__11652 = G__11670;
          count__11653 = G__11671;
          i__11654 = G__11672;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__6210__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__6198__auto__ = miser_width;
  if (cljs.core.truth_(and__6198__auto__)) {
    var and__6198__auto____$1 = maxcol;
    if (cljs.core.truth_(and__6198__auto____$1)) {
      var and__6198__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__6198__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__6198__auto____$2;
      }
    } else {
      return and__6198__auto____$1;
    }
  } else {
    return and__6198__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__7134__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7138__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__, hierarchy__7138__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__, hierarchy__7138__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7138__auto__, method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__6210__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    var or__6210__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__6210__auto____$1) {
      return or__6210__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__11673_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__6198__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__11673_SHARP_);
        if (cljs.core.truth_(and__6198__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__11673_SHARP_), lb);
        } else {
          return and__6198__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__11674_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__11674_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__6198__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__11674_SHARP_);
        if (cljs.core.truth_(and__6198__auto__)) {
          var or__6210__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__6210__auto__) {
            return or__6210__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__6198__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__11675 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__11675;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_11676 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_11676);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__11677_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__11677_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__11680 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__11680, 0, null);
  var b = cljs.core.nth.call(null, vec__11680, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__11681 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__11681, 0, null);
    var remainder = cljs.core.nth.call(null, vec__11681, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__11682 = new_buffer;
        buffer = G__11682;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var buf = temp__4655__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var tws = temp__4657__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_11691 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_11692 = oldpos_11691 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_11692);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_11691, newpos_11692));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__11687_11693 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__11688_11694 = null;
    var count__11689_11695 = 0;
    var i__11690_11696 = 0;
    while (true) {
      if (i__11690_11696 < count__11689_11695) {
        var l_11697__$1 = cljs.core._nth.call(null, chunk__11688_11694, i__11690_11696);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_11697__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__11698 = seq__11687_11693;
        var G__11699 = chunk__11688_11694;
        var G__11700 = count__11689_11695;
        var G__11701 = i__11690_11696 + 1;
        seq__11687_11693 = G__11698;
        chunk__11688_11694 = G__11699;
        count__11689_11695 = G__11700;
        i__11690_11696 = G__11701;
        continue;
      } else {
        var temp__4657__auto___11702 = cljs.core.seq.call(null, seq__11687_11693);
        if (temp__4657__auto___11702) {
          var seq__11687_11703__$1 = temp__4657__auto___11702;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11687_11703__$1)) {
            var c__7021__auto___11704 = cljs.core.chunk_first.call(null, seq__11687_11703__$1);
            var G__11705 = cljs.core.chunk_rest.call(null, seq__11687_11703__$1);
            var G__11706 = c__7021__auto___11704;
            var G__11707 = cljs.core.count.call(null, c__7021__auto___11704);
            var G__11708 = 0;
            seq__11687_11693 = G__11705;
            chunk__11688_11694 = G__11706;
            count__11689_11695 = G__11707;
            i__11690_11696 = G__11708;
            continue;
          } else {
            var l_11709__$1 = cljs.core.first.call(null, seq__11687_11703__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_11709__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__11710 = cljs.core.next.call(null, seq__11687_11703__$1);
            var G__11711 = null;
            var G__11712 = 0;
            var G__11713 = 0;
            seq__11687_11693 = G__11710;
            chunk__11688_11694 = G__11711;
            count__11689_11695 = G__11712;
            i__11690_11696 = G__11713;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t_cljs$pprint11720 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint11720 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta11721) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta11721 = meta11721;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint11720.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_11722, meta11721__$1) {
        var self__ = this;
        var _11722__$1 = this;
        return new cljs.pprint.t_cljs$pprint11720(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta11721__$1);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint11720.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_11722) {
        var self__ = this;
        var _11722__$1 = this;
        return self__.meta11721;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint11720.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint11720.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__11723 = cljs.core._EQ_;
        var expr__11724 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__11723.call(null, String, expr__11724))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__11723.call(null, Number, expr__11724))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__11724)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint11720.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint11720.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t_cljs$pprint11720.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint11720.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta11721", "meta11721", -715448761, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint11720.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint11720.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint11720";
    cljs.pprint.t_cljs$pprint11720.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint11720");
      };
    }(lb, fields);
    cljs.pprint.__GT_t_cljs$pprint11720 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint11720(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta11721) {
        return new cljs.pprint.t_cljs$pprint11720(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta11721);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t_cljs$pprint11720(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4657__auto___11726 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___11726)) {
      var cb_11727 = temp__4657__auto___11726;
      cb_11727.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4657__auto___11728 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___11728)) {
      var cb_11729 = temp__4657__auto___11728;
      cb_11729.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_11730 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_11731 = oldpos_11730 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_11731);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_11730, newpos_11731));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__11735 = cljs.core._EQ_;
      var expr__11736 = relative_to;
      if (cljs.core.truth_(pred__11735.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__11736))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__11735.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__11736))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__11736)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 
1, true, 117, 128, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 81, 87, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 
17, 1, true, 105, 115, cljs.core.List.EMPTY, "*print-length* controls how many items of each collection the\n  printer will print. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  number of items of each collection to print. If a collection contains\n  more items, the printer will print items up to the limit followed by\n  '...' to represent the remaining items. The root binding is nil\n  indicating no limit.", new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/Users/tmo/Work/batiskav/forks/todomvc/architecture-examples/kierros/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__11738_SHARP_) {
    var temp__4657__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__11738_SHARP_));
    if (cljs.core.truth_(temp__4657__auto__)) {
      var v = temp__4657__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__11738_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__6198__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__6198__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__6198__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__6198__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11759 = arguments.length;
  var i__7280__auto___11760 = 0;
  while (true) {
    if (i__7280__auto___11760 < len__7279__auto___11759) {
      args__7286__auto__.push(arguments[i__7280__auto___11760]);
      var G__11761 = i__7280__auto___11760 + 1;
      i__7280__auto___11760 = G__11761;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_11745 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_11746 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_11747 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_11748 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_11749 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_11750 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_11751 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_11752 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_11753 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_11754 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_11755 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_11756 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__11384__auto___11762 = base_writer;
        var new_writer__11385__auto___11763 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__11384__auto___11762));
        var _STAR_out_STAR_11757_11764 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__11385__auto___11763 ? cljs.pprint.make_pretty_writer.call(null, base_writer__11384__auto___11762, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__11384__auto___11762;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_11757_11764;
        }
      } else {
        var _STAR_out_STAR_11758_11765 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_11758_11765;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_11756;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_11755;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_11754;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_11753;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_11752;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_11751;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_11750;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_11749;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11748;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_11747;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_11746;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_11745;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq11743) {
  var G__11744 = cljs.core.first.call(null, seq11743);
  var seq11743__$1 = cljs.core.next.call(null, seq11743);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__11744, seq11743__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var args11766 = [];
  var len__7279__auto___11772 = arguments.length;
  var i__7280__auto___11773 = 0;
  while (true) {
    if (i__7280__auto___11773 < len__7279__auto___11772) {
      args11766.push(arguments[i__7280__auto___11773]);
      var G__11774 = i__7280__auto___11773 + 1;
      i__7280__auto___11773 = G__11774;
      continue;
    } else {
    }
    break;
  }
  var G__11768 = args11766.length;
  switch(G__11768) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11766.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_11769 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_11769;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__11384__auto__ = writer;
  var new_writer__11385__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__11384__auto__));
  var _STAR_out_STAR_11770 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__11385__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__11384__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__11384__auto__;
  try {
    var _STAR_print_pretty_STAR_11771_11776 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_11771_11776;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_11770;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__6198__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__6198__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__6198__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___11780 = arguments.length;
  var i__7280__auto___11781 = 0;
  while (true) {
    if (i__7280__auto___11781 < len__7279__auto___11780) {
      args__7286__auto__.push(arguments[i__7280__auto___11781]);
      var G__11782 = i__7280__auto___11781 + 1;
      i__7280__auto___11781 = G__11782;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 2 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7287__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq11777) {
  var G__11778 = cljs.core.first.call(null, seq11777);
  var seq11777__$1 = cljs.core.next.call(null, seq11777);
  var G__11779 = cljs.core.first.call(null, seq11777__$1);
  var seq11777__$2 = cljs.core.next.call(null, seq11777__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__11778, G__11779, seq11777__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11784, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11786 = k11784 instanceof cljs.core.Keyword ? k11784.fqn : null;
  switch(G__11786) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11784, else__6835__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11783) {
  var self__ = this;
  var G__11783__$1 = this;
  return new cljs.core.RecordIter(0, G__11783__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11783) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11787 = cljs.core.keyword_identical_QMARK_;
  var expr__11788 = k__6840__auto__;
  if (cljs.core.truth_(pred__11787.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__11788))) {
    return new cljs.pprint.arg_navigator(G__11783, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11787.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__11788))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__11783, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11787.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__11788))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__11783, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11783), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11783) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__11783, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__11785) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__11785), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__11785), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__11785), null, cljs.core.dissoc.call(null, G__11785, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__11792 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__11792, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11792, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__6832__auto__, k__6833__auto__) {
  var self__ = this;
  var this__6832__auto____$1 = this;
  return cljs.core._lookup.call(null, this__6832__auto____$1, k__6833__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__6834__auto__, k11794, else__6835__auto__) {
  var self__ = this;
  var this__6834__auto____$1 = this;
  var G__11796 = k11794 instanceof cljs.core.Keyword ? k11794.fqn : null;
  switch(G__11796) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11794, else__6835__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__6846__auto__, writer__6847__auto__, opts__6848__auto__) {
  var self__ = this;
  var this__6846__auto____$1 = this;
  var pr_pair__6849__auto__ = function(this__6846__auto____$1) {
    return function(keyval__6850__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, cljs.core.pr_writer, "", " ", "", opts__6848__auto__, keyval__6850__auto__);
    };
  }(this__6846__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__6847__auto__, pr_pair__6849__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__6848__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__11793) {
  var self__ = this;
  var G__11793__$1 = this;
  return new cljs.core.RecordIter(0, G__11793__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__6830__auto__) {
  var self__ = this;
  var this__6830__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__6826__auto__) {
  var self__ = this;
  var this__6826__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__6836__auto__) {
  var self__ = this;
  var this__6836__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__6827__auto__) {
  var self__ = this;
  var this__6827__auto____$1 = this;
  var h__6645__auto__ = self__.__hash;
  if (!(h__6645__auto__ == null)) {
    return h__6645__auto__;
  } else {
    var h__6645__auto____$1 = cljs.core.hash_imap.call(null, this__6827__auto____$1);
    self__.__hash = h__6645__auto____$1;
    return h__6645__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__6828__auto__, other__6829__auto__) {
  var self__ = this;
  var this__6828__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = other__6829__auto__;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = this__6828__auto____$1.constructor === other__6829__auto__.constructor;
      if (and__6198__auto____$1) {
        return cljs.core.equiv_map.call(null, this__6828__auto____$1, other__6829__auto__);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__6841__auto__, k__6842__auto__) {
  var self__ = this;
  var this__6841__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__6842__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6841__auto____$1), self__.__meta), k__6842__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__6842__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__6839__auto__, k__6840__auto__, G__11793) {
  var self__ = this;
  var this__6839__auto____$1 = this;
  var pred__11797 = cljs.core.keyword_identical_QMARK_;
  var expr__11798 = k__6840__auto__;
  if (cljs.core.truth_(pred__11797.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__11798))) {
    return new cljs.pprint.compiled_directive(G__11793, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11797.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__11798))) {
      return new cljs.pprint.compiled_directive(self__.func, G__11793, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11797.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__11798))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__11793, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11797.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__11798))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__11793, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__6840__auto__, G__11793), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__6844__auto__) {
  var self__ = this;
  var this__6844__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__6831__auto__, G__11793) {
  var self__ = this;
  var this__6831__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__11793, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__6837__auto__, entry__6838__auto__) {
  var self__ = this;
  var this__6837__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__6838__auto__)) {
    return cljs.core._assoc.call(null, this__6837__auto____$1, cljs.core._nth.call(null, entry__6838__auto__, 0), cljs.core._nth.call(null, entry__6838__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__6837__auto____$1, entry__6838__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__6866__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__6866__auto__, writer__6867__auto__) {
  return cljs.core._write.call(null, writer__6867__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__11795) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__11795), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__11795), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__11795), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__11795), null, cljs.core.dissoc.call(null, G__11795, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__11801, navigator) {
  var vec__11805 = p__11801;
  var param = cljs.core.nth.call(null, vec__11805, 0, null);
  var vec__11806 = cljs.core.nth.call(null, vec__11805, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__11806, 0, null);
  var offset = cljs.core.nth.call(null, vec__11806, 1, null);
  var vec__11807 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__11807, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__11807, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__11809 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__11809, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__11809, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__6210__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__11811 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__11811, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__11811, 1, null);
  var base_output = function() {
    var or__6210__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__11812_SHARP_) {
    if (p1__11812_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__11812_SHARP_, base), cljs.core.quot.call(null, p1__11812_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__11813_SHARP_) {
        if (p1__11813_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__11813_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__11813_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__11816 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__11816, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__11816, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_11817 = arg < 0;
    var pos_arg_11818 = neg_11817 ? -arg : arg;
    var raw_str_11819 = cljs.pprint.opt_base_str.call(null, base, pos_arg_11818);
    var group_str_11820 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_11817, pos_arg_11818, raw_str_11819, vec__11816, arg, arg_navigator__$1) {
        return function(p1__11814_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__11814_SHARP_);
        };
      }(neg_11817, pos_arg_11818, raw_str_11819, vec__11816, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_11819));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_11819;
    var signed_str_11821 = neg_11817 ? [cljs.core.str("-"), cljs.core.str(group_str_11820)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_11820)].join("") : group_str_11820;
    var padded_str_11822 = signed_str_11821.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_11821.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_11821)].join("") : 
    signed_str_11821;
    cljs.pprint.print.call(null, padded_str_11822);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__11823 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__11824 = pos - 1;
      var G__11825 = cljs.core.first.call(null, remainder);
      var G__11826 = cljs.core.next.call(null, remainder);
      acc = G__11823;
      pos = G__11824;
      this$ = G__11825;
      remainder = G__11826;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__11828 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__11828, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11828, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_11829 = arg < 0 ? -arg : arg;
    var parts_11830 = cljs.pprint.remainders.call(null, 1E3, abs_arg_11829);
    if (cljs.core.count.call(null, parts_11830) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_11831 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_11830);
      var full_str_11832 = cljs.pprint.add_english_scales.call(null, parts_strs_11831, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_11832)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__11834 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__11834, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11834, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_11835 = arg < 0 ? -arg : arg;
    var parts_11836 = cljs.pprint.remainders.call(null, 1E3, abs_arg_11835);
    if (cljs.core.count.call(null, parts_11836) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_11837 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_11836));
      var head_str_11838 = cljs.pprint.add_english_scales.call(null, parts_strs_11837, 1);
      var tail_str_11839 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_11836));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_11838) && !cljs.core.empty_QMARK_.call(null, tail_str_11839) ? [cljs.core.str(head_str_11838), cljs.core.str(", "), cljs.core.str(tail_str_11839)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_11838) ? [cljs.core.str(head_str_11838), cljs.core.str("th")].join("") : tail_str_11839)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_11840 = cljs.core.rem.call(null, arg, 100);
      var not_teens_11841 = 11 < low_two_digits_11840 || 19 > low_two_digits_11840;
      var low_digit_11842 = cljs.core.rem.call(null, low_two_digits_11840, 10);
      cljs.pprint.print.call(null, low_digit_11842 === 1 && not_teens_11841 ? "st" : low_digit_11842 === 2 && not_teens_11841 ? "nd" : low_digit_11842 === 3 && not_teens_11841 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__11844 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__11844, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11844, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_11845 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_11846 = cljs.core.PersistentVector.EMPTY;
    var pos_11847 = cljs.core.count.call(null, digits_11845) - 1;
    var digits_11848__$1 = digits_11845;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_11848__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_11846));
      } else {
        var digit_11849 = cljs.core.first.call(null, digits_11848__$1);
        var G__11850 = cljs.core._EQ_.call(null, 0, digit_11849) ? acc_11846 : cljs.core.conj.call(null, acc_11846, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_11847), digit_11849 - 1));
        var G__11851 = pos_11847 - 1;
        var G__11852 = cljs.core.next.call(null, digits_11848__$1);
        acc_11846 = G__11850;
        pos_11847 = G__11851;
        digits_11848__$1 = G__11852;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__11854 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__11854, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11854, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__11859 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__11859, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11859, 1, null);
  var pred__11860_11863 = cljs.core._EQ_;
  var expr__11861_11864 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__11860_11863.call(null, "o", expr__11861_11864))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__11860_11863.call(null, "u", expr__11861_11864))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__11860_11863.call(null, null, expr__11861_11864))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__11861_11864)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__11866 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__11866, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11866, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__11869 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__11869, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__11869, 1, null);
      var vec__11870 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__11870, 0, null);
      var offsets = cljs.core.nth.call(null, vec__11870, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__11872 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__11872, 0, null);
  var e = cljs.core.nth.call(null, vec__11872, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__11873 = i - 1;
        i = G__11873;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = d;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__6541__auto__ = 2;
      var y__6542__auto__ = w;
      return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__6541__auto__ = e + 1;
      var y__6542__auto__ = w__$1 - 1;
      return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
    }() : w__$1 + e;
    var vec__11875 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__11875, 0, null);
    var e1 = cljs.core.nth.call(null, vec__11875, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__11875, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__11875, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__11877 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__11877, 0, null);
  var e1 = cljs.core.nth.call(null, vec__11877, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__11882 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__11882, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11882, 1, null);
  var vec__11883 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__11883, 0, null);
  var abs = cljs.core.nth.call(null, vec__11883, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__11884 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__11884, 0, null);
  var exp = cljs.core.nth.call(null, vec__11884, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__11885 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__11885, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__11885, 1, null);
  var expanded = cljs.core.nth.call(null, vec__11885, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__6198__auto__ = w;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = d;
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_11886 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_11887 = cljs.core.truth_(add_sign) ? len_11886 + 1 : len_11886;
    var prepend_zero_11888__$1 = prepend_zero && !(signed_len_11887 >= w);
    var append_zero_11889__$1 = append_zero && !(signed_len_11887 >= w);
    var full_len_11890 = prepend_zero_11888__$1 || append_zero_11889__$1 ? signed_len_11887 + 1 : signed_len_11887;
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = full_len_11890 > w;
      if (and__6198__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__6198__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_11890, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_11888__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_11889__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__11897 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__11897, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11897, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__11899_11903 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__11900_11904 = G__11899_11903;
  var mantissa_11905 = cljs.core.nth.call(null, vec__11900_11904, 0, null);
  var exp_11906 = cljs.core.nth.call(null, vec__11900_11904, 1, null);
  var G__11899_11907__$1 = G__11899_11903;
  while (true) {
    var vec__11901_11908 = G__11899_11907__$1;
    var mantissa_11909__$1 = cljs.core.nth.call(null, vec__11901_11908, 0, null);
    var exp_11910__$1 = cljs.core.nth.call(null, vec__11901_11908, 1, null);
    var w_11911 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_11912 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_11913 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_11914 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_11915 = function() {
      var or__6210__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_11916 = function() {
      var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_11917 = k_11914 <= 0;
    var scaled_exp_11918 = exp_11910__$1 - (k_11914 - 1);
    var scaled_exp_str_11919 = [cljs.core.str(Math.abs(scaled_exp_11918))].join("");
    var scaled_exp_str_11920__$1 = [cljs.core.str(expchar_11915), cljs.core.str(scaled_exp_11918 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_11913) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_11913 - cljs.core.count.call(null, scaled_exp_str_11919), "0")) : null), cljs.core.str(scaled_exp_str_11919)].join("");
    var exp_width_11921 = cljs.core.count.call(null, scaled_exp_str_11920__$1);
    var base_mantissa_width_11922 = cljs.core.count.call(null, mantissa_11909__$1);
    var scaled_mantissa_11923 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_11914, "0"))), cljs.core.str(mantissa_11909__$1), cljs.core.str(cljs.core.truth_(d_11912) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_11912 - (base_mantissa_width_11922 - 1) - (k_11914 < 0 ? -k_11914 : 0), "0")) : null)].join("");
    var w_mantissa_11924 = cljs.core.truth_(w_11911) ? w_11911 - exp_width_11921 : null;
    var vec__11902_11925 = cljs.pprint.round_str.call(null, scaled_mantissa_11923, 0, cljs.core._EQ_.call(null, k_11914, 0) ? d_11912 - 1 : k_11914 > 0 ? d_11912 : k_11914 < 0 ? d_11912 - 1 : null, cljs.core.truth_(w_mantissa_11924) ? w_mantissa_11924 - (cljs.core.truth_(add_sign_11916) ? 1 : 0) : null);
    var rounded_mantissa_11926 = cljs.core.nth.call(null, vec__11902_11925, 0, null);
    var __11927 = cljs.core.nth.call(null, vec__11902_11925, 1, null);
    var incr_exp_11928 = cljs.core.nth.call(null, vec__11902_11925, 2, null);
    var full_mantissa_11929 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_11926, k_11914);
    var append_zero_11930 = cljs.core._EQ_.call(null, k_11914, cljs.core.count.call(null, rounded_mantissa_11926)) && d_11912 == null;
    if (cljs.core.not.call(null, incr_exp_11928)) {
      if (cljs.core.truth_(w_11911)) {
        var len_11931 = cljs.core.count.call(null, full_mantissa_11929) + exp_width_11921;
        var signed_len_11932 = cljs.core.truth_(add_sign_11916) ? len_11931 + 1 : len_11931;
        var prepend_zero_11933__$1 = prepend_zero_11917 && !cljs.core._EQ_.call(null, signed_len_11932, w_11911);
        var full_len_11934 = prepend_zero_11933__$1 ? signed_len_11932 + 1 : signed_len_11932;
        var append_zero_11935__$1 = append_zero_11930 && full_len_11934 < w_11911;
        if (cljs.core.truth_(function() {
          var and__6198__auto__ = function() {
            var or__6210__auto__ = full_len_11934 > w_11911;
            if (or__6210__auto__) {
              return or__6210__auto__;
            } else {
              var and__6198__auto__ = e_11913;
              if (cljs.core.truth_(and__6198__auto__)) {
                return exp_width_11921 - 2 > e_11913;
              } else {
                return and__6198__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__6198__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__6198__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_11911, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_11911 - full_len_11934 - (append_zero_11935__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_11916) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_11933__$1 ? "0" : null), cljs.core.str(full_mantissa_11929), cljs.core.str(append_zero_11935__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_11920__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_11916) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_11917 ? "0" : null), cljs.core.str(full_mantissa_11929), cljs.core.str(append_zero_11930 ? "0" : null), cljs.core.str(scaled_exp_str_11920__$1)].join(""));
      }
    } else {
      var G__11936 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_11926, exp_11910__$1 + 1], null);
      G__11899_11907__$1 = G__11936;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__11939 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__11939, 0, null);
  var _ = cljs.core.nth.call(null, vec__11939, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__11940 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__11940, 0, null);
  var exp = cljs.core.nth.call(null, vec__11940, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__6541__auto__ = cljs.core.count.call(null, mantissa);
    var y__6542__auto__ = function() {
      var x__6548__auto__ = n;
      var y__6549__auto__ = 7;
      return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
    }();
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__11944 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__11944, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11944, 1, null);
  var vec__11945 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__11945, 0, null);
  var exp = cljs.core.nth.call(null, vec__11945, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__11946 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__11946, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__11946, 1, null);
  var expanded = cljs.core.nth.call(null, vec__11946, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__6198__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__6198__auto__)) {
      return add_sign;
    } else {
      return and__6198__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__6198__auto__) {
      return add_sign;
    } else {
      return and__6198__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__11948 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__11948, 0, null);
  var navigator = cljs.core.nth.call(null, vec__11948, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__11950 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__11950, 0, null);
  var navigator = cljs.core.nth.call(null, vec__11950, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__11952 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__11952, 0, null);
  var navigator = cljs.core.nth.call(null, vec__11952, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__11955 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__11955, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11955, 1, null);
  var vec__11956 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__11956, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__11956, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__11957 = count + 1;
        var G__11958 = iter_result;
        var G__11959 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__11957;
        args__$1 = G__11958;
        last_pos = G__11959;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__11962 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__11962, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11962, 1, null);
  var vec__11963 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__11963, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__11963, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__11964 = count + 1;
        var G__11965 = cljs.core.next.call(null, arg_list__$1);
        count = G__11964;
        arg_list__$1 = G__11965;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__11967 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__11967, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11967, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__11968 = count + 1;
        var G__11969 = iter_result;
        var G__11970 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__11968;
        navigator__$2 = G__11969;
        last_pos = G__11970;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__11973 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__11973, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__11973, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__6210__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__6210__auto__) {
        return or__6210__auto__;
      } else {
        var and__6198__auto__ = max_count;
        if (cljs.core.truth_(and__6198__auto__)) {
          return count >= max_count;
        } else {
          return and__6198__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__11974 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__11974, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__11974, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__11975 = count + 1;
        var G__11976 = navigator__$3;
        count = G__11975;
        navigator__$2 = G__11976;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__11979 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_11980 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_11980;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__11979, 0, null);
      var result_str = cljs.core.nth.call(null, vec__11979, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__11981 = cljs.core.next.call(null, clauses__$1);
        var G__11982 = cljs.core.conj.call(null, acc, result_str);
        var G__11983 = iter_result;
        clauses__$1 = G__11981;
        acc = G__11982;
        navigator__$1 = G__11983;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__11988 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var else$ = temp__4657__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__11989 = cljs.core.nth.call(null, vec__11988, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__11989, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__11988, 1, null);
  var navigator__$1 = function() {
    var or__6210__auto__ = new_navigator;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__11990 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__11990, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__11990, 1, null);
  var navigator__$2 = function() {
    var or__6210__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__6210__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__6210__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__11991 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__11991, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__11991, 1, null);
  var slots = function() {
    var x__6541__auto__ = 1;
    var y__6542__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__6541__auto__ = minpad;
    var y__6542__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = eol_str;
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_11992__$1 = slots;
  var extra_pad_11993__$1 = extra_pad;
  var strs_11994__$1 = strs;
  var pad_only_11995 = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_11994__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_11994__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_11995) ? cljs.core.first.call(null, strs_11994__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__6210__auto__ = pad_only_11995;
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          var or__6210__auto____$1 = cljs.core.next.call(null, strs_11994__$1);
          if (or__6210__auto____$1) {
            return or__6210__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_11993__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__11996 = slots_11992__$1 - 1;
      var G__11997 = extra_pad_11993__$1 - 1;
      var G__11998 = cljs.core.truth_(pad_only_11995) ? strs_11994__$1 : cljs.core.next.call(null, strs_11994__$1);
      var G__11999 = false;
      slots_11992__$1 = G__11996;
      extra_pad_11993__$1 = G__11997;
      strs_11994__$1 = G__11998;
      pad_only_11995 = G__11999;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint12006 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint12006 = function(downcase_writer, writer, meta12007) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta12007 = meta12007;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint12006.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12008, meta12007__$1) {
      var self__ = this;
      var _12008__$1 = this;
      return new cljs.pprint.t_cljs$pprint12006(self__.downcase_writer, self__.writer, meta12007__$1);
    };
    cljs.pprint.t_cljs$pprint12006.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12008) {
      var self__ = this;
      var _12008__$1 = this;
      return self__.meta12007;
    };
    cljs.pprint.t_cljs$pprint12006.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint12006.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__12009 = cljs.core._EQ_;
      var expr__12010 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__12009.call(null, String, expr__12010))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__12009.call(null, Number, expr__12010))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__12010)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint12006.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta12007", "meta12007", 2069406054, null)], null);
    };
    cljs.pprint.t_cljs$pprint12006.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint12006.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint12006";
    cljs.pprint.t_cljs$pprint12006.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint12006");
    };
    cljs.pprint.__GT_t_cljs$pprint12006 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint12006(downcase_writer__$1, writer__$1, meta12007) {
      return new cljs.pprint.t_cljs$pprint12006(downcase_writer__$1, writer__$1, meta12007);
    };
  }
  return new cljs.pprint.t_cljs$pprint12006(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint12018 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint12018 = function(upcase_writer, writer, meta12019) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta12019 = meta12019;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint12018.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12020, meta12019__$1) {
      var self__ = this;
      var _12020__$1 = this;
      return new cljs.pprint.t_cljs$pprint12018(self__.upcase_writer, self__.writer, meta12019__$1);
    };
    cljs.pprint.t_cljs$pprint12018.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12020) {
      var self__ = this;
      var _12020__$1 = this;
      return self__.meta12019;
    };
    cljs.pprint.t_cljs$pprint12018.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint12018.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__12021 = cljs.core._EQ_;
      var expr__12022 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__12021.call(null, String, expr__12022))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__12021.call(null, Number, expr__12022))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__12022)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint12018.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta12019", "meta12019", 1102470865, null)], null);
    };
    cljs.pprint.t_cljs$pprint12018.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint12018.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint12018";
    cljs.pprint.t_cljs$pprint12018.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint12018");
    };
    cljs.pprint.__GT_t_cljs$pprint12018 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint12018(upcase_writer__$1, writer__$1, meta12019) {
      return new cljs.pprint.t_cljs$pprint12018(upcase_writer__$1, writer__$1, meta12019);
    };
  }
  return new cljs.pprint.t_cljs$pprint12018(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__6198__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__6198__auto__)) {
      var and__6198__auto____$1 = f;
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__6198__auto__ = m;
          if (cljs.core.truth_(and__6198__auto__)) {
            return m.index + 1;
          } else {
            return and__6198__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t_cljs$pprint12030 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint12030 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta12031) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta12031 = meta12031;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint12030.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_12032, meta12031__$1) {
        var self__ = this;
        var _12032__$1 = this;
        return new cljs.pprint.t_cljs$pprint12030(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta12031__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint12030.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_12032) {
        var self__ = this;
        var _12032__$1 = this;
        return self__.meta12031;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint12030.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint12030.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__12033 = cljs.core._EQ_;
        var expr__12034 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__12033.call(null, String, expr__12034))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__12033.call(null, Number, expr__12034))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__12034)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint12030.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta12031", "meta12031", 298472525, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint12030.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint12030.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint12030";
    cljs.pprint.t_cljs$pprint12030.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint12030");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t_cljs$pprint12030 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint12030(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta12031) {
        return new cljs.pprint.t_cljs$pprint12030(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta12031);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t_cljs$pprint12030(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t_cljs$pprint12042 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint12042 = function(init_cap_writer, writer, capped, meta12043) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta12043 = meta12043;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint12042.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_12044, meta12043__$1) {
        var self__ = this;
        var _12044__$1 = this;
        return new cljs.pprint.t_cljs$pprint12042(self__.init_cap_writer, self__.writer, self__.capped, meta12043__$1);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint12042.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_12044) {
        var self__ = this;
        var _12044__$1 = this;
        return self__.meta12043;
      };
    }(capped);
    cljs.pprint.t_cljs$pprint12042.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint12042.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__12045 = cljs.core._EQ_;
        var expr__12046 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__12045.call(null, String, expr__12046))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__6198__auto__ = m;
              if (cljs.core.truth_(and__6198__auto__)) {
                return m.index;
              } else {
                return and__6198__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__12045.call(null, Number, expr__12046))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__6198__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__6198__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__6198__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__12046)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t_cljs$pprint12042.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta12043", "meta12043", 1000291629, null)], null);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint12042.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint12042.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint12042";
    cljs.pprint.t_cljs$pprint12042.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.pprint/t_cljs$pprint12042");
      };
    }(capped);
    cljs.pprint.__GT_t_cljs$pprint12042 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint12042(init_cap_writer__$1, writer__$1, capped__$1, meta12043) {
        return new cljs.pprint.t_cljs$pprint12042(init_cap_writer__$1, writer__$1, capped__$1, meta12043);
      };
    }(capped);
  }
  return new cljs.pprint.t_cljs$pprint12042(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_12049 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_12049;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_12052 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_12053 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_12054 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_12055 = current_12054 < colnum_12052 ? colnum_12052 - current_12054 : cljs.core._EQ_.call(null, colinc_12053, 0) ? 0 : colinc_12053 - cljs.core.rem.call(null, current_12054 - colnum_12052, colinc_12053);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_12055, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_12056 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_12057 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_12058 = colrel_12056 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_12059 = colinc_12057 > 0 ? cljs.core.rem.call(null, start_col_12058, colinc_12057) : 0;
  var space_count_12060 = colrel_12056 + (cljs.core._EQ_.call(null, 0, offset_12059) ? 0 : colinc_12057 - offset_12059);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_12060, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__12064 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__12064, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__12064, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12065_12067 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12066_12068 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12066_12068;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12065_12067;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__12069_SHARP_, p2__12070_SHARP_, p3__12071_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__12069_SHARP_, p2__12070_SHARP_, p3__12071_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__12072_SHARP_, p2__12073_SHARP_, p3__12074_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__12072_SHARP_, p2__12073_SHARP_, p3__12074_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__12075_SHARP_, p2__12076_SHARP_, p3__12077_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__12075_SHARP_, p2__12076_SHARP_, p3__12077_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__12078_SHARP_, p2__12079_SHARP_, p3__12080_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__12078_SHARP_, p2__12079_SHARP_, p3__12080_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__12081_SHARP_, p2__12082_SHARP_, p3__12083_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__12081_SHARP_, p2__12082_SHARP_, p3__12083_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__12084_SHARP_, p2__12085_SHARP_, p3__12086_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__12084_SHARP_, p2__12085_SHARP_, p3__12086_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__12087_SHARP_, p2__12088_SHARP_, p3__12089_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__12087_SHARP_), p1__12087_SHARP_, p2__12088_SHARP_, p3__12089_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__6198__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__6198__auto__;
      }
    }())) {
      return function(p1__12090_SHARP_, p2__12091_SHARP_, p3__12092_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__12090_SHARP_, p2__12091_SHARP_, p3__12092_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__12093_SHARP_, p2__12094_SHARP_, p3__12095_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__12093_SHARP_, p2__12094_SHARP_, p3__12095_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__12096_SHARP_, p2__12097_SHARP_, p3__12098_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__12096_SHARP_, p2__12097_SHARP_, p3__12098_SHARP_);
          };
        } else {
          return function(p1__12099_SHARP_, p2__12100_SHARP_, p3__12101_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__12099_SHARP_, p2__12100_SHARP_, p3__12101_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__12111 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__12111, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__12111, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__7124__auto___12117 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_12118 = 0;
    while (true) {
      if (i_12118 < n__7124__auto___12117) {
        cljs.pprint.prn.call(null);
        var G__12119 = i_12118 + 1;
        i_12118 = G__12119;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_12120 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_12120 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__7124__auto___12121 = cnt_12120 - 1;
    var i_12122 = 0;
    while (true) {
      if (i_12122 < n__7124__auto___12121) {
        cljs.pprint.prn.call(null);
        var G__12123 = i_12122 + 1;
        i_12122 = G__12123;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__7124__auto___12124 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_12125 = 0;
    while (true) {
      if (i_12125 < n__7124__auto___12124) {
        cljs.pprint.print.call(null, "\f");
        var G__12126 = i_12125 + 1;
        i_12125 = G__12126;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__12102_SHARP_, p2__12103_SHARP_, p3__12104_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__12102_SHARP_, p2__12103_SHARP_, p3__12104_SHARP_);
    };
  } else {
    return function(p1__12105_SHARP_, p2__12106_SHARP_, p3__12107_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__12105_SHARP_, p2__12106_SHARP_, p3__12107_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__12112 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__12112, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__12112, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__12113 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__12113, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__12113, 1, null);
      var vec__12114 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__12114, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__12114, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__6198__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__6198__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__6198__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__12108_SHARP_, p2__12109_SHARP_, p3__12110_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__12108_SHARP_, p2__12109_SHARP_, p3__12110_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__6198__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__6198__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = arg1;
      if (cljs.core.truth_(and__6198__auto__)) {
        var and__6198__auto____$1 = arg2;
        if (cljs.core.truth_(and__6198__auto____$1)) {
          return arg3;
        } else {
          return and__6198__auto____$1;
        }
      } else {
        return and__6198__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = arg1;
        if (cljs.core.truth_(and__6198__auto__)) {
          return arg2;
        } else {
          return and__6198__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__12115 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__12115, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__12115, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__12116 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__12116, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__12116, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__12127) {
  var vec__12129 = p__12127;
  var s = cljs.core.nth.call(null, vec__12129, 0, null);
  var offset = cljs.core.nth.call(null, vec__12129, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__12129, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__12130) {
  var vec__12132 = p__12130;
  var p = cljs.core.nth.call(null, vec__12132, 0, null);
  var offset = cljs.core.nth.call(null, vec__12132, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__12135) {
    var vec__12136 = p__12135;
    var s__$1 = cljs.core.nth.call(null, vec__12136, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__12136, 1, null);
    var flags = cljs.core.nth.call(null, vec__12136, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__6198__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__6198__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__6198__auto__) {
      var and__6198__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__6198__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__6198__auto____$1;
      }
    } else {
      return and__6198__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__6548__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__6549__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__6548__auto__ < y__6549__auto__ ? x__6548__auto__ : y__6549__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12137_SHARP_, p2__12138_SHARP_) {
    var val = cljs.core.first.call(null, p1__12137_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__12138_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__12138_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__12137_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__6990__auto__ = function cljs$pprint$map_params_$_iter__12154(s__12155) {
      return new cljs.core.LazySeq(null, function() {
        var s__12155__$1 = s__12155;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__12155__$1);
          if (temp__4657__auto__) {
            var s__12155__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__12155__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__12155__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__12157 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__12156 = 0;
                while (true) {
                  if (i__12156 < size__6989__auto__) {
                    var vec__12162 = cljs.core._nth.call(null, c__6988__auto__, i__12156);
                    var name = cljs.core.nth.call(null, vec__12162, 0, null);
                    var vec__12163 = cljs.core.nth.call(null, vec__12162, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__12163, 0, null);
                    cljs.core.chunk_append.call(null, b__12157, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__12166 = i__12156 + 1;
                    i__12156 = G__12166;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12157), cljs$pprint$map_params_$_iter__12154.call(null, cljs.core.chunk_rest.call(null, s__12155__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12157), null);
              }
            } else {
              var vec__12164 = cljs.core.first.call(null, s__12155__$2);
              var name = cljs.core.nth.call(null, vec__12164, 0, null);
              var vec__12165 = cljs.core.nth.call(null, vec__12164, 1, null);
              var default$ = cljs.core.nth.call(null, vec__12165, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__12154.call(null, cljs.core.rest.call(null, s__12155__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__12139_SHARP_, p2__12140_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__12139_SHARP_, p2__12140_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__12141_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__12141_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__12171 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__12171, 0, null);
  var vec__12172 = cljs.core.nth.call(null, vec__12171, 1, null);
  var rest = cljs.core.nth.call(null, vec__12172, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__12172, 1, null);
  var vec__12173 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__12173, 0, null);
  var vec__12174 = cljs.core.nth.call(null, vec__12173, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__12174, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__12174, 1, null);
  var flags = cljs.core.nth.call(null, vec__12174, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__6198__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__6198__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__6198__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__12176 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__12176, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__12176, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__12181) {
    var vec__12182 = p__12181;
    var clause_map = cljs.core.nth.call(null, vec__12182, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__12182, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__12182, 2, null);
    var vec__12183 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__12183, 0, null);
    var vec__12184 = cljs.core.nth.call(null, vec__12183, 1, null);
    var type = cljs.core.nth.call(null, vec__12184, 0, null);
    var right_params = cljs.core.nth.call(null, vec__12184, 1, null);
    var else_params = cljs.core.nth.call(null, vec__12184, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__12184, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_12188 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_12188) {
      return function(p__12189) {
        var vec__12190 = p__12189;
        var s = cljs.core.nth.call(null, vec__12190, 0, null);
        var offset = cljs.core.nth.call(null, vec__12190, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_12188), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_12188;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__6210__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          var or__6210__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__6210__auto____$1)) {
            return or__6210__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__12191 = cljs.core.next.call(null, format__$1);
        format__$1 = G__12191;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var args12192 = [];
  var len__7279__auto___12198 = arguments.length;
  var i__7280__auto___12199 = 0;
  while (true) {
    if (i__7280__auto___12199 < len__7279__auto___12198) {
      args12192.push(arguments[i__7280__auto___12199]);
      var G__12200 = i__7280__auto___12199 + 1;
      i__7280__auto___12199 = G__12200;
      continue;
    } else {
    }
    break;
  }
  var G__12194 = args12192.length;
  switch(G__12194) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12192.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__6198__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_12195 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_12195;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__12196 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__12196, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__12196, 1, null);
      var vec__12197 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__12197, 0, null);
      var offsets = cljs.core.nth.call(null, vec__12197, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = macro_char;
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__6198__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12205_12208 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12206_12209 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count12207_12210 = 0;
      var alis_12211__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count12207_12210 < cljs.core._STAR_print_length_STAR_) {
          if (alis_12211__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_12211__$1));
            if (cljs.core.next.call(null, alis_12211__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__12212 = length_count12207_12210 + 1;
              var G__12213 = cljs.core.next.call(null, alis_12211__$1);
              length_count12207_12210 = G__12212;
              alis_12211__$1 = G__12213;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12206_12209;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12205_12208;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12217_12220 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12218_12221 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count12219_12222 = 0;
      var aseq_12223 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count12219_12222 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_12223) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_12223));
            if (cljs.core.next.call(null, aseq_12223)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__12224 = length_count12219_12222 + 1;
              var G__12225 = cljs.core.next.call(null, aseq_12223);
              length_count12219_12222 = G__12224;
              aseq_12223 = G__12225;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12218_12221;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12217_12220;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__11445__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
  return function(format_in__11445__auto__, cf__11446__auto__) {
    return function() {
      var G__12226__delegate = function(args__11447__auto__) {
        var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
        return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
      };
      var G__12226 = function(var_args) {
        var args__11447__auto__ = null;
        if (arguments.length > 0) {
          var G__12227__i = 0, G__12227__a = new Array(arguments.length - 0);
          while (G__12227__i < G__12227__a.length) {
            G__12227__a[G__12227__i] = arguments[G__12227__i + 0];
            ++G__12227__i;
          }
          args__11447__auto__ = new cljs.core.IndexedSeq(G__12227__a, 0);
        }
        return G__12226__delegate.call(this, args__11447__auto__);
      };
      G__12226.cljs$lang$maxFixedArity = 0;
      G__12226.cljs$lang$applyTo = function(arglist__12228) {
        var args__11447__auto__ = cljs.core.seq(arglist__12228);
        return G__12226__delegate(args__11447__auto__);
      };
      G__12226.cljs$core$IFn$_invoke$arity$variadic = G__12226__delegate;
      return G__12226;
    }();
  }(format_in__11445__auto__, cf__11446__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12234_12239 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12235_12240 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count12236_12241 = 0;
      var aseq_12242 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count12236_12241 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_12242) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_12237_12243 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_12238_12244 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_12242));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_12242)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12238_12244;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12237_12243;
              }
            }
            if (cljs.core.next.call(null, aseq_12242)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__12245 = length_count12236_12241 + 1;
              var G__12246 = cljs.core.next.call(null, aseq_12242);
              length_count12236_12241 = G__12245;
              aseq_12242 = G__12246;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12235_12240;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12234_12239;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__11445__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
  return function(format_in__11445__auto__, cf__11446__auto__) {
    return function() {
      var G__12247__delegate = function(args__11447__auto__) {
        var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
        return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
      };
      var G__12247 = function(var_args) {
        var args__11447__auto__ = null;
        if (arguments.length > 0) {
          var G__12248__i = 0, G__12248__a = new Array(arguments.length - 0);
          while (G__12248__i < G__12248__a.length) {
            G__12248__a[G__12248__i] = arguments[G__12248__i + 0];
            ++G__12248__i;
          }
          args__11447__auto__ = new cljs.core.IndexedSeq(G__12248__a, 0);
        }
        return G__12247__delegate.call(this, args__11447__auto__);
      };
      G__12247.cljs$lang$maxFixedArity = 0;
      G__12247.cljs$lang$applyTo = function(arglist__12249) {
        var args__11447__auto__ = cljs.core.seq(arglist__12249);
        return G__12247__delegate(args__11447__auto__);
      };
      G__12247.cljs$core$IFn$_invoke$arity$variadic = G__12247__delegate;
      return G__12247;
    }();
  }(format_in__11445__auto__, cf__11446__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__6210__auto__ = function() {
    var temp__4657__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var match = temp__4657__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12254_12258 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12255_12259 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__6198__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__6198__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__6198__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12255_12259;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12254_12258;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__11445__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
  return function(format_in__11445__auto__, cf__11446__auto__) {
    return function() {
      var G__12260__delegate = function(args__11447__auto__) {
        var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
        return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
      };
      var G__12260 = function(var_args) {
        var args__11447__auto__ = null;
        if (arguments.length > 0) {
          var G__12261__i = 0, G__12261__a = new Array(arguments.length - 0);
          while (G__12261__i < G__12261__a.length) {
            G__12261__a[G__12261__i] = arguments[G__12261__i + 0];
            ++G__12261__i;
          }
          args__11447__auto__ = new cljs.core.IndexedSeq(G__12261__a, 0);
        }
        return G__12260__delegate.call(this, args__11447__auto__);
      };
      G__12260.cljs$lang$maxFixedArity = 0;
      G__12260.cljs$lang$applyTo = function(arglist__12262) {
        var args__11447__auto__ = cljs.core.seq(arglist__12262);
        return G__12260__delegate(args__11447__auto__);
      };
      G__12260.cljs$core$IFn$_invoke$arity$variadic = G__12260__delegate;
      return G__12260;
    }();
  }(format_in__11445__auto__, cf__11446__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__7134__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7138__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7138__auto__, method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__12273 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__12273, 0, null);
    var end = cljs.core.nth.call(null, vec__12273, 1, null);
    var vec__12274 = reference;
    var keyw = cljs.core.nth.call(null, vec__12274, 0, null);
    var args = cljs.core.nthnext.call(null, vec__12274, 1);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_12275_12281 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_12276_12282 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__11445__auto__ = "~w~:i";
          var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
          return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args) {
            return function() {
              var G__12283__delegate = function(args__11447__auto__) {
                var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
              };
              var G__12283 = function(var_args) {
                var args__11447__auto__ = null;
                if (arguments.length > 0) {
                  var G__12284__i = 0, G__12284__a = new Array(arguments.length - 0);
                  while (G__12284__i < G__12284__a.length) {
                    G__12284__a[G__12284__i] = arguments[G__12284__i + 0];
                    ++G__12284__i;
                  }
                  args__11447__auto__ = new cljs.core.IndexedSeq(G__12284__a, 0);
                }
                return G__12283__delegate.call(this, args__11447__auto__);
              };
              G__12283.cljs$lang$maxFixedArity = 0;
              G__12283.cljs$lang$applyTo = function(arglist__12285) {
                var args__11447__auto__ = cljs.core.seq(arglist__12285);
                return G__12283__delegate(args__11447__auto__);
              };
              G__12283.cljs$core$IFn$_invoke$arity$variadic = G__12283__delegate;
              return G__12283;
            }();
          }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args);
        })().call(null, keyw);
        var args_12286__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_12286__$1)) {
            (function() {
              var format_in__11445__auto__ = " ";
              var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
              return function(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args) {
                return function() {
                  var G__12287__delegate = function(args__11447__auto__) {
                    var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                    return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                  };
                  var G__12287 = function(var_args) {
                    var args__11447__auto__ = null;
                    if (arguments.length > 0) {
                      var G__12288__i = 0, G__12288__a = new Array(arguments.length - 0);
                      while (G__12288__i < G__12288__a.length) {
                        G__12288__a[G__12288__i] = arguments[G__12288__i + 0];
                        ++G__12288__i;
                      }
                      args__11447__auto__ = new cljs.core.IndexedSeq(G__12288__a, 0);
                    }
                    return G__12287__delegate.call(this, args__11447__auto__);
                  };
                  G__12287.cljs$lang$maxFixedArity = 0;
                  G__12287.cljs$lang$applyTo = function(arglist__12289) {
                    var args__11447__auto__ = cljs.core.seq(arglist__12289);
                    return G__12287__delegate(args__11447__auto__);
                  };
                  G__12287.cljs$core$IFn$_invoke$arity$variadic = G__12287__delegate;
                  return G__12287;
                }();
              }(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args);
            })().call(null);
            var arg_12290 = cljs.core.first.call(null, args_12286__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_12290)) {
              var vec__12277_12291 = cljs.pprint.brackets.call(null, arg_12290);
              var start_12292__$1 = cljs.core.nth.call(null, vec__12277_12291, 0, null);
              var end_12293__$1 = cljs.core.nth.call(null, vec__12277_12291, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_12278_12294 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_12279_12295 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_12292__$1, null, end_12293__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_12290), 3) && cljs.core.second.call(null, arg_12290) instanceof cljs.core.Keyword) {
                    var vec__12280_12296 = arg_12290;
                    var ns_12297 = cljs.core.nth.call(null, vec__12280_12296, 0, null);
                    var kw_12298 = cljs.core.nth.call(null, vec__12280_12296, 1, null);
                    var lis_12299 = cljs.core.nth.call(null, vec__12280_12296, 2, null);
                    (function() {
                      var format_in__11445__auto__ = "~w ~w ";
                      var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
                      return function(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, vec__12280_12296, ns_12297, kw_12298, lis_12299, _STAR_current_level_STAR_12278_12294, _STAR_current_length_STAR_12279_12295, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args) {
                        return function() {
                          var G__12300__delegate = function(args__11447__auto__) {
                            var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                            return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                          };
                          var G__12300 = function(var_args) {
                            var args__11447__auto__ = null;
                            if (arguments.length > 0) {
                              var G__12301__i = 0, G__12301__a = new Array(arguments.length - 0);
                              while (G__12301__i < G__12301__a.length) {
                                G__12301__a[G__12301__i] = arguments[G__12301__i + 0];
                                ++G__12301__i;
                              }
                              args__11447__auto__ = new cljs.core.IndexedSeq(G__12301__a, 0);
                            }
                            return G__12300__delegate.call(this, args__11447__auto__);
                          };
                          G__12300.cljs$lang$maxFixedArity = 0;
                          G__12300.cljs$lang$applyTo = function(arglist__12302) {
                            var args__11447__auto__ = cljs.core.seq(arglist__12302);
                            return G__12300__delegate(args__11447__auto__);
                          };
                          G__12300.cljs$core$IFn$_invoke$arity$variadic = G__12300__delegate;
                          return G__12300;
                        }();
                      }(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, vec__12280_12296, ns_12297, kw_12298, lis_12299, _STAR_current_level_STAR_12278_12294, _STAR_current_length_STAR_12279_12295, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args);
                    })().call(null, ns_12297, kw_12298);
                    if (cljs.core.sequential_QMARK_.call(null, lis_12299)) {
                      (function() {
                        var format_in__11445__auto__ = cljs.core.vector_QMARK_.call(null, lis_12299) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
                        return function(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, vec__12280_12296, ns_12297, kw_12298, lis_12299, _STAR_current_level_STAR_12278_12294, _STAR_current_length_STAR_12279_12295, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args) {
                          return function() {
                            var G__12303__delegate = function(args__11447__auto__) {
                              var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                              return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                            };
                            var G__12303 = function(var_args) {
                              var args__11447__auto__ = null;
                              if (arguments.length > 0) {
                                var G__12304__i = 0, G__12304__a = new Array(arguments.length - 0);
                                while (G__12304__i < G__12304__a.length) {
                                  G__12304__a[G__12304__i] = arguments[G__12304__i + 0];
                                  ++G__12304__i;
                                }
                                args__11447__auto__ = new cljs.core.IndexedSeq(G__12304__a, 0);
                              }
                              return G__12303__delegate.call(this, args__11447__auto__);
                            };
                            G__12303.cljs$lang$maxFixedArity = 0;
                            G__12303.cljs$lang$applyTo = function(arglist__12305) {
                              var args__11447__auto__ = cljs.core.seq(arglist__12305);
                              return G__12303__delegate(args__11447__auto__);
                            };
                            G__12303.cljs$core$IFn$_invoke$arity$variadic = G__12303__delegate;
                            return G__12303;
                          }();
                        }(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, vec__12280_12296, ns_12297, kw_12298, lis_12299, _STAR_current_level_STAR_12278_12294, _STAR_current_length_STAR_12279_12295, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args);
                      })().call(null, lis_12299);
                    } else {
                      cljs.pprint.write_out.call(null, lis_12299);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__11445__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
                      return function(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12278_12294, _STAR_current_length_STAR_12279_12295, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args) {
                        return function() {
                          var G__12306__delegate = function(args__11447__auto__) {
                            var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                            return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                          };
                          var G__12306 = function(var_args) {
                            var args__11447__auto__ = null;
                            if (arguments.length > 0) {
                              var G__12307__i = 0, G__12307__a = new Array(arguments.length - 0);
                              while (G__12307__i < G__12307__a.length) {
                                G__12307__a[G__12307__i] = arguments[G__12307__i + 0];
                                ++G__12307__i;
                              }
                              args__11447__auto__ = new cljs.core.IndexedSeq(G__12307__a, 0);
                            }
                            return G__12306__delegate.call(this, args__11447__auto__);
                          };
                          G__12306.cljs$lang$maxFixedArity = 0;
                          G__12306.cljs$lang$applyTo = function(arglist__12308) {
                            var args__11447__auto__ = cljs.core.seq(arglist__12308);
                            return G__12306__delegate(args__11447__auto__);
                          };
                          G__12306.cljs$core$IFn$_invoke$arity$variadic = G__12306__delegate;
                          return G__12306;
                        }();
                      }(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12278_12294, _STAR_current_length_STAR_12279_12295, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args);
                    }(), arg_12290);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12279_12295;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12278_12294;
                }
              }
              if (cljs.core.next.call(null, args_12286__$1)) {
                (function() {
                  var format_in__11445__auto__ = "~_";
                  var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
                  return function(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args) {
                    return function() {
                      var G__12309__delegate = function(args__11447__auto__) {
                        var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                        return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                      };
                      var G__12309 = function(var_args) {
                        var args__11447__auto__ = null;
                        if (arguments.length > 0) {
                          var G__12310__i = 0, G__12310__a = new Array(arguments.length - 0);
                          while (G__12310__i < G__12310__a.length) {
                            G__12310__a[G__12310__i] = arguments[G__12310__i + 0];
                            ++G__12310__i;
                          }
                          args__11447__auto__ = new cljs.core.IndexedSeq(G__12310__a, 0);
                        }
                        return G__12309__delegate.call(this, args__11447__auto__);
                      };
                      G__12309.cljs$lang$maxFixedArity = 0;
                      G__12309.cljs$lang$applyTo = function(arglist__12311) {
                        var args__11447__auto__ = cljs.core.seq(arglist__12311);
                        return G__12309__delegate(args__11447__auto__);
                      };
                      G__12309.cljs$core$IFn$_invoke$arity$variadic = G__12309__delegate;
                      return G__12309;
                    }();
                  }(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, vec__12277_12291, start_12292__$1, end_12293__$1, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_12290);
              if (cljs.core.next.call(null, args_12286__$1)) {
                (function() {
                  var format_in__11445__auto__ = "~:_";
                  var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
                  return function(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args) {
                    return function() {
                      var G__12312__delegate = function(args__11447__auto__) {
                        var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                        return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                      };
                      var G__12312 = function(var_args) {
                        var args__11447__auto__ = null;
                        if (arguments.length > 0) {
                          var G__12313__i = 0, G__12313__a = new Array(arguments.length - 0);
                          while (G__12313__i < G__12313__a.length) {
                            G__12313__a[G__12313__i] = arguments[G__12313__i + 0];
                            ++G__12313__i;
                          }
                          args__11447__auto__ = new cljs.core.IndexedSeq(G__12313__a, 0);
                        }
                        return G__12312__delegate.call(this, args__11447__auto__);
                      };
                      G__12312.cljs$lang$maxFixedArity = 0;
                      G__12312.cljs$lang$applyTo = function(arglist__12314) {
                        var args__11447__auto__ = cljs.core.seq(arglist__12314);
                        return G__12312__delegate(args__11447__auto__);
                      };
                      G__12312.cljs$core$IFn$_invoke$arity$variadic = G__12312__delegate;
                      return G__12312;
                    }();
                  }(args_12286__$1, format_in__11445__auto__, cf__11446__auto__, arg_12290, _STAR_current_level_STAR_12275_12281, _STAR_current_length_STAR_12276_12282, vec__12273, start, end, vec__12274, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__12315 = cljs.core.next.call(null, args_12286__$1);
            args_12286__$1 = G__12315;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12276_12282;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12275_12281;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__12321 = alis;
    var ns_sym = cljs.core.nth.call(null, vec__12321, 0, null);
    var ns_name = cljs.core.nth.call(null, vec__12321, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__12321, 2);
    var vec__12322 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__12322, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__12322, 1, null);
    var vec__12323 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__12323, 0, null);
    var references = cljs.core.nth.call(null, vec__12323, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_12324_12326 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_12325_12327 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__11445__auto__ = "~w ~1I~@_~w";
          var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
          return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12324_12326, _STAR_current_length_STAR_12325_12327, vec__12321, ns_sym, ns_name, stuff, vec__12322, doc_str, stuff__$1, vec__12323, attr_map, references) {
            return function() {
              var G__12328__delegate = function(args__11447__auto__) {
                var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
              };
              var G__12328 = function(var_args) {
                var args__11447__auto__ = null;
                if (arguments.length > 0) {
                  var G__12329__i = 0, G__12329__a = new Array(arguments.length - 0);
                  while (G__12329__i < G__12329__a.length) {
                    G__12329__a[G__12329__i] = arguments[G__12329__i + 0];
                    ++G__12329__i;
                  }
                  args__11447__auto__ = new cljs.core.IndexedSeq(G__12329__a, 0);
                }
                return G__12328__delegate.call(this, args__11447__auto__);
              };
              G__12328.cljs$lang$maxFixedArity = 0;
              G__12328.cljs$lang$applyTo = function(arglist__12330) {
                var args__11447__auto__ = cljs.core.seq(arglist__12330);
                return G__12328__delegate(args__11447__auto__);
              };
              G__12328.cljs$core$IFn$_invoke$arity$variadic = G__12328__delegate;
              return G__12328;
            }();
          }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12324_12326, _STAR_current_length_STAR_12325_12327, vec__12321, ns_sym, ns_name, stuff, vec__12322, doc_str, stuff__$1, vec__12323, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__6210__auto__ = doc_str;
          if (cljs.core.truth_(or__6210__auto__)) {
            return or__6210__auto__;
          } else {
            var or__6210__auto____$1 = attr_map;
            if (cljs.core.truth_(or__6210__auto____$1)) {
              return or__6210__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__11445__auto__ = "~@:_";
            var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
            return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12324_12326, _STAR_current_length_STAR_12325_12327, vec__12321, ns_sym, ns_name, stuff, vec__12322, doc_str, stuff__$1, vec__12323, attr_map, references) {
              return function() {
                var G__12331__delegate = function(args__11447__auto__) {
                  var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                  return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                };
                var G__12331 = function(var_args) {
                  var args__11447__auto__ = null;
                  if (arguments.length > 0) {
                    var G__12332__i = 0, G__12332__a = new Array(arguments.length - 0);
                    while (G__12332__i < G__12332__a.length) {
                      G__12332__a[G__12332__i] = arguments[G__12332__i + 0];
                      ++G__12332__i;
                    }
                    args__11447__auto__ = new cljs.core.IndexedSeq(G__12332__a, 0);
                  }
                  return G__12331__delegate.call(this, args__11447__auto__);
                };
                G__12331.cljs$lang$maxFixedArity = 0;
                G__12331.cljs$lang$applyTo = function(arglist__12333) {
                  var args__11447__auto__ = cljs.core.seq(arglist__12333);
                  return G__12331__delegate(args__11447__auto__);
                };
                G__12331.cljs$core$IFn$_invoke$arity$variadic = G__12331__delegate;
                return G__12331;
              }();
            }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12324_12326, _STAR_current_length_STAR_12325_12327, vec__12321, ns_sym, ns_name, stuff, vec__12322, doc_str, stuff__$1, vec__12323, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__6210__auto__ = attr_map;
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__11445__auto__ = "~w~:[~;~:@_~]";
            var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
            return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12324_12326, _STAR_current_length_STAR_12325_12327, vec__12321, ns_sym, ns_name, stuff, vec__12322, doc_str, stuff__$1, vec__12323, attr_map, references) {
              return function() {
                var G__12334__delegate = function(args__11447__auto__) {
                  var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                  return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                };
                var G__12334 = function(var_args) {
                  var args__11447__auto__ = null;
                  if (arguments.length > 0) {
                    var G__12335__i = 0, G__12335__a = new Array(arguments.length - 0);
                    while (G__12335__i < G__12335__a.length) {
                      G__12335__a[G__12335__i] = arguments[G__12335__i + 0];
                      ++G__12335__i;
                    }
                    args__11447__auto__ = new cljs.core.IndexedSeq(G__12335__a, 0);
                  }
                  return G__12334__delegate.call(this, args__11447__auto__);
                };
                G__12334.cljs$lang$maxFixedArity = 0;
                G__12334.cljs$lang$applyTo = function(arglist__12336) {
                  var args__11447__auto__ = cljs.core.seq(arglist__12336);
                  return G__12334__delegate(args__11447__auto__);
                };
                G__12334.cljs$core$IFn$_invoke$arity$variadic = G__12334__delegate;
                return G__12334;
              }();
            }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12324_12326, _STAR_current_length_STAR_12325_12327, vec__12321, ns_sym, ns_name, stuff, vec__12322, doc_str, stuff__$1, vec__12323, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_12337__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_12337__$1));
          var temp__4657__auto___12338 = cljs.core.next.call(null, references_12337__$1);
          if (temp__4657__auto___12338) {
            var references_12339__$2 = temp__4657__auto___12338;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__12340 = references_12339__$2;
            references_12337__$1 = G__12340;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12325_12327;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12324_12326;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__11445__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
  return function(format_in__11445__auto__, cf__11446__auto__) {
    return function() {
      var G__12341__delegate = function(args__11447__auto__) {
        var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
        return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
      };
      var G__12341 = function(var_args) {
        var args__11447__auto__ = null;
        if (arguments.length > 0) {
          var G__12342__i = 0, G__12342__a = new Array(arguments.length - 0);
          while (G__12342__i < G__12342__a.length) {
            G__12342__a[G__12342__i] = arguments[G__12342__i + 0];
            ++G__12342__i;
          }
          args__11447__auto__ = new cljs.core.IndexedSeq(G__12342__a, 0);
        }
        return G__12341__delegate.call(this, args__11447__auto__);
      };
      G__12341.cljs$lang$maxFixedArity = 0;
      G__12341.cljs$lang$applyTo = function(arglist__12343) {
        var args__11447__auto__ = cljs.core.seq(arglist__12343);
        return G__12341__delegate(args__11447__auto__);
      };
      G__12341.cljs$core$IFn$_invoke$arity$variadic = G__12341__delegate;
      return G__12341;
    }();
  }(format_in__11445__auto__, cf__11446__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__11445__auto__ = " ~_";
        var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
        return function(format_in__11445__auto__, cf__11446__auto__) {
          return function() {
            var G__12344__delegate = function(args__11447__auto__) {
              var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
              return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
            };
            var G__12344 = function(var_args) {
              var args__11447__auto__ = null;
              if (arguments.length > 0) {
                var G__12345__i = 0, G__12345__a = new Array(arguments.length - 0);
                while (G__12345__i < G__12345__a.length) {
                  G__12345__a[G__12345__i] = arguments[G__12345__i + 0];
                  ++G__12345__i;
                }
                args__11447__auto__ = new cljs.core.IndexedSeq(G__12345__a, 0);
              }
              return G__12344__delegate.call(this, args__11447__auto__);
            };
            G__12344.cljs$lang$maxFixedArity = 0;
            G__12344.cljs$lang$applyTo = function(arglist__12346) {
              var args__11447__auto__ = cljs.core.seq(arglist__12346);
              return G__12344__delegate(args__11447__auto__);
            };
            G__12344.cljs$core$IFn$_invoke$arity$variadic = G__12344__delegate;
            return G__12344;
          }();
        }(format_in__11445__auto__, cf__11446__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__11445__auto__ = " ~@_";
        var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
        return function(format_in__11445__auto__, cf__11446__auto__) {
          return function() {
            var G__12347__delegate = function(args__11447__auto__) {
              var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
              return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
            };
            var G__12347 = function(var_args) {
              var args__11447__auto__ = null;
              if (arguments.length > 0) {
                var G__12348__i = 0, G__12348__a = new Array(arguments.length - 0);
                while (G__12348__i < G__12348__a.length) {
                  G__12348__a[G__12348__i] = arguments[G__12348__i + 0];
                  ++G__12348__i;
                }
                args__11447__auto__ = new cljs.core.IndexedSeq(G__12348__a, 0);
              }
              return G__12347__delegate.call(this, args__11447__auto__);
            };
            G__12347.cljs$lang$maxFixedArity = 0;
            G__12347.cljs$lang$applyTo = function(arglist__12349) {
              var args__11447__auto__ = cljs.core.seq(arglist__12349);
              return G__12347__delegate(args__11447__auto__);
            };
            G__12347.cljs$core$IFn$_invoke$arity$variadic = G__12347__delegate;
            return G__12347;
          }();
        }(format_in__11445__auto__, cf__11446__auto__);
      })().call(null);
    }
    return function() {
      var format_in__11445__auto__ = "~{~w~^ ~_~}";
      var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
      return function(format_in__11445__auto__, cf__11446__auto__) {
        return function() {
          var G__12350__delegate = function(args__11447__auto__) {
            var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
            return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
          };
          var G__12350 = function(var_args) {
            var args__11447__auto__ = null;
            if (arguments.length > 0) {
              var G__12351__i = 0, G__12351__a = new Array(arguments.length - 0);
              while (G__12351__i < G__12351__a.length) {
                G__12351__a[G__12351__i] = arguments[G__12351__i + 0];
                ++G__12351__i;
              }
              args__11447__auto__ = new cljs.core.IndexedSeq(G__12351__a, 0);
            }
            return G__12350__delegate.call(this, args__11447__auto__);
          };
          G__12350.cljs$lang$maxFixedArity = 0;
          G__12350.cljs$lang$applyTo = function(arglist__12352) {
            var args__11447__auto__ = cljs.core.seq(arglist__12352);
            return G__12350__delegate(args__11447__auto__);
          };
          G__12350.cljs$core$IFn$_invoke$arity$variadic = G__12350__delegate;
          return G__12350;
        }();
      }(format_in__11445__auto__, cf__11446__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__11445__auto__ = " ~_~{~w~^ ~_~}";
      var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
      return function(format_in__11445__auto__, cf__11446__auto__) {
        return function() {
          var G__12353__delegate = function(args__11447__auto__) {
            var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
            return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
          };
          var G__12353 = function(var_args) {
            var args__11447__auto__ = null;
            if (arguments.length > 0) {
              var G__12354__i = 0, G__12354__a = new Array(arguments.length - 0);
              while (G__12354__i < G__12354__a.length) {
                G__12354__a[G__12354__i] = arguments[G__12354__i + 0];
                ++G__12354__i;
              }
              args__11447__auto__ = new cljs.core.IndexedSeq(G__12354__a, 0);
            }
            return G__12353__delegate.call(this, args__11447__auto__);
          };
          G__12353.cljs$lang$maxFixedArity = 0;
          G__12353.cljs$lang$applyTo = function(arglist__12355) {
            var args__11447__auto__ = cljs.core.seq(arglist__12355);
            return G__12353__delegate(args__11447__auto__);
          };
          G__12353.cljs$core$IFn$_invoke$arity$variadic = G__12353__delegate;
          return G__12353;
        }();
      }(format_in__11445__auto__, cf__11446__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__12361 = alis;
    var defn_sym = cljs.core.nth.call(null, vec__12361, 0, null);
    var defn_name = cljs.core.nth.call(null, vec__12361, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__12361, 2);
    var vec__12362 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__12362, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__12362, 1, null);
    var vec__12363 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__12363, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__12363, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_12364_12366 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_12365_12367 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__11445__auto__ = "~w ~1I~@_~w";
          var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
          return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12364_12366, _STAR_current_length_STAR_12365_12367, vec__12361, defn_sym, defn_name, stuff, vec__12362, doc_str, stuff__$1, vec__12363, attr_map, stuff__$2) {
            return function() {
              var G__12368__delegate = function(args__11447__auto__) {
                var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
              };
              var G__12368 = function(var_args) {
                var args__11447__auto__ = null;
                if (arguments.length > 0) {
                  var G__12369__i = 0, G__12369__a = new Array(arguments.length - 0);
                  while (G__12369__i < G__12369__a.length) {
                    G__12369__a[G__12369__i] = arguments[G__12369__i + 0];
                    ++G__12369__i;
                  }
                  args__11447__auto__ = new cljs.core.IndexedSeq(G__12369__a, 0);
                }
                return G__12368__delegate.call(this, args__11447__auto__);
              };
              G__12368.cljs$lang$maxFixedArity = 0;
              G__12368.cljs$lang$applyTo = function(arglist__12370) {
                var args__11447__auto__ = cljs.core.seq(arglist__12370);
                return G__12368__delegate(args__11447__auto__);
              };
              G__12368.cljs$core$IFn$_invoke$arity$variadic = G__12368__delegate;
              return G__12368;
            }();
          }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12364_12366, _STAR_current_length_STAR_12365_12367, vec__12361, defn_sym, defn_name, stuff, vec__12362, doc_str, stuff__$1, vec__12363, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__11445__auto__ = " ~_~w";
            var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
            return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12364_12366, _STAR_current_length_STAR_12365_12367, vec__12361, defn_sym, defn_name, stuff, vec__12362, doc_str, stuff__$1, vec__12363, attr_map, stuff__$2) {
              return function() {
                var G__12371__delegate = function(args__11447__auto__) {
                  var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                  return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                };
                var G__12371 = function(var_args) {
                  var args__11447__auto__ = null;
                  if (arguments.length > 0) {
                    var G__12372__i = 0, G__12372__a = new Array(arguments.length - 0);
                    while (G__12372__i < G__12372__a.length) {
                      G__12372__a[G__12372__i] = arguments[G__12372__i + 0];
                      ++G__12372__i;
                    }
                    args__11447__auto__ = new cljs.core.IndexedSeq(G__12372__a, 0);
                  }
                  return G__12371__delegate.call(this, args__11447__auto__);
                };
                G__12371.cljs$lang$maxFixedArity = 0;
                G__12371.cljs$lang$applyTo = function(arglist__12373) {
                  var args__11447__auto__ = cljs.core.seq(arglist__12373);
                  return G__12371__delegate(args__11447__auto__);
                };
                G__12371.cljs$core$IFn$_invoke$arity$variadic = G__12371__delegate;
                return G__12371;
              }();
            }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12364_12366, _STAR_current_length_STAR_12365_12367, vec__12361, defn_sym, defn_name, stuff, vec__12362, doc_str, stuff__$1, vec__12363, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__11445__auto__ = " ~_~w";
            var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
            return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12364_12366, _STAR_current_length_STAR_12365_12367, vec__12361, defn_sym, defn_name, stuff, vec__12362, doc_str, stuff__$1, vec__12363, attr_map, stuff__$2) {
              return function() {
                var G__12374__delegate = function(args__11447__auto__) {
                  var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                  return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
                };
                var G__12374 = function(var_args) {
                  var args__11447__auto__ = null;
                  if (arguments.length > 0) {
                    var G__12375__i = 0, G__12375__a = new Array(arguments.length - 0);
                    while (G__12375__i < G__12375__a.length) {
                      G__12375__a[G__12375__i] = arguments[G__12375__i + 0];
                      ++G__12375__i;
                    }
                    args__11447__auto__ = new cljs.core.IndexedSeq(G__12375__a, 0);
                  }
                  return G__12374__delegate.call(this, args__11447__auto__);
                };
                G__12374.cljs$lang$maxFixedArity = 0;
                G__12374.cljs$lang$applyTo = function(arglist__12376) {
                  var args__11447__auto__ = cljs.core.seq(arglist__12376);
                  return G__12374__delegate(args__11447__auto__);
                };
                G__12374.cljs$core$IFn$_invoke$arity$variadic = G__12374__delegate;
                return G__12374;
              }();
            }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12364_12366, _STAR_current_length_STAR_12365_12367, vec__12361, defn_sym, defn_name, stuff, vec__12362, doc_str, stuff__$1, vec__12363, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__6210__auto__ = doc_str;
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__6210__auto__ = doc_str;
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12365_12367;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12364_12366;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12382_12387 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12383_12388 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count12384_12389 = 0;
      var binding_12390 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count12384_12389 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_12390)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_12385_12391 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_12386_12392 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_12390));
                if (cljs.core.next.call(null, binding_12390)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_12390));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12386_12392;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12385_12391;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_12390))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__12393 = length_count12384_12389 + 1;
              var G__12394 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_12390));
              length_count12384_12389 = G__12393;
              binding_12390 = G__12394;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12383_12388;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12382_12387;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12397_12399 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12398_12400 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__11445__auto__ = "~w ~1I~@_";
          var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
          return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12397_12399, _STAR_current_length_STAR_12398_12400, base_sym) {
            return function() {
              var G__12401__delegate = function(args__11447__auto__) {
                var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
              };
              var G__12401 = function(var_args) {
                var args__11447__auto__ = null;
                if (arguments.length > 0) {
                  var G__12402__i = 0, G__12402__a = new Array(arguments.length - 0);
                  while (G__12402__i < G__12402__a.length) {
                    G__12402__a[G__12402__i] = arguments[G__12402__i + 0];
                    ++G__12402__i;
                  }
                  args__11447__auto__ = new cljs.core.IndexedSeq(G__12402__a, 0);
                }
                return G__12401__delegate.call(this, args__11447__auto__);
              };
              G__12401.cljs$lang$maxFixedArity = 0;
              G__12401.cljs$lang$applyTo = function(arglist__12403) {
                var args__11447__auto__ = cljs.core.seq(arglist__12403);
                return G__12401__delegate(args__11447__auto__);
              };
              G__12401.cljs$core$IFn$_invoke$arity$variadic = G__12401__delegate;
              return G__12401;
            }();
          }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12397_12399, _STAR_current_length_STAR_12398_12400, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__11445__auto__ = " ~_~{~w~^ ~_~}";
          var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
          return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12397_12399, _STAR_current_length_STAR_12398_12400, base_sym) {
            return function() {
              var G__12404__delegate = function(args__11447__auto__) {
                var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
              };
              var G__12404 = function(var_args) {
                var args__11447__auto__ = null;
                if (arguments.length > 0) {
                  var G__12405__i = 0, G__12405__a = new Array(arguments.length - 0);
                  while (G__12405__i < G__12405__a.length) {
                    G__12405__a[G__12405__i] = arguments[G__12405__i + 0];
                    ++G__12405__i;
                  }
                  args__11447__auto__ = new cljs.core.IndexedSeq(G__12405__a, 0);
                }
                return G__12404__delegate.call(this, args__11447__auto__);
              };
              G__12404.cljs$lang$maxFixedArity = 0;
              G__12404.cljs$lang$applyTo = function(arglist__12406) {
                var args__11447__auto__ = cljs.core.seq(arglist__12406);
                return G__12404__delegate(args__11447__auto__);
              };
              G__12404.cljs$core$IFn$_invoke$arity$variadic = G__12404__delegate;
              return G__12404;
            }();
          }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12397_12399, _STAR_current_length_STAR_12398_12400, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12398_12400;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12397_12399;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__11445__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
  return function(format_in__11445__auto__, cf__11446__auto__) {
    return function() {
      var G__12407__delegate = function(args__11447__auto__) {
        var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
        return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
      };
      var G__12407 = function(var_args) {
        var args__11447__auto__ = null;
        if (arguments.length > 0) {
          var G__12408__i = 0, G__12408__a = new Array(arguments.length - 0);
          while (G__12408__i < G__12408__a.length) {
            G__12408__a[G__12408__i] = arguments[G__12408__i + 0];
            ++G__12408__i;
          }
          args__11447__auto__ = new cljs.core.IndexedSeq(G__12408__a, 0);
        }
        return G__12407__delegate.call(this, args__11447__auto__);
      };
      G__12407.cljs$lang$maxFixedArity = 0;
      G__12407.cljs$lang$applyTo = function(arglist__12409) {
        var args__11447__auto__ = cljs.core.seq(arglist__12409);
        return G__12407__delegate(args__11447__auto__);
      };
      G__12407.cljs$core$IFn$_invoke$arity$variadic = G__12407__delegate;
      return G__12407;
    }();
  }(format_in__11445__auto__, cf__11446__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12415_12420 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12416_12421 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count12417_12422 = 0;
        var alis_12423__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count12417_12422 < cljs.core._STAR_print_length_STAR_) {
            if (alis_12423__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_12418_12424 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_12419_12425 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_12423__$1));
                  if (cljs.core.next.call(null, alis_12423__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_12423__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12419_12425;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12418_12424;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_12423__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__12426 = length_count12417_12422 + 1;
                var G__12427 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_12423__$1));
                length_count12417_12422 = G__12426;
                alis_12423__$1 = G__12427;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12416_12421;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12415_12420;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_12433_12438 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_12434_12439 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__11445__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
          return function(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12433_12438, _STAR_current_length_STAR_12434_12439) {
            return function() {
              var G__12440__delegate = function(args__11447__auto__) {
                var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
                return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
              };
              var G__12440 = function(var_args) {
                var args__11447__auto__ = null;
                if (arguments.length > 0) {
                  var G__12441__i = 0, G__12441__a = new Array(arguments.length - 0);
                  while (G__12441__i < G__12441__a.length) {
                    G__12441__a[G__12441__i] = arguments[G__12441__i + 0];
                    ++G__12441__i;
                  }
                  args__11447__auto__ = new cljs.core.IndexedSeq(G__12441__a, 0);
                }
                return G__12440__delegate.call(this, args__11447__auto__);
              };
              G__12440.cljs$lang$maxFixedArity = 0;
              G__12440.cljs$lang$applyTo = function(arglist__12442) {
                var args__11447__auto__ = cljs.core.seq(arglist__12442);
                return G__12440__delegate(args__11447__auto__);
              };
              G__12440.cljs$core$IFn$_invoke$arity$variadic = G__12440__delegate;
              return G__12440;
            }();
          }(format_in__11445__auto__, cf__11446__auto__, _STAR_current_level_STAR_12433_12438, _STAR_current_length_STAR_12434_12439);
        }(), alis);
        var length_count12435_12443 = 0;
        var alis_12444__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count12435_12443 < cljs.core._STAR_print_length_STAR_) {
            if (alis_12444__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_12436_12445 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_12437_12446 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_12444__$1));
                  if (cljs.core.next.call(null, alis_12444__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_12444__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12437_12446;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12436_12445;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_12444__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__12447 = length_count12435_12443 + 1;
                var G__12448 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_12444__$1));
                length_count12435_12443 = G__12447;
                alis_12444__$1 = G__12448;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12434_12439;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12433_12438;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_12452 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_12452, args, nlis) {
      return function(p1__12449_SHARP_, p2__12450_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12449_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__12450_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_12452, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__11445__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__11446__auto__ = typeof format_in__11445__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__11445__auto__) : format_in__11445__auto__;
        return function(format_in__11445__auto__, cf__11446__auto__, _STAR_symbol_map_STAR_12452, args, nlis) {
          return function() {
            var G__12453__delegate = function(args__11447__auto__) {
              var navigator__11448__auto__ = cljs.pprint.init_navigator.call(null, args__11447__auto__);
              return cljs.pprint.execute_format.call(null, cf__11446__auto__, navigator__11448__auto__);
            };
            var G__12453 = function(var_args) {
              var args__11447__auto__ = null;
              if (arguments.length > 0) {
                var G__12454__i = 0, G__12454__a = new Array(arguments.length - 0);
                while (G__12454__i < G__12454__a.length) {
                  G__12454__a[G__12454__i] = arguments[G__12454__i + 0];
                  ++G__12454__i;
                }
                args__11447__auto__ = new cljs.core.IndexedSeq(G__12454__a, 0);
              }
              return G__12453__delegate.call(this, args__11447__auto__);
            };
            G__12453.cljs$lang$maxFixedArity = 0;
            G__12453.cljs$lang$applyTo = function(arglist__12455) {
              var args__11447__auto__ = cljs.core.seq(arglist__12455);
              return G__12453__delegate(args__11447__auto__);
            };
            G__12453.cljs$core$IFn$_invoke$arity$variadic = G__12453__delegate;
            return G__12453;
          }();
        }(format_in__11445__auto__, cf__11446__auto__, _STAR_symbol_map_STAR_12452, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_12452;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_12459_12462 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_12460_12463 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count12461_12464 = 0;
      var alis_12465__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count12461_12464 < cljs.core._STAR_print_length_STAR_) {
          if (alis_12465__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_12465__$1));
            if (cljs.core.next.call(null, alis_12465__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__12466 = length_count12461_12464 + 1;
              var G__12467 = cljs.core.next.call(null, alis_12465__$1);
              length_count12461_12464 = G__12466;
              alis_12465__$1 = G__12467;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_12460_12463;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_12459_12462;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__6990__auto__ = function cljs$pprint$two_forms_$_iter__12472(s__12473) {
      return new cljs.core.LazySeq(null, function() {
        var s__12473__$1 = s__12473;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__12473__$1);
          if (temp__4657__auto__) {
            var s__12473__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__12473__$2)) {
              var c__6988__auto__ = cljs.core.chunk_first.call(null, s__12473__$2);
              var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
              var b__12475 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
              if (function() {
                var i__12474 = 0;
                while (true) {
                  if (i__12474 < size__6989__auto__) {
                    var x = cljs.core._nth.call(null, c__6988__auto__, i__12474);
                    cljs.core.chunk_append.call(null, b__12475, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__12476 = i__12474 + 1;
                    i__12474 = G__12476;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12475), cljs$pprint$two_forms_$_iter__12472.call(null, cljs.core.chunk_rest.call(null, s__12473__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12475), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__12473__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__12472.call(null, cljs.core.rest.call(null, s__12473__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__6990__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__12477_SHARP_) {
      var vec__12479 = p1__12477_SHARP_;
      var s = cljs.core.nth.call(null, vec__12479, 0, null);
      var f = cljs.core.nth.call(null, vec__12479, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__6210__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__6210__auto__)) {
          return or__6210__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__12477_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4655__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4655__auto__)) {
      var special_form = temp__4655__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4655__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var arg_num = temp__4655__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__7134__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7138__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7138__auto__, method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__6541__auto__ = 0;
    var y__6542__auto__ = width - cljs.core.count.call(null, s);
    return x__6541__auto__ > y__6542__auto__ ? x__6541__auto__ : y__6542__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var args12483 = [];
  var len__7279__auto___12499 = arguments.length;
  var i__7280__auto___12500 = 0;
  while (true) {
    if (i__7280__auto___12500 < len__7279__auto___12499) {
      args12483.push(arguments[i__7280__auto___12500]);
      var G__12501 = i__7280__auto___12500 + 1;
      i__7280__auto___12500 = G__12501;
      continue;
    } else {
    }
    break;
  }
  var G__12485 = args12483.length;
  switch(G__12485) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12483.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_12486 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_12486) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_12486) {
            return function(p1__12480_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__12480_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_12486), rows));
        };
      }(_STAR_print_newline_STAR_12486), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_12486) {
        return function(p1__12481_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__12481_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_12486), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_12486) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__6990__auto__ = function(widths, spacers, _STAR_print_newline_STAR_12486) {
              return function cljs$pprint$iter__12487(s__12488) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_12486) {
                  return function() {
                    var s__12488__$1 = s__12488;
                    while (true) {
                      var temp__4657__auto__ = cljs.core.seq.call(null, s__12488__$1);
                      if (temp__4657__auto__) {
                        var s__12488__$2 = temp__4657__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__12488__$2)) {
                          var c__6988__auto__ = cljs.core.chunk_first.call(null, s__12488__$2);
                          var size__6989__auto__ = cljs.core.count.call(null, c__6988__auto__);
                          var b__12490 = cljs.core.chunk_buffer.call(null, size__6989__auto__);
                          if (function() {
                            var i__12489 = 0;
                            while (true) {
                              if (i__12489 < size__6989__auto__) {
                                var vec__12493 = cljs.core._nth.call(null, c__6988__auto__, i__12489);
                                var col = cljs.core.nth.call(null, vec__12493, 0, null);
                                var width = cljs.core.nth.call(null, vec__12493, 1, null);
                                cljs.core.chunk_append.call(null, b__12490, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__12503 = i__12489 + 1;
                                i__12489 = G__12503;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12490), cljs$pprint$iter__12487.call(null, cljs.core.chunk_rest.call(null, s__12488__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12490), null);
                          }
                        } else {
                          var vec__12494 = cljs.core.first.call(null, s__12488__$2);
                          var col = cljs.core.nth.call(null, vec__12494, 0, null);
                          var width = cljs.core.nth.call(null, vec__12494, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__12487.call(null, cljs.core.rest.call(null, s__12488__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_12486), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_12486);
            return iter__6990__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__6990__auto__, widths, spacers, _STAR_print_newline_STAR_12486) {
              return function(p1__12482_SHARP_) {
                return cljs.core.get.call(null, row, p1__12482_SHARP_);
              };
            }(iter__6990__auto__, widths, spacers, _STAR_print_newline_STAR_12486), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_12486);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__12495 = cljs.core.seq.call(null, rows);
      var chunk__12496 = null;
      var count__12497 = 0;
      var i__12498 = 0;
      while (true) {
        if (i__12498 < count__12497) {
          var row = cljs.core._nth.call(null, chunk__12496, i__12498);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__12504 = seq__12495;
          var G__12505 = chunk__12496;
          var G__12506 = count__12497;
          var G__12507 = i__12498 + 1;
          seq__12495 = G__12504;
          chunk__12496 = G__12505;
          count__12497 = G__12506;
          i__12498 = G__12507;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__12495);
          if (temp__4657__auto__) {
            var seq__12495__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__12495__$1)) {
              var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__12495__$1);
              var G__12508 = cljs.core.chunk_rest.call(null, seq__12495__$1);
              var G__12509 = c__7021__auto__;
              var G__12510 = cljs.core.count.call(null, c__7021__auto__);
              var G__12511 = 0;
              seq__12495 = G__12508;
              chunk__12496 = G__12509;
              count__12497 = G__12510;
              i__12498 = G__12511;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__12495__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__12512 = cljs.core.next.call(null, seq__12495__$1);
              var G__12513 = null;
              var G__12514 = 0;
              var G__12515 = 0;
              seq__12495 = G__12512;
              chunk__12496 = G__12513;
              count__12497 = G__12514;
              i__12498 = G__12515;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_12486;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var args12741 = [];
  var len__7279__auto___12745 = arguments.length;
  var i__7280__auto___12746 = 0;
  while (true) {
    if (i__7280__auto___12746 < len__7279__auto___12745) {
      args12741.push(arguments[i__7280__auto___12746]);
      var G__12747 = i__7280__auto___12746 + 1;
      i__7280__auto___12746 = G__12747;
      continue;
    } else {
    }
    break;
  }
  var G__12743 = args12741.length;
  switch(G__12743) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12741.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__12744 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__12744, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__12744;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__6210__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___12752 = arguments.length;
  var i__7280__auto___12753 = 0;
  while (true) {
    if (i__7280__auto___12753 < len__7279__auto___12752) {
      args__7286__auto__.push(arguments[i__7280__auto___12753]);
      var G__12754 = i__7280__auto___12753 + 1;
      i__7280__auto___12753 = G__12754;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 2 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__7287__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq12749) {
  var G__12750 = cljs.core.first.call(null, seq12749);
  var seq12749__$1 = cljs.core.next.call(null, seq12749);
  var G__12751 = cljs.core.first.call(null, seq12749__$1);
  var seq12749__$2 = cljs.core.next.call(null, seq12749__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__12750, G__12751, seq12749__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__12758 = m;
  var map__12758__$1 = (!(map__12758 == null) ? map__12758.cljs$lang$protocol_mask$partition0$ & 64 || map__12758.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12758) : map__12758;
  var file = cljs.core.get.call(null, map__12758__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__12758__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__12758__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__12758, map__12758__$1, file, line, column) {
    return function(p1__12755_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__12755_SHARP_));
    };
  }(map__12758, map__12758__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__7134__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__7135__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__7136__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__7137__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__7138__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__, hierarchy__7138__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__, hierarchy__7138__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__7138__auto__, method_table__7134__auto__, prefer_table__7135__auto__, method_cache__7136__auto__, cached_hierarchy__7137__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__6210__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___12760 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___12760)) {
    var message_12761 = temp__4657__auto___12760;
    cljs.core.println.call(null, message_12761);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___12762 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___12762)) {
    var message_12763 = temp__4657__auto___12762;
    cljs.core.println.call(null, message_12763);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var source_map = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var columns = temp__4655__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4655__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4655__auto____$2)) {
          var mapping = temp__4655__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4655__auto__ = function() {
    var and__6198__auto__ = typeof exception.stack === "string";
    if (and__6198__auto__) {
      var G__12769 = exception.stack;
      var G__12769__$1 = G__12769 == null ? null : clojure.string.split_lines.call(null, G__12769);
      var G__12769__$2 = G__12769__$1 == null ? null : cljs.core.get.call(null, G__12769__$1, depth);
      if (G__12769__$2 == null) {
        return null;
      } else {
        return clojure.string.trim.call(null, G__12769__$2);
      }
    } else {
      return and__6198__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var stack_element = temp__4655__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__12770 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__12770, 0, null);
    var column = cljs.core.nth.call(null, vec__12770, 1, null);
    var vec__12771 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__12771, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__12771, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__12771, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__12773 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__12773) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4657__auto__) {
      var xs__5205__auto__ = temp__4657__auto__;
      var f = cljs.core.first.call(null, xs__5205__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__5205__auto__, temp__4657__auto__), null);
          return function(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__);
        }());
      } else {
        var G__12779 = function() {
          var G__12778 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__12778);
          } else {
            return G__12778;
          }
        }();
        fns = G__12779;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__12781 = fns;
  if (G__12781 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__12781, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e12784) {
      var e = e12784;
      var G__12785 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__12785) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var t = temp__4655__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__12788 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__12788, 0, null);
  var types = vec__12788;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str("(not-any? nil? types)")].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str("(\x3e 2 (count types))")].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__12796) {
    var vec__12797 = p__12796;
    var ns = cljs.core.nth.call(null, vec__12797, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__12797, 1, null);
    return function(vec__12797, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__12798 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__12798) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1) {
                    return function() {
                      var seq__12799 = cljs.core.seq.call(null, vars__$1);
                      var chunk__12800 = null;
                      var count__12801 = 0;
                      var i__12802 = 0;
                      while (true) {
                        if (i__12802 < count__12801) {
                          var v = cljs.core._nth.call(null, chunk__12800, i__12802);
                          var temp__4657__auto___12804 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4657__auto___12804)) {
                            var t_12805 = temp__4657__auto___12804;
                            each_fixture_fn.call(null, function(seq__12799, chunk__12800, count__12801, i__12802, t_12805, temp__4657__auto___12804, v, each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_12805)));
                              };
                            }(seq__12799, chunk__12800, count__12801, i__12802, t_12805, temp__4657__auto___12804, v, each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1));
                          } else {
                          }
                          var G__12806 = seq__12799;
                          var G__12807 = chunk__12800;
                          var G__12808 = count__12801;
                          var G__12809 = i__12802 + 1;
                          seq__12799 = G__12806;
                          chunk__12800 = G__12807;
                          count__12801 = G__12808;
                          i__12802 = G__12809;
                          continue;
                        } else {
                          var temp__4657__auto__ = cljs.core.seq.call(null, seq__12799);
                          if (temp__4657__auto__) {
                            var seq__12799__$1 = temp__4657__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__12799__$1)) {
                              var c__7021__auto__ = cljs.core.chunk_first.call(null, seq__12799__$1);
                              var G__12810 = cljs.core.chunk_rest.call(null, seq__12799__$1);
                              var G__12811 = c__7021__auto__;
                              var G__12812 = cljs.core.count.call(null, c__7021__auto__);
                              var G__12813 = 0;
                              seq__12799 = G__12810;
                              chunk__12800 = G__12811;
                              count__12801 = G__12812;
                              i__12802 = G__12813;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__12799__$1);
                              var temp__4657__auto___12814__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4657__auto___12814__$1)) {
                                var t_12815 = temp__4657__auto___12814__$1;
                                each_fixture_fn.call(null, function(seq__12799, chunk__12800, count__12801, i__12802, t_12815, temp__4657__auto___12814__$1, v, seq__12799__$1, temp__4657__auto__, each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_12815)));
                                  };
                                }(seq__12799, chunk__12800, count__12801, i__12802, t_12815, temp__4657__auto___12814__$1, v, seq__12799__$1, temp__4657__auto__, each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1));
                              } else {
                              }
                              var G__12816 = cljs.core.next.call(null, seq__12799__$1);
                              var G__12817 = null;
                              var G__12818 = 0;
                              var G__12819 = 0;
                              seq__12799 = G__12816;
                              chunk__12800 = G__12817;
                              count__12801 = G__12818;
                              i__12802 = G__12819;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1));
                };
              }(each_fixture_fn, G__12798, env, once_fixtures, each_fixtures, vec__12797, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__12797, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__12839 = cnt + 1;
      cnt = G__12839;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__7124__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__7124__auto__) {
      var v_12840 = this$.pop();
      if (keep_QMARK_.call(null, v_12840)) {
        this$.unshift(v_12840);
      } else {
      }
      var G__12841 = x + 1;
      x = G__12841;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str("(\x3e n 0)")].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
if (typeof cljs.core.async.impl.buffers.NO_VAL !== "undefined") {
} else {
  cljs.core.async.impl.buffers.NO_VAL = new Object;
}
cljs.core.async.impl.buffers.undelivered_QMARK_ = function cljs$core$async$impl$buffers$undelivered_QMARK_(val) {
  return cljs.core.async.impl.buffers.NO_VAL === val;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    self__.val = itm;
  } else {
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return self__.val = null;
  } else {
    return null;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return 0;
  } else {
    return 1;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function cljs$core$async$impl$buffers$__GT_PromiseBuffer(val) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(val);
};
cljs.core.async.impl.buffers.promise_buffer = function cljs$core$async$impl$buffers$promise_buffer() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_12844 = 0;
  while (true) {
    var m_12845 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_12845 == null) {
    } else {
      m_12845.call(null);
      if (count_12844 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__12846 = count_12844 + 1;
        count_12844 = G__12846;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__6198__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__6198__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__6198__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852 = function(box, val, meta12853) {
      this.box = box;
      this.val = val;
      this.meta12853 = meta12853;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12854, meta12853__$1) {
      var self__ = this;
      var _12854__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852(self__.box, self__.val, meta12853__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12854) {
      var self__ = this;
      var _12854__$1 = this;
      return self__.meta12853;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta12853", "meta12853", -227870985, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels12852";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels12852");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels12852 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels12852(box__$1, val__$1, meta12853) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852(box__$1, val__$1, meta12853);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels12852(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__6873__auto__ = this$ == null ? null : this$;
    var m__6874__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, this$);
    } else {
      var m__6874__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_12855 = self__.puts.pop();
    if (putter_12855 == null) {
    } else {
      var put_handler_12856 = putter_12855.handler;
      var val_12857 = putter_12855.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_12856)) {
        var put_cb_12858 = cljs.core.async.impl.protocols.commit.call(null, put_handler_12856);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_12858, put_handler_12856, val_12857, putter_12855, this$__$1) {
          return function() {
            return put_cb_12858.call(null, true);
          };
        }(put_cb_12858, put_handler_12856, val_12857, putter_12855, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str("(not (nil? val))")].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = self__.buf;
      if (cljs.core.truth_(and__6198__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__6198__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_12859 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_12859)) {
            var take_cb_12860 = cljs.core.async.impl.protocols.commit.call(null, taker_12859);
            var val_12861__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_12860, val_12861__$1, taker_12859, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_12860.call(null, val_12861__$1);
              };
            }(take_cb_12860, val_12861__$1, taker_12859, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)")].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        } else {
        }
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_12862 = self__.puts.pop();
          if (putter_12862 == null) {
          } else {
            var put_handler_12863 = putter_12862.handler;
            var val_12864 = putter_12862.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_12863)) {
              var put_cb_12865 = cljs.core.async.impl.protocols.commit.call(null, put_handler_12863);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_12865, put_handler_12863, val_12864, putter_12862, _, retval, this$__$1) {
                return function() {
                  return put_cb_12865.call(null, true);
                };
              }(put_cb_12865, put_handler_12863, val_12864, putter_12862, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_12864))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__6198__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__6198__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__6198__auto__;
            }
          }())) {
            var has_val = function() {
              var and__6198__auto__ = self__.buf;
              if (cljs.core.truth_(and__6198__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__6198__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)")].join(""));
            }
            self__.takes.unbounded_unshift(handler);
          } else {
          }
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__6198__auto__ = self__.buf;
      if (cljs.core.truth_(and__6198__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__6198__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_12866 = self__.takes.pop();
      if (taker_12866 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_12866)) {
          var take_cb_12867 = cljs.core.async.impl.protocols.commit.call(null, taker_12866);
          var val_12868 = cljs.core.truth_(function() {
            var and__6198__auto__ = self__.buf;
            if (cljs.core.truth_(and__6198__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__6198__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_12867, val_12868, taker_12866, this$__$1) {
            return function() {
              return take_cb_12867.call(null, val_12868);
            };
          }(take_cb_12867, val_12868, taker_12866, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    if (cljs.core.truth_(self__.buf)) {
      cljs.core.async.impl.protocols.close_buf_BANG_.call(null, self__.buf);
    } else {
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__6210__auto__ = exh;
    if (cljs.core.truth_(or__6210__auto__)) {
      return or__6210__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var args12869 = [];
  var len__7279__auto___12874 = arguments.length;
  var i__7280__auto___12875 = 0;
  while (true) {
    if (i__7280__auto___12875 < len__7279__auto___12874) {
      args12869.push(arguments[i__7280__auto___12875]);
      var G__12876 = i__7280__auto___12875 + 1;
      i__7280__auto___12875 = G__12876;
      continue;
    } else {
    }
    break;
  }
  var G__12871 = args12869.length;
  switch(G__12871) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12869.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__12878 = null;
        var G__12878__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e12872) {
            var t = e12872;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__12878__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e12873) {
            var t = e12873;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__12878 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__12878__1.call(this, buf__$1);
            case 2:
              return G__12878__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12878.cljs$core$IFn$_invoke$arity$1 = G__12878__1;
        G__12878.cljs$core$IFn$_invoke$arity$2 = G__12878__2;
        return G__12878;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs_uuid_utils");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
cljs_uuid_utils.uuid_string = function cljs_uuid_utils$uuid_string(a_uuid) {
  return [cljs.core.str(a_uuid.uuid)].join("");
};
cljs_uuid_utils.make_random_uuid = function cljs_uuid_utils$make_random_uuid() {
  var f = function cljs_uuid_utils$make_random_uuid_$_f() {
    return cljs.core.rand_int.call(null, 16).toString(16);
  };
  var g = function cljs_uuid_utils$make_random_uuid_$_g() {
    return (8 | 3 & cljs.core.rand_int.call(null, 15)).toString(16);
  };
  return new cljs.core.UUID((new goog.string.StringBuffer).append(f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), "-4", f.call(null), f.call(null), f.call(null), "-", g.call(null), f.call(null), f.call(null), f.call(null), "-", f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), f.call(null), 
  f.call(null)));
};
cljs_uuid_utils.uuid_regex = function() {
  var x = "[0-9a-fA-F]";
  return cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("-"), 
  cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str(x), cljs.core.str("$")].join(""));
}();
cljs_uuid_utils.valid_uuid_QMARK_ = function cljs_uuid_utils$valid_uuid_QMARK_(maybe_uuid) {
  var maybe_uuid_str = cljs.core._EQ_.call(null, cljs.core.type.call(null, maybe_uuid), cljs.core.UUID) ? cljs_uuid_utils.uuid_string.call(null, maybe_uuid) : typeof maybe_uuid === "string" ? maybe_uuid : false;
  if (cljs.core.truth_(maybe_uuid_str)) {
    return cljs.core.re_find.call(null, cljs_uuid_utils.uuid_regex, maybe_uuid_str);
  } else {
    return null;
  }
};
cljs_uuid_utils.make_uuid_from = function cljs_uuid_utils$make_uuid_from(maybe_uuid) {
  var temp__4657__auto__ = cljs_uuid_utils.valid_uuid_QMARK_.call(null, maybe_uuid);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var uuid = temp__4657__auto__;
    if (cljs.core._EQ_.call(null, cljs.core.type.call(null, maybe_uuid), cljs.core.UUID)) {
      return maybe_uuid;
    } else {
      return new cljs.core.UUID(uuid);
    }
  } else {
    return null;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var args14155 = [];
  var len__7279__auto___14158 = arguments.length;
  var i__7280__auto___14159 = 0;
  while (true) {
    if (i__7280__auto___14159 < len__7279__auto___14158) {
      args14155.push(arguments[i__7280__auto___14159]);
      var G__14160 = i__7280__auto___14159 + 1;
      i__7280__auto___14159 = G__14160;
      continue;
    } else {
    }
    break;
  }
  var G__14157 = args14155.length;
  switch(G__14157) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14155.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__14162 = level + 1;
      level = G__14162;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var args14163 = [];
  var len__7279__auto___14166 = arguments.length;
  var i__7280__auto___14167 = 0;
  while (true) {
    if (i__7280__auto___14167 < len__7279__auto___14166) {
      args14163.push(arguments[i__7280__auto___14167]);
      var G__14168 = i__7280__auto___14167 + 1;
      i__7280__auto___14167 = G__14168;
      continue;
    } else {
    }
    break;
  }
  var G__14165 = args14163.length;
  switch(G__14165) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14163.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_14170 = 0;
  while (true) {
    if (i_14170 < arr.length) {
      arr[i_14170] = null;
      var G__14171 = i_14170 + 1;
      i_14170 = G__14171;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var args14172 = [];
  var len__7279__auto___14175 = arguments.length;
  var i__7280__auto___14176 = 0;
  while (true) {
    if (i__7280__auto___14176 < len__7279__auto___14175) {
      args14172.push(arguments[i__7280__auto___14176]);
      var G__14177 = i__7280__auto___14176 + 1;
      i__7280__auto___14176 = G__14177;
      continue;
    } else {
    }
    break;
  }
  var G__14174 = args14172.length;
  switch(G__14174) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14172.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4655__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var x_SINGLEQUOTE_ = temp__4655__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__14179 = x_SINGLEQUOTE_;
              x__$1 = G__14179;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__14180 = x__$1;
      var G__14181 = k;
      var G__14182 = level - 1;
      var G__14183 = update;
      x = G__14180;
      k = G__14181;
      level = G__14182;
      update = G__14183;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_14184 = self__.level + 1;
      while (true) {
        if (i_14184 <= new_level + 1) {
          update[i_14184] = self__.header;
          var G__14185 = i_14184 + 1;
          i_14184 = G__14185;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_14186 = 0;
    while (true) {
      if (i_14186 <= self__.level) {
        var links_14187 = update[i_14186].forward;
        if (links_14187[i_14186] === x__$1) {
          links_14187[i_14186] = x__$1.forward[i_14186];
          var G__14188 = i_14186 + 1;
          i_14186 = G__14188;
          continue;
        } else {
          var G__14189 = i_14186 + 1;
          i_14186 = G__14189;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__14190 = x_SINGLEQUOTE_;
              x__$1 = G__14190;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__14191 = nx;
        var G__14192 = level__$1 - 1;
        x = G__14191;
        level__$1 = G__14192;
        continue;
      } else {
        var G__14193 = x;
        var G__14194 = level__$1 - 1;
        x = G__14193;
        level__$1 = G__14194;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__14195 = x_SINGLEQUOTE_;
              x__$1 = G__14195;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__14196 = nx;
        var G__14197 = level__$1 - 1;
        x = G__14196;
        level__$1 = G__14197;
        continue;
      } else {
        var G__14198 = x;
        var G__14199 = level__$1 - 1;
        x = G__14198;
        level__$1 = G__14199;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
  return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__6210__auto__ = cljs.core.truth_(function() {
    var and__6198__auto__ = me;
    if (cljs.core.truth_(and__6198__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__6198__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__6210__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__6210__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(var_args) {
  var args14255 = [];
  var len__7279__auto___14261 = arguments.length;
  var i__7280__auto___14262 = 0;
  while (true) {
    if (i__7280__auto___14262 < len__7279__auto___14261) {
      args14255.push(arguments[i__7280__auto___14262]);
      var G__14263 = i__7280__auto___14262 + 1;
      i__7280__auto___14262 = G__14263;
      continue;
    } else {
    }
    break;
  }
  var G__14257 = args14255.length;
  switch(G__14257) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14255.length)].join(""));;
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.async.fn_handler.call(null, f, true);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(f, blockable) {
  if (typeof cljs.core.async.t_cljs$core$async14258 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async14258 = function(f, blockable, meta14259) {
      this.f = f;
      this.blockable = blockable;
      this.meta14259 = meta14259;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async14258.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14260, meta14259__$1) {
      var self__ = this;
      var _14260__$1 = this;
      return new cljs.core.async.t_cljs$core$async14258(self__.f, self__.blockable, meta14259__$1);
    };
    cljs.core.async.t_cljs$core$async14258.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14260) {
      var self__ = this;
      var _14260__$1 = this;
      return self__.meta14259;
    };
    cljs.core.async.t_cljs$core$async14258.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async14258.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async14258.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.blockable;
    };
    cljs.core.async.t_cljs$core$async14258.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async14258.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta14259", "meta14259", 1205594355, null)], null);
    };
    cljs.core.async.t_cljs$core$async14258.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async14258.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async14258";
    cljs.core.async.t_cljs$core$async14258.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async14258");
    };
    cljs.core.async.__GT_t_cljs$core$async14258 = function cljs$core$async$__GT_t_cljs$core$async14258(f__$1, blockable__$1, meta14259) {
      return new cljs.core.async.t_cljs$core$async14258(f__$1, blockable__$1, meta14259);
    };
  }
  return new cljs.core.async.t_cljs$core$async14258(f, blockable, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var args14267 = [];
  var len__7279__auto___14270 = arguments.length;
  var i__7280__auto___14271 = 0;
  while (true) {
    if (i__7280__auto___14271 < len__7279__auto___14270) {
      args14267.push(arguments[i__7280__auto___14271]);
      var G__14272 = i__7280__auto___14271 + 1;
      i__7280__auto___14271 = G__14272;
      continue;
    } else {
    }
    break;
  }
  var G__14269 = args14267.length;
  switch(G__14269) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14267.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str("buf-or-n")].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function cljs$core$async$promise_chan(var_args) {
  var args14274 = [];
  var len__7279__auto___14277 = arguments.length;
  var i__7280__auto___14278 = 0;
  while (true) {
    if (i__7280__auto___14278 < len__7279__auto___14277) {
      args14274.push(arguments[i__7280__auto___14278]);
      var G__14279 = i__7280__auto___14278 + 1;
      i__7280__auto___14278 = G__14279;
      continue;
    } else {
    }
    break;
  }
  var G__14276 = args14274.length;
  switch(G__14276) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14274.length)].join(""));;
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(xform) {
  return cljs.core.async.promise_chan.call(null, xform, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(xform, ex_handler) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), xform, ex_handler);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var args14281 = [];
  var len__7279__auto___14284 = arguments.length;
  var i__7280__auto___14285 = 0;
  while (true) {
    if (i__7280__auto___14285 < len__7279__auto___14284) {
      args14281.push(arguments[i__7280__auto___14285]);
      var G__14286 = i__7280__auto___14285 + 1;
      i__7280__auto___14285 = G__14286;
      continue;
    } else {
    }
    break;
  }
  var G__14283 = args14281.length;
  switch(G__14283) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14281.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_14288 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_14288);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_14288, ret) {
        return function() {
          return fn1.call(null, val_14288);
        };
      }(val_14288, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var args14289 = [];
  var len__7279__auto___14292 = arguments.length;
  var i__7280__auto___14293 = 0;
  while (true) {
    if (i__7280__auto___14293 < len__7279__auto___14292) {
      args14289.push(arguments[i__7280__auto___14293]);
      var G__14294 = i__7280__auto___14293 + 1;
      i__7280__auto___14293 = G__14294;
      continue;
    } else {
    }
    break;
  }
  var G__14291 = args14289.length;
  switch(G__14291) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14289.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ret = temp__4655__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var retb = temp__4655__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4655__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4655__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__7124__auto___14296 = n;
  var x_14297 = 0;
  while (true) {
    if (x_14297 < n__7124__auto___14296) {
      a[x_14297] = 0;
      var G__14298 = x_14297 + 1;
      x_14297 = G__14298;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14299 = i + 1;
      i = G__14299;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async14303 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async14303 = function(alt_flag, flag, meta14304) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta14304 = meta14304;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async14303.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_14305, meta14304__$1) {
        var self__ = this;
        var _14305__$1 = this;
        return new cljs.core.async.t_cljs$core$async14303(self__.alt_flag, self__.flag, meta14304__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async14303.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_14305) {
        var self__ = this;
        var _14305__$1 = this;
        return self__.meta14304;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async14303.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async14303.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async14303.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async14303.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async14303.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta14304", "meta14304", 1652053541, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async14303.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async14303.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async14303";
    cljs.core.async.t_cljs$core$async14303.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
        return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async14303");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async14303 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async14303(alt_flag__$1, flag__$1, meta14304) {
        return new cljs.core.async.t_cljs$core$async14303(alt_flag__$1, flag__$1, meta14304);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async14303(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async14309 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async14309 = function(alt_handler, flag, cb, meta14310) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta14310 = meta14310;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async14309.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14311, meta14310__$1) {
      var self__ = this;
      var _14311__$1 = this;
      return new cljs.core.async.t_cljs$core$async14309(self__.alt_handler, self__.flag, self__.cb, meta14310__$1);
    };
    cljs.core.async.t_cljs$core$async14309.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14311) {
      var self__ = this;
      var _14311__$1 = this;
      return self__.meta14310;
    };
    cljs.core.async.t_cljs$core$async14309.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async14309.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async14309.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async14309.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async14309.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta14310", "meta14310", 2058036936, null)], null);
    };
    cljs.core.async.t_cljs$core$async14309.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async14309.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async14309";
    cljs.core.async.t_cljs$core$async14309.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async14309");
    };
    cljs.core.async.__GT_t_cljs$core$async14309 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async14309(alt_handler__$1, flag__$1, cb__$1, meta14310) {
      return new cljs.core.async.t_cljs$core$async14309(alt_handler__$1, flag__$1, cb__$1, meta14310);
    };
  }
  return new cljs.core.async.t_cljs$core$async14309(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__14312_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14312_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14313_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14313_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__6210__auto__ = wport;
            if (cljs.core.truth_(or__6210__auto__)) {
              return or__6210__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__14314 = i + 1;
          i = G__14314;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__6210__auto__ = ret;
  if (cljs.core.truth_(or__6210__auto__)) {
    return or__6210__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4657__auto__ = function() {
        var and__6198__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__6198__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__6198__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4657__auto__)) {
        var got = temp__4657__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___14320 = arguments.length;
  var i__7280__auto___14321 = 0;
  while (true) {
    if (i__7280__auto___14321 < len__7279__auto___14320) {
      args__7286__auto__.push(arguments[i__7280__auto___14321]);
      var G__14322 = i__7280__auto___14321 + 1;
      i__7280__auto___14321 = G__14322;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 1 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__7287__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__14317) {
  var map__14318 = p__14317;
  var map__14318__$1 = (!(map__14318 == null) ? map__14318.cljs$lang$protocol_mask$partition0$ & 64 || map__14318.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14318) : map__14318;
  var opts = map__14318__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq14315) {
  var G__14316 = cljs.core.first.call(null, seq14315);
  var seq14315__$1 = cljs.core.next.call(null, seq14315);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14316, seq14315__$1);
};
cljs.core.async.offer_BANG_ = function cljs$core$async$offer_BANG_(port, val) {
  var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.poll_BANG_ = function cljs$core$async$poll_BANG_(port) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var args14323 = [];
  var len__7279__auto___14373 = arguments.length;
  var i__7280__auto___14374 = 0;
  while (true) {
    if (i__7280__auto___14374 < len__7279__auto___14373) {
      args14323.push(arguments[i__7280__auto___14374]);
      var G__14375 = i__7280__auto___14374 + 1;
      i__7280__auto___14374 = G__14375;
      continue;
    } else {
    }
    break;
  }
  var G__14325 = args14323.length;
  switch(G__14325) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14323.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__14210__auto___14377 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___14377) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___14377) {
          return function(state_14349) {
            var state_val_14350 = state_14349[1];
            if (state_val_14350 === 7) {
              var inst_14345 = state_14349[2];
              var state_14349__$1 = state_14349;
              var statearr_14351_14378 = state_14349__$1;
              statearr_14351_14378[2] = inst_14345;
              statearr_14351_14378[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14350 === 1) {
                var state_14349__$1 = state_14349;
                var statearr_14352_14379 = state_14349__$1;
                statearr_14352_14379[2] = null;
                statearr_14352_14379[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14350 === 4) {
                  var inst_14328 = state_14349[7];
                  var inst_14328__$1 = state_14349[2];
                  var inst_14329 = inst_14328__$1 == null;
                  var state_14349__$1 = function() {
                    var statearr_14353 = state_14349;
                    statearr_14353[7] = inst_14328__$1;
                    return statearr_14353;
                  }();
                  if (cljs.core.truth_(inst_14329)) {
                    var statearr_14354_14380 = state_14349__$1;
                    statearr_14354_14380[1] = 5;
                  } else {
                    var statearr_14355_14381 = state_14349__$1;
                    statearr_14355_14381[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14350 === 13) {
                    var state_14349__$1 = state_14349;
                    var statearr_14356_14382 = state_14349__$1;
                    statearr_14356_14382[2] = null;
                    statearr_14356_14382[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14350 === 6) {
                      var inst_14328 = state_14349[7];
                      var state_14349__$1 = state_14349;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14349__$1, 11, to, inst_14328);
                    } else {
                      if (state_val_14350 === 3) {
                        var inst_14347 = state_14349[2];
                        var state_14349__$1 = state_14349;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14349__$1, inst_14347);
                      } else {
                        if (state_val_14350 === 12) {
                          var state_14349__$1 = state_14349;
                          var statearr_14357_14383 = state_14349__$1;
                          statearr_14357_14383[2] = null;
                          statearr_14357_14383[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14350 === 2) {
                            var state_14349__$1 = state_14349;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14349__$1, 4, from);
                          } else {
                            if (state_val_14350 === 11) {
                              var inst_14338 = state_14349[2];
                              var state_14349__$1 = state_14349;
                              if (cljs.core.truth_(inst_14338)) {
                                var statearr_14358_14384 = state_14349__$1;
                                statearr_14358_14384[1] = 12;
                              } else {
                                var statearr_14359_14385 = state_14349__$1;
                                statearr_14359_14385[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14350 === 9) {
                                var state_14349__$1 = state_14349;
                                var statearr_14360_14386 = state_14349__$1;
                                statearr_14360_14386[2] = null;
                                statearr_14360_14386[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14350 === 5) {
                                  var state_14349__$1 = state_14349;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_14361_14387 = state_14349__$1;
                                    statearr_14361_14387[1] = 8;
                                  } else {
                                    var statearr_14362_14388 = state_14349__$1;
                                    statearr_14362_14388[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14350 === 14) {
                                    var inst_14343 = state_14349[2];
                                    var state_14349__$1 = state_14349;
                                    var statearr_14363_14389 = state_14349__$1;
                                    statearr_14363_14389[2] = inst_14343;
                                    statearr_14363_14389[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14350 === 10) {
                                      var inst_14335 = state_14349[2];
                                      var state_14349__$1 = state_14349;
                                      var statearr_14364_14390 = state_14349__$1;
                                      statearr_14364_14390[2] = inst_14335;
                                      statearr_14364_14390[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14350 === 8) {
                                        var inst_14332 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_14349__$1 = state_14349;
                                        var statearr_14365_14391 = state_14349__$1;
                                        statearr_14365_14391[2] = inst_14332;
                                        statearr_14365_14391[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___14377);
        return function(switch__14098__auto__, c__14210__auto___14377) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_14369 = [null, null, null, null, null, null, null, null];
              statearr_14369[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_14369[1] = 1;
              return statearr_14369;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_14349) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_14349);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e14370) {
                    if (e14370 instanceof Object) {
                      var ex__14102__auto__ = e14370;
                      var statearr_14371_14392 = state_14349;
                      statearr_14371_14392[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14349);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14370;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14393 = state_14349;
                  state_14349 = G__14393;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_14349) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_14349);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___14377);
      }();
      var state__14212__auto__ = function() {
        var statearr_14372 = f__14211__auto__.call(null);
        statearr_14372[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___14377;
        return statearr_14372;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___14377));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: (pos? n)");
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__14577) {
      var vec__14578 = p__14577;
      var v = cljs.core.nth.call(null, vec__14578, 0, null);
      var p = cljs.core.nth.call(null, vec__14578, 1, null);
      var job = vec__14578;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__14210__auto___14760 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___14760, res, vec__14578, v, p, job, jobs, results) {
          return function() {
            var f__14211__auto__ = function() {
              var switch__14098__auto__ = function(c__14210__auto___14760, res, vec__14578, v, p, job, jobs, results) {
                return function(state_14583) {
                  var state_val_14584 = state_14583[1];
                  if (state_val_14584 === 1) {
                    var state_14583__$1 = state_14583;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14583__$1, 2, res, v);
                  } else {
                    if (state_val_14584 === 2) {
                      var inst_14580 = state_14583[2];
                      var inst_14581 = cljs.core.async.close_BANG_.call(null, res);
                      var state_14583__$1 = function() {
                        var statearr_14585 = state_14583;
                        statearr_14585[7] = inst_14580;
                        return statearr_14585;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14583__$1, inst_14581);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__14210__auto___14760, res, vec__14578, v, p, job, jobs, results);
              return function(switch__14098__auto__, c__14210__auto___14760, res, vec__14578, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0 = function() {
                    var statearr_14589 = [null, null, null, null, null, null, null, null];
                    statearr_14589[0] = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
                    statearr_14589[1] = 1;
                    return statearr_14589;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1 = function(state_14583) {
                    while (true) {
                      var ret_value__14100__auto__ = function() {
                        try {
                          while (true) {
                            var result__14101__auto__ = switch__14098__auto__.call(null, state_14583);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__14101__auto__;
                            }
                            break;
                          }
                        } catch (e14590) {
                          if (e14590 instanceof Object) {
                            var ex__14102__auto__ = e14590;
                            var statearr_14591_14761 = state_14583;
                            statearr_14591_14761[5] = ex__14102__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14583);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e14590;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__14762 = state_14583;
                        state_14583 = G__14762;
                        continue;
                      } else {
                        return ret_value__14100__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = function(state_14583) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1.call(this, state_14583);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
                }();
              }(switch__14098__auto__, c__14210__auto___14760, res, vec__14578, v, p, job, jobs, results);
            }();
            var state__14212__auto__ = function() {
              var statearr_14592 = f__14211__auto__.call(null);
              statearr_14592[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___14760;
              return statearr_14592;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
          };
        }(c__14210__auto___14760, res, vec__14578, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__14593) {
      var vec__14594 = p__14593;
      var v = cljs.core.nth.call(null, vec__14594, 0, null);
      var p = cljs.core.nth.call(null, vec__14594, 1, null);
      var job = vec__14594;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__7124__auto___14763 = n;
  var __14764 = 0;
  while (true) {
    if (__14764 < n__7124__auto___14763) {
      var G__14595_14765 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__14595_14765) {
        case "compute":
          var c__14210__auto___14767 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__14764, c__14210__auto___14767, G__14595_14765, n__7124__auto___14763, jobs, results, process, async) {
            return function() {
              var f__14211__auto__ = function() {
                var switch__14098__auto__ = function(__14764, c__14210__auto___14767, G__14595_14765, n__7124__auto___14763, jobs, results, process, async) {
                  return function(state_14608) {
                    var state_val_14609 = state_14608[1];
                    if (state_val_14609 === 1) {
                      var state_14608__$1 = state_14608;
                      var statearr_14610_14768 = state_14608__$1;
                      statearr_14610_14768[2] = null;
                      statearr_14610_14768[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14609 === 2) {
                        var state_14608__$1 = state_14608;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14608__$1, 4, jobs);
                      } else {
                        if (state_val_14609 === 3) {
                          var inst_14606 = state_14608[2];
                          var state_14608__$1 = state_14608;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14608__$1, inst_14606);
                        } else {
                          if (state_val_14609 === 4) {
                            var inst_14598 = state_14608[2];
                            var inst_14599 = process.call(null, inst_14598);
                            var state_14608__$1 = state_14608;
                            if (cljs.core.truth_(inst_14599)) {
                              var statearr_14611_14769 = state_14608__$1;
                              statearr_14611_14769[1] = 5;
                            } else {
                              var statearr_14612_14770 = state_14608__$1;
                              statearr_14612_14770[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14609 === 5) {
                              var state_14608__$1 = state_14608;
                              var statearr_14613_14771 = state_14608__$1;
                              statearr_14613_14771[2] = null;
                              statearr_14613_14771[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14609 === 6) {
                                var state_14608__$1 = state_14608;
                                var statearr_14614_14772 = state_14608__$1;
                                statearr_14614_14772[2] = null;
                                statearr_14614_14772[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14609 === 7) {
                                  var inst_14604 = state_14608[2];
                                  var state_14608__$1 = state_14608;
                                  var statearr_14615_14773 = state_14608__$1;
                                  statearr_14615_14773[2] = inst_14604;
                                  statearr_14615_14773[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__14764, c__14210__auto___14767, G__14595_14765, n__7124__auto___14763, jobs, results, process, async);
                return function(__14764, switch__14098__auto__, c__14210__auto___14767, G__14595_14765, n__7124__auto___14763, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0 = function() {
                      var statearr_14619 = [null, null, null, null, null, null, null];
                      statearr_14619[0] = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
                      statearr_14619[1] = 1;
                      return statearr_14619;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1 = function(state_14608) {
                      while (true) {
                        var ret_value__14100__auto__ = function() {
                          try {
                            while (true) {
                              var result__14101__auto__ = switch__14098__auto__.call(null, state_14608);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__14101__auto__;
                              }
                              break;
                            }
                          } catch (e14620) {
                            if (e14620 instanceof Object) {
                              var ex__14102__auto__ = e14620;
                              var statearr_14621_14774 = state_14608;
                              statearr_14621_14774[5] = ex__14102__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14608);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e14620;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__14775 = state_14608;
                          state_14608 = G__14775;
                          continue;
                        } else {
                          return ret_value__14100__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = function(state_14608) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1.call(this, state_14608);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
                  }();
                }(__14764, switch__14098__auto__, c__14210__auto___14767, G__14595_14765, n__7124__auto___14763, jobs, results, process, async);
              }();
              var state__14212__auto__ = function() {
                var statearr_14622 = f__14211__auto__.call(null);
                statearr_14622[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___14767;
                return statearr_14622;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
            };
          }(__14764, c__14210__auto___14767, G__14595_14765, n__7124__auto___14763, jobs, results, process, async));
          break;
        case "async":
          var c__14210__auto___14776 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__14764, c__14210__auto___14776, G__14595_14765, n__7124__auto___14763, jobs, results, process, async) {
            return function() {
              var f__14211__auto__ = function() {
                var switch__14098__auto__ = function(__14764, c__14210__auto___14776, G__14595_14765, n__7124__auto___14763, jobs, results, process, async) {
                  return function(state_14635) {
                    var state_val_14636 = state_14635[1];
                    if (state_val_14636 === 1) {
                      var state_14635__$1 = state_14635;
                      var statearr_14637_14777 = state_14635__$1;
                      statearr_14637_14777[2] = null;
                      statearr_14637_14777[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14636 === 2) {
                        var state_14635__$1 = state_14635;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14635__$1, 4, jobs);
                      } else {
                        if (state_val_14636 === 3) {
                          var inst_14633 = state_14635[2];
                          var state_14635__$1 = state_14635;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14635__$1, inst_14633);
                        } else {
                          if (state_val_14636 === 4) {
                            var inst_14625 = state_14635[2];
                            var inst_14626 = async.call(null, inst_14625);
                            var state_14635__$1 = state_14635;
                            if (cljs.core.truth_(inst_14626)) {
                              var statearr_14638_14778 = state_14635__$1;
                              statearr_14638_14778[1] = 5;
                            } else {
                              var statearr_14639_14779 = state_14635__$1;
                              statearr_14639_14779[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14636 === 5) {
                              var state_14635__$1 = state_14635;
                              var statearr_14640_14780 = state_14635__$1;
                              statearr_14640_14780[2] = null;
                              statearr_14640_14780[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14636 === 6) {
                                var state_14635__$1 = state_14635;
                                var statearr_14641_14781 = state_14635__$1;
                                statearr_14641_14781[2] = null;
                                statearr_14641_14781[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14636 === 7) {
                                  var inst_14631 = state_14635[2];
                                  var state_14635__$1 = state_14635;
                                  var statearr_14642_14782 = state_14635__$1;
                                  statearr_14642_14782[2] = inst_14631;
                                  statearr_14642_14782[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__14764, c__14210__auto___14776, G__14595_14765, n__7124__auto___14763, jobs, results, process, async);
                return function(__14764, switch__14098__auto__, c__14210__auto___14776, G__14595_14765, n__7124__auto___14763, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0 = function() {
                      var statearr_14646 = [null, null, null, null, null, null, null];
                      statearr_14646[0] = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
                      statearr_14646[1] = 1;
                      return statearr_14646;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1 = function(state_14635) {
                      while (true) {
                        var ret_value__14100__auto__ = function() {
                          try {
                            while (true) {
                              var result__14101__auto__ = switch__14098__auto__.call(null, state_14635);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__14101__auto__;
                              }
                              break;
                            }
                          } catch (e14647) {
                            if (e14647 instanceof Object) {
                              var ex__14102__auto__ = e14647;
                              var statearr_14648_14783 = state_14635;
                              statearr_14648_14783[5] = ex__14102__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14635);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e14647;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__14784 = state_14635;
                          state_14635 = G__14784;
                          continue;
                        } else {
                          return ret_value__14100__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = function(state_14635) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1.call(this, state_14635);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
                  }();
                }(__14764, switch__14098__auto__, c__14210__auto___14776, G__14595_14765, n__7124__auto___14763, jobs, results, process, async);
              }();
              var state__14212__auto__ = function() {
                var statearr_14649 = f__14211__auto__.call(null);
                statearr_14649[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___14776;
                return statearr_14649;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
            };
          }(__14764, c__14210__auto___14776, G__14595_14765, n__7124__auto___14763, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__14785 = __14764 + 1;
      __14764 = G__14785;
      continue;
    } else {
    }
    break;
  }
  var c__14210__auto___14786 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___14786, jobs, results, process, async) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___14786, jobs, results, process, async) {
          return function(state_14671) {
            var state_val_14672 = state_14671[1];
            if (state_val_14672 === 1) {
              var state_14671__$1 = state_14671;
              var statearr_14673_14787 = state_14671__$1;
              statearr_14673_14787[2] = null;
              statearr_14673_14787[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14672 === 2) {
                var state_14671__$1 = state_14671;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14671__$1, 4, from);
              } else {
                if (state_val_14672 === 3) {
                  var inst_14669 = state_14671[2];
                  var state_14671__$1 = state_14671;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14671__$1, inst_14669);
                } else {
                  if (state_val_14672 === 4) {
                    var inst_14652 = state_14671[7];
                    var inst_14652__$1 = state_14671[2];
                    var inst_14653 = inst_14652__$1 == null;
                    var state_14671__$1 = function() {
                      var statearr_14674 = state_14671;
                      statearr_14674[7] = inst_14652__$1;
                      return statearr_14674;
                    }();
                    if (cljs.core.truth_(inst_14653)) {
                      var statearr_14675_14788 = state_14671__$1;
                      statearr_14675_14788[1] = 5;
                    } else {
                      var statearr_14676_14789 = state_14671__$1;
                      statearr_14676_14789[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14672 === 5) {
                      var inst_14655 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_14671__$1 = state_14671;
                      var statearr_14677_14790 = state_14671__$1;
                      statearr_14677_14790[2] = inst_14655;
                      statearr_14677_14790[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14672 === 6) {
                        var inst_14652 = state_14671[7];
                        var inst_14657 = state_14671[8];
                        var inst_14657__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_14658 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_14659 = [inst_14652, inst_14657__$1];
                        var inst_14660 = new cljs.core.PersistentVector(null, 2, 5, inst_14658, inst_14659, null);
                        var state_14671__$1 = function() {
                          var statearr_14678 = state_14671;
                          statearr_14678[8] = inst_14657__$1;
                          return statearr_14678;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14671__$1, 8, jobs, inst_14660);
                      } else {
                        if (state_val_14672 === 7) {
                          var inst_14667 = state_14671[2];
                          var state_14671__$1 = state_14671;
                          var statearr_14679_14791 = state_14671__$1;
                          statearr_14679_14791[2] = inst_14667;
                          statearr_14679_14791[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14672 === 8) {
                            var inst_14657 = state_14671[8];
                            var inst_14662 = state_14671[2];
                            var state_14671__$1 = function() {
                              var statearr_14680 = state_14671;
                              statearr_14680[9] = inst_14662;
                              return statearr_14680;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14671__$1, 9, results, inst_14657);
                          } else {
                            if (state_val_14672 === 9) {
                              var inst_14664 = state_14671[2];
                              var state_14671__$1 = function() {
                                var statearr_14681 = state_14671;
                                statearr_14681[10] = inst_14664;
                                return statearr_14681;
                              }();
                              var statearr_14682_14792 = state_14671__$1;
                              statearr_14682_14792[2] = null;
                              statearr_14682_14792[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___14786, jobs, results, process, async);
        return function(switch__14098__auto__, c__14210__auto___14786, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0 = function() {
              var statearr_14686 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_14686[0] = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
              statearr_14686[1] = 1;
              return statearr_14686;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1 = function(state_14671) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_14671);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e14687) {
                    if (e14687 instanceof Object) {
                      var ex__14102__auto__ = e14687;
                      var statearr_14688_14793 = state_14671;
                      statearr_14688_14793[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14671);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14687;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14794 = state_14671;
                  state_14671 = G__14794;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = function(state_14671) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1.call(this, state_14671);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___14786, jobs, results, process, async);
      }();
      var state__14212__auto__ = function() {
        var statearr_14689 = f__14211__auto__.call(null);
        statearr_14689[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___14786;
        return statearr_14689;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___14786, jobs, results, process, async));
  var c__14210__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto__, jobs, results, process, async) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto__, jobs, results, process, async) {
          return function(state_14727) {
            var state_val_14728 = state_14727[1];
            if (state_val_14728 === 7) {
              var inst_14723 = state_14727[2];
              var state_14727__$1 = state_14727;
              var statearr_14729_14795 = state_14727__$1;
              statearr_14729_14795[2] = inst_14723;
              statearr_14729_14795[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14728 === 20) {
                var state_14727__$1 = state_14727;
                var statearr_14730_14796 = state_14727__$1;
                statearr_14730_14796[2] = null;
                statearr_14730_14796[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14728 === 1) {
                  var state_14727__$1 = state_14727;
                  var statearr_14731_14797 = state_14727__$1;
                  statearr_14731_14797[2] = null;
                  statearr_14731_14797[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14728 === 4) {
                    var inst_14692 = state_14727[7];
                    var inst_14692__$1 = state_14727[2];
                    var inst_14693 = inst_14692__$1 == null;
                    var state_14727__$1 = function() {
                      var statearr_14732 = state_14727;
                      statearr_14732[7] = inst_14692__$1;
                      return statearr_14732;
                    }();
                    if (cljs.core.truth_(inst_14693)) {
                      var statearr_14733_14798 = state_14727__$1;
                      statearr_14733_14798[1] = 5;
                    } else {
                      var statearr_14734_14799 = state_14727__$1;
                      statearr_14734_14799[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14728 === 15) {
                      var inst_14705 = state_14727[8];
                      var state_14727__$1 = state_14727;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14727__$1, 18, to, inst_14705);
                    } else {
                      if (state_val_14728 === 21) {
                        var inst_14718 = state_14727[2];
                        var state_14727__$1 = state_14727;
                        var statearr_14735_14800 = state_14727__$1;
                        statearr_14735_14800[2] = inst_14718;
                        statearr_14735_14800[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14728 === 13) {
                          var inst_14720 = state_14727[2];
                          var state_14727__$1 = function() {
                            var statearr_14736 = state_14727;
                            statearr_14736[9] = inst_14720;
                            return statearr_14736;
                          }();
                          var statearr_14737_14801 = state_14727__$1;
                          statearr_14737_14801[2] = null;
                          statearr_14737_14801[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14728 === 6) {
                            var inst_14692 = state_14727[7];
                            var state_14727__$1 = state_14727;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14727__$1, 11, inst_14692);
                          } else {
                            if (state_val_14728 === 17) {
                              var inst_14713 = state_14727[2];
                              var state_14727__$1 = state_14727;
                              if (cljs.core.truth_(inst_14713)) {
                                var statearr_14738_14802 = state_14727__$1;
                                statearr_14738_14802[1] = 19;
                              } else {
                                var statearr_14739_14803 = state_14727__$1;
                                statearr_14739_14803[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14728 === 3) {
                                var inst_14725 = state_14727[2];
                                var state_14727__$1 = state_14727;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14727__$1, inst_14725);
                              } else {
                                if (state_val_14728 === 12) {
                                  var inst_14702 = state_14727[10];
                                  var state_14727__$1 = state_14727;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14727__$1, 14, inst_14702);
                                } else {
                                  if (state_val_14728 === 2) {
                                    var state_14727__$1 = state_14727;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14727__$1, 4, results);
                                  } else {
                                    if (state_val_14728 === 19) {
                                      var state_14727__$1 = state_14727;
                                      var statearr_14740_14804 = state_14727__$1;
                                      statearr_14740_14804[2] = null;
                                      statearr_14740_14804[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14728 === 11) {
                                        var inst_14702 = state_14727[2];
                                        var state_14727__$1 = function() {
                                          var statearr_14741 = state_14727;
                                          statearr_14741[10] = inst_14702;
                                          return statearr_14741;
                                        }();
                                        var statearr_14742_14805 = state_14727__$1;
                                        statearr_14742_14805[2] = null;
                                        statearr_14742_14805[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14728 === 9) {
                                          var state_14727__$1 = state_14727;
                                          var statearr_14743_14806 = state_14727__$1;
                                          statearr_14743_14806[2] = null;
                                          statearr_14743_14806[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14728 === 5) {
                                            var state_14727__$1 = state_14727;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_14744_14807 = state_14727__$1;
                                              statearr_14744_14807[1] = 8;
                                            } else {
                                              var statearr_14745_14808 = state_14727__$1;
                                              statearr_14745_14808[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14728 === 14) {
                                              var inst_14707 = state_14727[11];
                                              var inst_14705 = state_14727[8];
                                              var inst_14705__$1 = state_14727[2];
                                              var inst_14706 = inst_14705__$1 == null;
                                              var inst_14707__$1 = cljs.core.not.call(null, inst_14706);
                                              var state_14727__$1 = function() {
                                                var statearr_14746 = state_14727;
                                                statearr_14746[11] = inst_14707__$1;
                                                statearr_14746[8] = inst_14705__$1;
                                                return statearr_14746;
                                              }();
                                              if (inst_14707__$1) {
                                                var statearr_14747_14809 = state_14727__$1;
                                                statearr_14747_14809[1] = 15;
                                              } else {
                                                var statearr_14748_14810 = state_14727__$1;
                                                statearr_14748_14810[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14728 === 16) {
                                                var inst_14707 = state_14727[11];
                                                var state_14727__$1 = state_14727;
                                                var statearr_14749_14811 = state_14727__$1;
                                                statearr_14749_14811[2] = inst_14707;
                                                statearr_14749_14811[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_14728 === 10) {
                                                  var inst_14699 = state_14727[2];
                                                  var state_14727__$1 = state_14727;
                                                  var statearr_14750_14812 = state_14727__$1;
                                                  statearr_14750_14812[2] = inst_14699;
                                                  statearr_14750_14812[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_14728 === 18) {
                                                    var inst_14710 = state_14727[2];
                                                    var state_14727__$1 = state_14727;
                                                    var statearr_14751_14813 = state_14727__$1;
                                                    statearr_14751_14813[2] = inst_14710;
                                                    statearr_14751_14813[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14728 === 8) {
                                                      var inst_14696 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_14727__$1 = state_14727;
                                                      var statearr_14752_14814 = state_14727__$1;
                                                      statearr_14752_14814[2] = inst_14696;
                                                      statearr_14752_14814[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto__, jobs, results, process, async);
        return function(switch__14098__auto__, c__14210__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0 = function() {
              var statearr_14756 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14756[0] = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
              statearr_14756[1] = 1;
              return statearr_14756;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1 = function(state_14727) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_14727);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e14757) {
                    if (e14757 instanceof Object) {
                      var ex__14102__auto__ = e14757;
                      var statearr_14758_14815 = state_14727;
                      statearr_14758_14815[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14727);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14757;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14816 = state_14727;
                  state_14727 = G__14816;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__ = function(state_14727) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1.call(this, state_14727);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__14099__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto__, jobs, results, process, async);
      }();
      var state__14212__auto__ = function() {
        var statearr_14759 = f__14211__auto__.call(null);
        statearr_14759[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto__;
        return statearr_14759;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto__, jobs, results, process, async));
  return c__14210__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var args14817 = [];
  var len__7279__auto___14820 = arguments.length;
  var i__7280__auto___14821 = 0;
  while (true) {
    if (i__7280__auto___14821 < len__7279__auto___14820) {
      args14817.push(arguments[i__7280__auto___14821]);
      var G__14822 = i__7280__auto___14821 + 1;
      i__7280__auto___14821 = G__14822;
      continue;
    } else {
    }
    break;
  }
  var G__14819 = args14817.length;
  switch(G__14819) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14817.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var args14824 = [];
  var len__7279__auto___14827 = arguments.length;
  var i__7280__auto___14828 = 0;
  while (true) {
    if (i__7280__auto___14828 < len__7279__auto___14827) {
      args14824.push(arguments[i__7280__auto___14828]);
      var G__14829 = i__7280__auto___14828 + 1;
      i__7280__auto___14828 = G__14829;
      continue;
    } else {
    }
    break;
  }
  var G__14826 = args14824.length;
  switch(G__14826) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14824.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var args14831 = [];
  var len__7279__auto___14884 = arguments.length;
  var i__7280__auto___14885 = 0;
  while (true) {
    if (i__7280__auto___14885 < len__7279__auto___14884) {
      args14831.push(arguments[i__7280__auto___14885]);
      var G__14886 = i__7280__auto___14885 + 1;
      i__7280__auto___14885 = G__14886;
      continue;
    } else {
    }
    break;
  }
  var G__14833 = args14831.length;
  switch(G__14833) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args14831.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__14210__auto___14888 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___14888, tc, fc) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___14888, tc, fc) {
          return function(state_14859) {
            var state_val_14860 = state_14859[1];
            if (state_val_14860 === 7) {
              var inst_14855 = state_14859[2];
              var state_14859__$1 = state_14859;
              var statearr_14861_14889 = state_14859__$1;
              statearr_14861_14889[2] = inst_14855;
              statearr_14861_14889[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14860 === 1) {
                var state_14859__$1 = state_14859;
                var statearr_14862_14890 = state_14859__$1;
                statearr_14862_14890[2] = null;
                statearr_14862_14890[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14860 === 4) {
                  var inst_14836 = state_14859[7];
                  var inst_14836__$1 = state_14859[2];
                  var inst_14837 = inst_14836__$1 == null;
                  var state_14859__$1 = function() {
                    var statearr_14863 = state_14859;
                    statearr_14863[7] = inst_14836__$1;
                    return statearr_14863;
                  }();
                  if (cljs.core.truth_(inst_14837)) {
                    var statearr_14864_14891 = state_14859__$1;
                    statearr_14864_14891[1] = 5;
                  } else {
                    var statearr_14865_14892 = state_14859__$1;
                    statearr_14865_14892[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14860 === 13) {
                    var state_14859__$1 = state_14859;
                    var statearr_14866_14893 = state_14859__$1;
                    statearr_14866_14893[2] = null;
                    statearr_14866_14893[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14860 === 6) {
                      var inst_14836 = state_14859[7];
                      var inst_14842 = p.call(null, inst_14836);
                      var state_14859__$1 = state_14859;
                      if (cljs.core.truth_(inst_14842)) {
                        var statearr_14867_14894 = state_14859__$1;
                        statearr_14867_14894[1] = 9;
                      } else {
                        var statearr_14868_14895 = state_14859__$1;
                        statearr_14868_14895[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14860 === 3) {
                        var inst_14857 = state_14859[2];
                        var state_14859__$1 = state_14859;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14859__$1, inst_14857);
                      } else {
                        if (state_val_14860 === 12) {
                          var state_14859__$1 = state_14859;
                          var statearr_14869_14896 = state_14859__$1;
                          statearr_14869_14896[2] = null;
                          statearr_14869_14896[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14860 === 2) {
                            var state_14859__$1 = state_14859;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14859__$1, 4, ch);
                          } else {
                            if (state_val_14860 === 11) {
                              var inst_14836 = state_14859[7];
                              var inst_14846 = state_14859[2];
                              var state_14859__$1 = state_14859;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14859__$1, 8, inst_14846, inst_14836);
                            } else {
                              if (state_val_14860 === 9) {
                                var state_14859__$1 = state_14859;
                                var statearr_14870_14897 = state_14859__$1;
                                statearr_14870_14897[2] = tc;
                                statearr_14870_14897[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14860 === 5) {
                                  var inst_14839 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_14840 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_14859__$1 = function() {
                                    var statearr_14871 = state_14859;
                                    statearr_14871[8] = inst_14839;
                                    return statearr_14871;
                                  }();
                                  var statearr_14872_14898 = state_14859__$1;
                                  statearr_14872_14898[2] = inst_14840;
                                  statearr_14872_14898[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14860 === 14) {
                                    var inst_14853 = state_14859[2];
                                    var state_14859__$1 = state_14859;
                                    var statearr_14873_14899 = state_14859__$1;
                                    statearr_14873_14899[2] = inst_14853;
                                    statearr_14873_14899[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14860 === 10) {
                                      var state_14859__$1 = state_14859;
                                      var statearr_14874_14900 = state_14859__$1;
                                      statearr_14874_14900[2] = fc;
                                      statearr_14874_14900[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14860 === 8) {
                                        var inst_14848 = state_14859[2];
                                        var state_14859__$1 = state_14859;
                                        if (cljs.core.truth_(inst_14848)) {
                                          var statearr_14875_14901 = state_14859__$1;
                                          statearr_14875_14901[1] = 12;
                                        } else {
                                          var statearr_14876_14902 = state_14859__$1;
                                          statearr_14876_14902[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___14888, tc, fc);
        return function(switch__14098__auto__, c__14210__auto___14888, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_14880 = [null, null, null, null, null, null, null, null, null];
              statearr_14880[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_14880[1] = 1;
              return statearr_14880;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_14859) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_14859);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e14881) {
                    if (e14881 instanceof Object) {
                      var ex__14102__auto__ = e14881;
                      var statearr_14882_14903 = state_14859;
                      statearr_14882_14903[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14859);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14881;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14904 = state_14859;
                  state_14859 = G__14904;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_14859) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_14859);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___14888, tc, fc);
      }();
      var state__14212__auto__ = function() {
        var statearr_14883 = f__14211__auto__.call(null);
        statearr_14883[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___14888;
        return statearr_14883;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___14888, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__14210__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto__) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto__) {
          return function(state_14968) {
            var state_val_14969 = state_14968[1];
            if (state_val_14969 === 7) {
              var inst_14964 = state_14968[2];
              var state_14968__$1 = state_14968;
              var statearr_14970_14991 = state_14968__$1;
              statearr_14970_14991[2] = inst_14964;
              statearr_14970_14991[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14969 === 1) {
                var inst_14948 = init;
                var state_14968__$1 = function() {
                  var statearr_14971 = state_14968;
                  statearr_14971[7] = inst_14948;
                  return statearr_14971;
                }();
                var statearr_14972_14992 = state_14968__$1;
                statearr_14972_14992[2] = null;
                statearr_14972_14992[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14969 === 4) {
                  var inst_14951 = state_14968[8];
                  var inst_14951__$1 = state_14968[2];
                  var inst_14952 = inst_14951__$1 == null;
                  var state_14968__$1 = function() {
                    var statearr_14973 = state_14968;
                    statearr_14973[8] = inst_14951__$1;
                    return statearr_14973;
                  }();
                  if (cljs.core.truth_(inst_14952)) {
                    var statearr_14974_14993 = state_14968__$1;
                    statearr_14974_14993[1] = 5;
                  } else {
                    var statearr_14975_14994 = state_14968__$1;
                    statearr_14975_14994[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14969 === 6) {
                    var inst_14951 = state_14968[8];
                    var inst_14955 = state_14968[9];
                    var inst_14948 = state_14968[7];
                    var inst_14955__$1 = f.call(null, inst_14948, inst_14951);
                    var inst_14956 = cljs.core.reduced_QMARK_.call(null, inst_14955__$1);
                    var state_14968__$1 = function() {
                      var statearr_14976 = state_14968;
                      statearr_14976[9] = inst_14955__$1;
                      return statearr_14976;
                    }();
                    if (inst_14956) {
                      var statearr_14977_14995 = state_14968__$1;
                      statearr_14977_14995[1] = 8;
                    } else {
                      var statearr_14978_14996 = state_14968__$1;
                      statearr_14978_14996[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14969 === 3) {
                      var inst_14966 = state_14968[2];
                      var state_14968__$1 = state_14968;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14968__$1, inst_14966);
                    } else {
                      if (state_val_14969 === 2) {
                        var state_14968__$1 = state_14968;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14968__$1, 4, ch);
                      } else {
                        if (state_val_14969 === 9) {
                          var inst_14955 = state_14968[9];
                          var inst_14948 = inst_14955;
                          var state_14968__$1 = function() {
                            var statearr_14979 = state_14968;
                            statearr_14979[7] = inst_14948;
                            return statearr_14979;
                          }();
                          var statearr_14980_14997 = state_14968__$1;
                          statearr_14980_14997[2] = null;
                          statearr_14980_14997[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14969 === 5) {
                            var inst_14948 = state_14968[7];
                            var state_14968__$1 = state_14968;
                            var statearr_14981_14998 = state_14968__$1;
                            statearr_14981_14998[2] = inst_14948;
                            statearr_14981_14998[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14969 === 10) {
                              var inst_14962 = state_14968[2];
                              var state_14968__$1 = state_14968;
                              var statearr_14982_14999 = state_14968__$1;
                              statearr_14982_14999[2] = inst_14962;
                              statearr_14982_14999[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14969 === 8) {
                                var inst_14955 = state_14968[9];
                                var inst_14958 = cljs.core.deref.call(null, inst_14955);
                                var state_14968__$1 = state_14968;
                                var statearr_14983_15000 = state_14968__$1;
                                statearr_14983_15000[2] = inst_14958;
                                statearr_14983_15000[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto__);
        return function(switch__14098__auto__, c__14210__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__14099__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__14099__auto____0 = function() {
              var statearr_14987 = [null, null, null, null, null, null, null, null, null, null];
              statearr_14987[0] = cljs$core$async$reduce_$_state_machine__14099__auto__;
              statearr_14987[1] = 1;
              return statearr_14987;
            };
            var cljs$core$async$reduce_$_state_machine__14099__auto____1 = function(state_14968) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_14968);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e14988) {
                    if (e14988 instanceof Object) {
                      var ex__14102__auto__ = e14988;
                      var statearr_14989_15001 = state_14968;
                      statearr_14989_15001[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14968);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14988;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15002 = state_14968;
                  state_14968 = G__15002;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__14099__auto__ = function(state_14968) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__14099__auto____1.call(this, state_14968);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__14099__auto____0;
            cljs$core$async$reduce_$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__14099__auto____1;
            return cljs$core$async$reduce_$_state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto__);
      }();
      var state__14212__auto__ = function() {
        var statearr_14990 = f__14211__auto__.call(null);
        statearr_14990[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto__;
        return statearr_14990;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto__));
  return c__14210__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var args15003 = [];
  var len__7279__auto___15055 = arguments.length;
  var i__7280__auto___15056 = 0;
  while (true) {
    if (i__7280__auto___15056 < len__7279__auto___15055) {
      args15003.push(arguments[i__7280__auto___15056]);
      var G__15057 = i__7280__auto___15056 + 1;
      i__7280__auto___15056 = G__15057;
      continue;
    } else {
    }
    break;
  }
  var G__15005 = args15003.length;
  switch(G__15005) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15003.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__14210__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto__) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto__) {
          return function(state_15030) {
            var state_val_15031 = state_15030[1];
            if (state_val_15031 === 7) {
              var inst_15012 = state_15030[2];
              var state_15030__$1 = state_15030;
              var statearr_15032_15059 = state_15030__$1;
              statearr_15032_15059[2] = inst_15012;
              statearr_15032_15059[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15031 === 1) {
                var inst_15006 = cljs.core.seq.call(null, coll);
                var inst_15007 = inst_15006;
                var state_15030__$1 = function() {
                  var statearr_15033 = state_15030;
                  statearr_15033[7] = inst_15007;
                  return statearr_15033;
                }();
                var statearr_15034_15060 = state_15030__$1;
                statearr_15034_15060[2] = null;
                statearr_15034_15060[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15031 === 4) {
                  var inst_15007 = state_15030[7];
                  var inst_15010 = cljs.core.first.call(null, inst_15007);
                  var state_15030__$1 = state_15030;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15030__$1, 7, ch, inst_15010);
                } else {
                  if (state_val_15031 === 13) {
                    var inst_15024 = state_15030[2];
                    var state_15030__$1 = state_15030;
                    var statearr_15035_15061 = state_15030__$1;
                    statearr_15035_15061[2] = inst_15024;
                    statearr_15035_15061[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15031 === 6) {
                      var inst_15015 = state_15030[2];
                      var state_15030__$1 = state_15030;
                      if (cljs.core.truth_(inst_15015)) {
                        var statearr_15036_15062 = state_15030__$1;
                        statearr_15036_15062[1] = 8;
                      } else {
                        var statearr_15037_15063 = state_15030__$1;
                        statearr_15037_15063[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15031 === 3) {
                        var inst_15028 = state_15030[2];
                        var state_15030__$1 = state_15030;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15030__$1, inst_15028);
                      } else {
                        if (state_val_15031 === 12) {
                          var state_15030__$1 = state_15030;
                          var statearr_15038_15064 = state_15030__$1;
                          statearr_15038_15064[2] = null;
                          statearr_15038_15064[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15031 === 2) {
                            var inst_15007 = state_15030[7];
                            var state_15030__$1 = state_15030;
                            if (cljs.core.truth_(inst_15007)) {
                              var statearr_15039_15065 = state_15030__$1;
                              statearr_15039_15065[1] = 4;
                            } else {
                              var statearr_15040_15066 = state_15030__$1;
                              statearr_15040_15066[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15031 === 11) {
                              var inst_15021 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_15030__$1 = state_15030;
                              var statearr_15041_15067 = state_15030__$1;
                              statearr_15041_15067[2] = inst_15021;
                              statearr_15041_15067[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15031 === 9) {
                                var state_15030__$1 = state_15030;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_15042_15068 = state_15030__$1;
                                  statearr_15042_15068[1] = 11;
                                } else {
                                  var statearr_15043_15069 = state_15030__$1;
                                  statearr_15043_15069[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15031 === 5) {
                                  var inst_15007 = state_15030[7];
                                  var state_15030__$1 = state_15030;
                                  var statearr_15044_15070 = state_15030__$1;
                                  statearr_15044_15070[2] = inst_15007;
                                  statearr_15044_15070[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15031 === 10) {
                                    var inst_15026 = state_15030[2];
                                    var state_15030__$1 = state_15030;
                                    var statearr_15045_15071 = state_15030__$1;
                                    statearr_15045_15071[2] = inst_15026;
                                    statearr_15045_15071[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15031 === 8) {
                                      var inst_15007 = state_15030[7];
                                      var inst_15017 = cljs.core.next.call(null, inst_15007);
                                      var inst_15007__$1 = inst_15017;
                                      var state_15030__$1 = function() {
                                        var statearr_15046 = state_15030;
                                        statearr_15046[7] = inst_15007__$1;
                                        return statearr_15046;
                                      }();
                                      var statearr_15047_15072 = state_15030__$1;
                                      statearr_15047_15072[2] = null;
                                      statearr_15047_15072[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto__);
        return function(switch__14098__auto__, c__14210__auto__) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_15051 = [null, null, null, null, null, null, null, null];
              statearr_15051[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_15051[1] = 1;
              return statearr_15051;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_15030) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_15030);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e15052) {
                    if (e15052 instanceof Object) {
                      var ex__14102__auto__ = e15052;
                      var statearr_15053_15073 = state_15030;
                      statearr_15053_15073[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15030);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15052;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15074 = state_15030;
                  state_15030 = G__15074;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_15030) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_15030);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto__);
      }();
      var state__14212__auto__ = function() {
        var statearr_15054 = f__14211__auto__.call(null);
        statearr_15054[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto__;
        return statearr_15054;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto__));
  return c__14210__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__6873__auto__ = _ == null ? null : _;
    var m__6874__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, _);
    } else {
      var m__6874__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m, ch);
    } else {
      var m__6874__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m);
    } else {
      var m__6874__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async15296 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async15296 = function(mult, ch, cs, meta15297) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta15297 = meta15297;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_15298, meta15297__$1) {
          var self__ = this;
          var _15298__$1 = this;
          return new cljs.core.async.t_cljs$core$async15296(self__.mult, self__.ch, self__.cs, meta15297__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_15298) {
          var self__ = this;
          var _15298__$1 = this;
          return self__.meta15297;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async15296.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async15296.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta15297", "meta15297", 2059700778, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async15296.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async15296.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async15296";
      cljs.core.async.t_cljs$core$async15296.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
          return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async15296");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async15296 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async15296(mult__$1, ch__$1, cs__$1, meta15297) {
          return new cljs.core.async.t_cljs$core$async15296(mult__$1, ch__$1, cs__$1, meta15297);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async15296(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__14210__auto___15517 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___15517, cs, m, dchan, dctr, done) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___15517, cs, m, dchan, dctr, done) {
          return function(state_15429) {
            var state_val_15430 = state_15429[1];
            if (state_val_15430 === 7) {
              var inst_15425 = state_15429[2];
              var state_15429__$1 = state_15429;
              var statearr_15431_15518 = state_15429__$1;
              statearr_15431_15518[2] = inst_15425;
              statearr_15431_15518[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15430 === 20) {
                var inst_15330 = state_15429[7];
                var inst_15340 = cljs.core.first.call(null, inst_15330);
                var inst_15341 = cljs.core.nth.call(null, inst_15340, 0, null);
                var inst_15342 = cljs.core.nth.call(null, inst_15340, 1, null);
                var state_15429__$1 = function() {
                  var statearr_15432 = state_15429;
                  statearr_15432[8] = inst_15341;
                  return statearr_15432;
                }();
                if (cljs.core.truth_(inst_15342)) {
                  var statearr_15433_15519 = state_15429__$1;
                  statearr_15433_15519[1] = 22;
                } else {
                  var statearr_15434_15520 = state_15429__$1;
                  statearr_15434_15520[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15430 === 27) {
                  var inst_15372 = state_15429[9];
                  var inst_15370 = state_15429[10];
                  var inst_15377 = state_15429[11];
                  var inst_15301 = state_15429[12];
                  var inst_15377__$1 = cljs.core._nth.call(null, inst_15370, inst_15372);
                  var inst_15378 = cljs.core.async.put_BANG_.call(null, inst_15377__$1, inst_15301, done);
                  var state_15429__$1 = function() {
                    var statearr_15435 = state_15429;
                    statearr_15435[11] = inst_15377__$1;
                    return statearr_15435;
                  }();
                  if (cljs.core.truth_(inst_15378)) {
                    var statearr_15436_15521 = state_15429__$1;
                    statearr_15436_15521[1] = 30;
                  } else {
                    var statearr_15437_15522 = state_15429__$1;
                    statearr_15437_15522[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15430 === 1) {
                    var state_15429__$1 = state_15429;
                    var statearr_15438_15523 = state_15429__$1;
                    statearr_15438_15523[2] = null;
                    statearr_15438_15523[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15430 === 24) {
                      var inst_15330 = state_15429[7];
                      var inst_15347 = state_15429[2];
                      var inst_15348 = cljs.core.next.call(null, inst_15330);
                      var inst_15310 = inst_15348;
                      var inst_15311 = null;
                      var inst_15312 = 0;
                      var inst_15313 = 0;
                      var state_15429__$1 = function() {
                        var statearr_15439 = state_15429;
                        statearr_15439[13] = inst_15312;
                        statearr_15439[14] = inst_15310;
                        statearr_15439[15] = inst_15311;
                        statearr_15439[16] = inst_15313;
                        statearr_15439[17] = inst_15347;
                        return statearr_15439;
                      }();
                      var statearr_15440_15524 = state_15429__$1;
                      statearr_15440_15524[2] = null;
                      statearr_15440_15524[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15430 === 39) {
                        var state_15429__$1 = state_15429;
                        var statearr_15444_15525 = state_15429__$1;
                        statearr_15444_15525[2] = null;
                        statearr_15444_15525[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15430 === 4) {
                          var inst_15301 = state_15429[12];
                          var inst_15301__$1 = state_15429[2];
                          var inst_15302 = inst_15301__$1 == null;
                          var state_15429__$1 = function() {
                            var statearr_15445 = state_15429;
                            statearr_15445[12] = inst_15301__$1;
                            return statearr_15445;
                          }();
                          if (cljs.core.truth_(inst_15302)) {
                            var statearr_15446_15526 = state_15429__$1;
                            statearr_15446_15526[1] = 5;
                          } else {
                            var statearr_15447_15527 = state_15429__$1;
                            statearr_15447_15527[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15430 === 15) {
                            var inst_15312 = state_15429[13];
                            var inst_15310 = state_15429[14];
                            var inst_15311 = state_15429[15];
                            var inst_15313 = state_15429[16];
                            var inst_15326 = state_15429[2];
                            var inst_15327 = inst_15313 + 1;
                            var tmp15441 = inst_15312;
                            var tmp15442 = inst_15310;
                            var tmp15443 = inst_15311;
                            var inst_15310__$1 = tmp15442;
                            var inst_15311__$1 = tmp15443;
                            var inst_15312__$1 = tmp15441;
                            var inst_15313__$1 = inst_15327;
                            var state_15429__$1 = function() {
                              var statearr_15448 = state_15429;
                              statearr_15448[18] = inst_15326;
                              statearr_15448[13] = inst_15312__$1;
                              statearr_15448[14] = inst_15310__$1;
                              statearr_15448[15] = inst_15311__$1;
                              statearr_15448[16] = inst_15313__$1;
                              return statearr_15448;
                            }();
                            var statearr_15449_15528 = state_15429__$1;
                            statearr_15449_15528[2] = null;
                            statearr_15449_15528[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15430 === 21) {
                              var inst_15351 = state_15429[2];
                              var state_15429__$1 = state_15429;
                              var statearr_15453_15529 = state_15429__$1;
                              statearr_15453_15529[2] = inst_15351;
                              statearr_15453_15529[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15430 === 31) {
                                var inst_15377 = state_15429[11];
                                var inst_15381 = done.call(null, null);
                                var inst_15382 = cljs.core.async.untap_STAR_.call(null, m, inst_15377);
                                var state_15429__$1 = function() {
                                  var statearr_15454 = state_15429;
                                  statearr_15454[19] = inst_15381;
                                  return statearr_15454;
                                }();
                                var statearr_15455_15530 = state_15429__$1;
                                statearr_15455_15530[2] = inst_15382;
                                statearr_15455_15530[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15430 === 32) {
                                  var inst_15371 = state_15429[20];
                                  var inst_15369 = state_15429[21];
                                  var inst_15372 = state_15429[9];
                                  var inst_15370 = state_15429[10];
                                  var inst_15384 = state_15429[2];
                                  var inst_15385 = inst_15372 + 1;
                                  var tmp15450 = inst_15371;
                                  var tmp15451 = inst_15369;
                                  var tmp15452 = inst_15370;
                                  var inst_15369__$1 = tmp15451;
                                  var inst_15370__$1 = tmp15452;
                                  var inst_15371__$1 = tmp15450;
                                  var inst_15372__$1 = inst_15385;
                                  var state_15429__$1 = function() {
                                    var statearr_15456 = state_15429;
                                    statearr_15456[20] = inst_15371__$1;
                                    statearr_15456[21] = inst_15369__$1;
                                    statearr_15456[9] = inst_15372__$1;
                                    statearr_15456[10] = inst_15370__$1;
                                    statearr_15456[22] = inst_15384;
                                    return statearr_15456;
                                  }();
                                  var statearr_15457_15531 = state_15429__$1;
                                  statearr_15457_15531[2] = null;
                                  statearr_15457_15531[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15430 === 40) {
                                    var inst_15397 = state_15429[23];
                                    var inst_15401 = done.call(null, null);
                                    var inst_15402 = cljs.core.async.untap_STAR_.call(null, m, inst_15397);
                                    var state_15429__$1 = function() {
                                      var statearr_15458 = state_15429;
                                      statearr_15458[24] = inst_15401;
                                      return statearr_15458;
                                    }();
                                    var statearr_15459_15532 = state_15429__$1;
                                    statearr_15459_15532[2] = inst_15402;
                                    statearr_15459_15532[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15430 === 33) {
                                      var inst_15388 = state_15429[25];
                                      var inst_15390 = cljs.core.chunked_seq_QMARK_.call(null, inst_15388);
                                      var state_15429__$1 = state_15429;
                                      if (inst_15390) {
                                        var statearr_15460_15533 = state_15429__$1;
                                        statearr_15460_15533[1] = 36;
                                      } else {
                                        var statearr_15461_15534 = state_15429__$1;
                                        statearr_15461_15534[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15430 === 13) {
                                        var inst_15320 = state_15429[26];
                                        var inst_15323 = cljs.core.async.close_BANG_.call(null, inst_15320);
                                        var state_15429__$1 = state_15429;
                                        var statearr_15462_15535 = state_15429__$1;
                                        statearr_15462_15535[2] = inst_15323;
                                        statearr_15462_15535[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15430 === 22) {
                                          var inst_15341 = state_15429[8];
                                          var inst_15344 = cljs.core.async.close_BANG_.call(null, inst_15341);
                                          var state_15429__$1 = state_15429;
                                          var statearr_15463_15536 = state_15429__$1;
                                          statearr_15463_15536[2] = inst_15344;
                                          statearr_15463_15536[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15430 === 36) {
                                            var inst_15388 = state_15429[25];
                                            var inst_15392 = cljs.core.chunk_first.call(null, inst_15388);
                                            var inst_15393 = cljs.core.chunk_rest.call(null, inst_15388);
                                            var inst_15394 = cljs.core.count.call(null, inst_15392);
                                            var inst_15369 = inst_15393;
                                            var inst_15370 = inst_15392;
                                            var inst_15371 = inst_15394;
                                            var inst_15372 = 0;
                                            var state_15429__$1 = function() {
                                              var statearr_15464 = state_15429;
                                              statearr_15464[20] = inst_15371;
                                              statearr_15464[21] = inst_15369;
                                              statearr_15464[9] = inst_15372;
                                              statearr_15464[10] = inst_15370;
                                              return statearr_15464;
                                            }();
                                            var statearr_15465_15537 = state_15429__$1;
                                            statearr_15465_15537[2] = null;
                                            statearr_15465_15537[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_15430 === 41) {
                                              var inst_15388 = state_15429[25];
                                              var inst_15404 = state_15429[2];
                                              var inst_15405 = cljs.core.next.call(null, inst_15388);
                                              var inst_15369 = inst_15405;
                                              var inst_15370 = null;
                                              var inst_15371 = 0;
                                              var inst_15372 = 0;
                                              var state_15429__$1 = function() {
                                                var statearr_15466 = state_15429;
                                                statearr_15466[20] = inst_15371;
                                                statearr_15466[27] = inst_15404;
                                                statearr_15466[21] = inst_15369;
                                                statearr_15466[9] = inst_15372;
                                                statearr_15466[10] = inst_15370;
                                                return statearr_15466;
                                              }();
                                              var statearr_15467_15538 = state_15429__$1;
                                              statearr_15467_15538[2] = null;
                                              statearr_15467_15538[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_15430 === 43) {
                                                var state_15429__$1 = state_15429;
                                                var statearr_15468_15539 = state_15429__$1;
                                                statearr_15468_15539[2] = null;
                                                statearr_15468_15539[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_15430 === 29) {
                                                  var inst_15413 = state_15429[2];
                                                  var state_15429__$1 = state_15429;
                                                  var statearr_15469_15540 = state_15429__$1;
                                                  statearr_15469_15540[2] = inst_15413;
                                                  statearr_15469_15540[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_15430 === 44) {
                                                    var inst_15422 = state_15429[2];
                                                    var state_15429__$1 = function() {
                                                      var statearr_15470 = state_15429;
                                                      statearr_15470[28] = inst_15422;
                                                      return statearr_15470;
                                                    }();
                                                    var statearr_15471_15541 = state_15429__$1;
                                                    statearr_15471_15541[2] = null;
                                                    statearr_15471_15541[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_15430 === 6) {
                                                      var inst_15361 = state_15429[29];
                                                      var inst_15360 = cljs.core.deref.call(null, cs);
                                                      var inst_15361__$1 = cljs.core.keys.call(null, inst_15360);
                                                      var inst_15362 = cljs.core.count.call(null, inst_15361__$1);
                                                      var inst_15363 = cljs.core.reset_BANG_.call(null, dctr, inst_15362);
                                                      var inst_15368 = cljs.core.seq.call(null, inst_15361__$1);
                                                      var inst_15369 = inst_15368;
                                                      var inst_15370 = null;
                                                      var inst_15371 = 0;
                                                      var inst_15372 = 0;
                                                      var state_15429__$1 = function() {
                                                        var statearr_15472 = state_15429;
                                                        statearr_15472[29] = inst_15361__$1;
                                                        statearr_15472[20] = inst_15371;
                                                        statearr_15472[30] = inst_15363;
                                                        statearr_15472[21] = inst_15369;
                                                        statearr_15472[9] = inst_15372;
                                                        statearr_15472[10] = inst_15370;
                                                        return statearr_15472;
                                                      }();
                                                      var statearr_15473_15542 = state_15429__$1;
                                                      statearr_15473_15542[2] = null;
                                                      statearr_15473_15542[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_15430 === 28) {
                                                        var inst_15388 = state_15429[25];
                                                        var inst_15369 = state_15429[21];
                                                        var inst_15388__$1 = cljs.core.seq.call(null, inst_15369);
                                                        var state_15429__$1 = function() {
                                                          var statearr_15474 = state_15429;
                                                          statearr_15474[25] = inst_15388__$1;
                                                          return statearr_15474;
                                                        }();
                                                        if (inst_15388__$1) {
                                                          var statearr_15475_15543 = state_15429__$1;
                                                          statearr_15475_15543[1] = 33;
                                                        } else {
                                                          var statearr_15476_15544 = state_15429__$1;
                                                          statearr_15476_15544[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_15430 === 25) {
                                                          var inst_15371 = state_15429[20];
                                                          var inst_15372 = state_15429[9];
                                                          var inst_15374 = inst_15372 < inst_15371;
                                                          var inst_15375 = inst_15374;
                                                          var state_15429__$1 = state_15429;
                                                          if (cljs.core.truth_(inst_15375)) {
                                                            var statearr_15477_15545 = state_15429__$1;
                                                            statearr_15477_15545[1] = 27;
                                                          } else {
                                                            var statearr_15478_15546 = state_15429__$1;
                                                            statearr_15478_15546[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_15430 === 34) {
                                                            var state_15429__$1 = state_15429;
                                                            var statearr_15479_15547 = state_15429__$1;
                                                            statearr_15479_15547[2] = null;
                                                            statearr_15479_15547[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_15430 === 17) {
                                                              var state_15429__$1 = state_15429;
                                                              var statearr_15480_15548 = state_15429__$1;
                                                              statearr_15480_15548[2] = null;
                                                              statearr_15480_15548[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_15430 === 3) {
                                                                var inst_15427 = state_15429[2];
                                                                var state_15429__$1 = state_15429;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15429__$1, inst_15427);
                                                              } else {
                                                                if (state_val_15430 === 12) {
                                                                  var inst_15356 = state_15429[2];
                                                                  var state_15429__$1 = state_15429;
                                                                  var statearr_15481_15549 = state_15429__$1;
                                                                  statearr_15481_15549[2] = inst_15356;
                                                                  statearr_15481_15549[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_15430 === 2) {
                                                                    var state_15429__$1 = state_15429;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15429__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_15430 === 23) {
                                                                      var state_15429__$1 = state_15429;
                                                                      var statearr_15482_15550 = state_15429__$1;
                                                                      statearr_15482_15550[2] = null;
                                                                      statearr_15482_15550[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_15430 === 35) {
                                                                        var inst_15411 = state_15429[2];
                                                                        var state_15429__$1 = state_15429;
                                                                        var statearr_15483_15551 = state_15429__$1;
                                                                        statearr_15483_15551[2] = inst_15411;
                                                                        statearr_15483_15551[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_15430 === 19) {
                                                                          var inst_15330 = state_15429[7];
                                                                          var inst_15334 = cljs.core.chunk_first.call(null, inst_15330);
                                                                          var inst_15335 = cljs.core.chunk_rest.call(null, inst_15330);
                                                                          var inst_15336 = cljs.core.count.call(null, inst_15334);
                                                                          var inst_15310 = inst_15335;
                                                                          var inst_15311 = inst_15334;
                                                                          var inst_15312 = inst_15336;
                                                                          var inst_15313 = 0;
                                                                          var state_15429__$1 = function() {
                                                                            var statearr_15484 = state_15429;
                                                                            statearr_15484[13] = inst_15312;
                                                                            statearr_15484[14] = inst_15310;
                                                                            statearr_15484[15] = inst_15311;
                                                                            statearr_15484[16] = inst_15313;
                                                                            return statearr_15484;
                                                                          }();
                                                                          var statearr_15485_15552 = state_15429__$1;
                                                                          statearr_15485_15552[2] = null;
                                                                          statearr_15485_15552[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_15430 === 11) {
                                                                            var inst_15330 = state_15429[7];
                                                                            var inst_15310 = state_15429[14];
                                                                            var inst_15330__$1 = cljs.core.seq.call(null, inst_15310);
                                                                            var state_15429__$1 = function() {
                                                                              var statearr_15486 = state_15429;
                                                                              statearr_15486[7] = inst_15330__$1;
                                                                              return statearr_15486;
                                                                            }();
                                                                            if (inst_15330__$1) {
                                                                              var statearr_15487_15553 = state_15429__$1;
                                                                              statearr_15487_15553[1] = 16;
                                                                            } else {
                                                                              var statearr_15488_15554 = state_15429__$1;
                                                                              statearr_15488_15554[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_15430 === 9) {
                                                                              var inst_15358 = state_15429[2];
                                                                              var state_15429__$1 = state_15429;
                                                                              var statearr_15489_15555 = state_15429__$1;
                                                                              statearr_15489_15555[2] = inst_15358;
                                                                              statearr_15489_15555[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_15430 === 5) {
                                                                                var inst_15308 = cljs.core.deref.call(null, cs);
                                                                                var inst_15309 = cljs.core.seq.call(null, inst_15308);
                                                                                var inst_15310 = inst_15309;
                                                                                var inst_15311 = null;
                                                                                var inst_15312 = 0;
                                                                                var inst_15313 = 0;
                                                                                var state_15429__$1 = function() {
                                                                                  var statearr_15490 = state_15429;
                                                                                  statearr_15490[13] = inst_15312;
                                                                                  statearr_15490[14] = inst_15310;
                                                                                  statearr_15490[15] = inst_15311;
                                                                                  statearr_15490[16] = inst_15313;
                                                                                  return statearr_15490;
                                                                                }();
                                                                                var statearr_15491_15556 = state_15429__$1;
                                                                                statearr_15491_15556[2] = null;
                                                                                statearr_15491_15556[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_15430 === 14) {
                                                                                  var state_15429__$1 = state_15429;
                                                                                  var statearr_15492_15557 = state_15429__$1;
                                                                                  statearr_15492_15557[2] = null;
                                                                                  statearr_15492_15557[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_15430 === 45) {
                                                                                    var inst_15419 = state_15429[2];
                                                                                    var state_15429__$1 = state_15429;
                                                                                    var statearr_15493_15558 = state_15429__$1;
                                                                                    statearr_15493_15558[2] = inst_15419;
                                                                                    statearr_15493_15558[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_15430 === 26) {
                                                                                      var inst_15361 = state_15429[29];
                                                                                      var inst_15415 = state_15429[2];
                                                                                      var inst_15416 = cljs.core.seq.call(null, inst_15361);
                                                                                      var state_15429__$1 = function() {
                                                                                        var statearr_15494 = state_15429;
                                                                                        statearr_15494[31] = inst_15415;
                                                                                        return statearr_15494;
                                                                                      }();
                                                                                      if (inst_15416) {
                                                                                        var statearr_15495_15559 = state_15429__$1;
                                                                                        statearr_15495_15559[1] = 42;
                                                                                      } else {
                                                                                        var statearr_15496_15560 = state_15429__$1;
                                                                                        statearr_15496_15560[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_15430 === 16) {
                                                                                        var inst_15330 = state_15429[7];
                                                                                        var inst_15332 = cljs.core.chunked_seq_QMARK_.call(null, inst_15330);
                                                                                        var state_15429__$1 = state_15429;
                                                                                        if (inst_15332) {
                                                                                          var statearr_15497_15561 = state_15429__$1;
                                                                                          statearr_15497_15561[1] = 19;
                                                                                        } else {
                                                                                          var statearr_15498_15562 = state_15429__$1;
                                                                                          statearr_15498_15562[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_15430 === 38) {
                                                                                          var inst_15408 = state_15429[2];
                                                                                          var state_15429__$1 = state_15429;
                                                                                          var statearr_15499_15563 = state_15429__$1;
                                                                                          statearr_15499_15563[2] = inst_15408;
                                                                                          statearr_15499_15563[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_15430 === 30) {
                                                                                            var state_15429__$1 = state_15429;
                                                                                            var statearr_15500_15564 = state_15429__$1;
                                                                                            statearr_15500_15564[2] = null;
                                                                                            statearr_15500_15564[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_15430 === 10) {
                                                                                              var inst_15311 = state_15429[15];
                                                                                              var inst_15313 = state_15429[16];
                                                                                              var inst_15319 = cljs.core._nth.call(null, inst_15311, inst_15313);
                                                                                              var inst_15320 = cljs.core.nth.call(null, inst_15319, 0, null);
                                                                                              var inst_15321 = cljs.core.nth.call(null, inst_15319, 1, null);
                                                                                              var state_15429__$1 = function() {
                                                                                                var statearr_15501 = state_15429;
                                                                                                statearr_15501[26] = inst_15320;
                                                                                                return statearr_15501;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_15321)) {
                                                                                                var statearr_15502_15565 = state_15429__$1;
                                                                                                statearr_15502_15565[1] = 13;
                                                                                              } else {
                                                                                                var statearr_15503_15566 = state_15429__$1;
                                                                                                statearr_15503_15566[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_15430 === 18) {
                                                                                                var inst_15354 = state_15429[2];
                                                                                                var state_15429__$1 = state_15429;
                                                                                                var statearr_15504_15567 = state_15429__$1;
                                                                                                statearr_15504_15567[2] = inst_15354;
                                                                                                statearr_15504_15567[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_15430 === 42) {
                                                                                                  var state_15429__$1 = state_15429;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15429__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_15430 === 37) {
                                                                                                    var inst_15388 = state_15429[25];
                                                                                                    var inst_15397 = state_15429[23];
                                                                                                    var inst_15301 = state_15429[12];
                                                                                                    var inst_15397__$1 = cljs.core.first.call(null, inst_15388);
                                                                                                    var inst_15398 = cljs.core.async.put_BANG_.call(null, inst_15397__$1, inst_15301, done);
                                                                                                    var state_15429__$1 = function() {
                                                                                                      var statearr_15505 = state_15429;
                                                                                                      statearr_15505[23] = inst_15397__$1;
                                                                                                      return statearr_15505;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_15398)) {
                                                                                                      var statearr_15506_15568 = state_15429__$1;
                                                                                                      statearr_15506_15568[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_15507_15569 = state_15429__$1;
                                                                                                      statearr_15507_15569[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_15430 === 8) {
                                                                                                      var inst_15312 = state_15429[13];
                                                                                                      var inst_15313 = state_15429[16];
                                                                                                      var inst_15315 = inst_15313 < inst_15312;
                                                                                                      var inst_15316 = inst_15315;
                                                                                                      var state_15429__$1 = state_15429;
                                                                                                      if (cljs.core.truth_(inst_15316)) {
                                                                                                        var statearr_15508_15570 = state_15429__$1;
                                                                                                        statearr_15508_15570[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_15509_15571 = state_15429__$1;
                                                                                                        statearr_15509_15571[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___15517, cs, m, dchan, dctr, done);
        return function(switch__14098__auto__, c__14210__auto___15517, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__14099__auto__ = null;
            var cljs$core$async$mult_$_state_machine__14099__auto____0 = function() {
              var statearr_15513 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15513[0] = cljs$core$async$mult_$_state_machine__14099__auto__;
              statearr_15513[1] = 1;
              return statearr_15513;
            };
            var cljs$core$async$mult_$_state_machine__14099__auto____1 = function(state_15429) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_15429);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e15514) {
                    if (e15514 instanceof Object) {
                      var ex__14102__auto__ = e15514;
                      var statearr_15515_15572 = state_15429;
                      statearr_15515_15572[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15429);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15514;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15573 = state_15429;
                  state_15429 = G__15573;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__14099__auto__ = function(state_15429) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__14099__auto____1.call(this, state_15429);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__14099__auto____0;
            cljs$core$async$mult_$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__14099__auto____1;
            return cljs$core$async$mult_$_state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___15517, cs, m, dchan, dctr, done);
      }();
      var state__14212__auto__ = function() {
        var statearr_15516 = f__14211__auto__.call(null);
        statearr_15516[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___15517;
        return statearr_15516;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___15517, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var args15574 = [];
  var len__7279__auto___15577 = arguments.length;
  var i__7280__auto___15578 = 0;
  while (true) {
    if (i__7280__auto___15578 < len__7279__auto___15577) {
      args15574.push(arguments[i__7280__auto___15578]);
      var G__15579 = i__7280__auto___15578 + 1;
      i__7280__auto___15578 = G__15579;
      continue;
    } else {
    }
    break;
  }
  var G__15576 = args15574.length;
  switch(G__15576) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15574.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m, ch);
    } else {
      var m__6874__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m, ch);
    } else {
      var m__6874__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m);
    } else {
      var m__6874__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m, state_map);
    } else {
      var m__6874__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__6873__auto__ = m == null ? null : m;
    var m__6874__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, m, mode);
    } else {
      var m__6874__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__7286__auto__ = [];
  var len__7279__auto___15591 = arguments.length;
  var i__7280__auto___15592 = 0;
  while (true) {
    if (i__7280__auto___15592 < len__7279__auto___15591) {
      args__7286__auto__.push(arguments[i__7280__auto___15592]);
      var G__15593 = i__7280__auto___15592 + 1;
      i__7280__auto___15592 = G__15593;
      continue;
    } else {
    }
    break;
  }
  var argseq__7287__auto__ = 3 < args__7286__auto__.length ? new cljs.core.IndexedSeq(args__7286__auto__.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__7287__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__15585) {
  var map__15586 = p__15585;
  var map__15586__$1 = (!(map__15586 == null) ? map__15586.cljs$lang$protocol_mask$partition0$ & 64 || map__15586.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15586) : map__15586;
  var opts = map__15586__$1;
  var statearr_15588_15594 = state;
  statearr_15588_15594[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4657__auto__ = cljs.core.async.do_alts.call(null, function(map__15586, map__15586__$1, opts) {
    return function(val) {
      var statearr_15589_15595 = state;
      statearr_15589_15595[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__15586, map__15586__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb = temp__4657__auto__;
    var statearr_15590_15596 = state;
    statearr_15590_15596[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq15581) {
  var G__15582 = cljs.core.first.call(null, seq15581);
  var seq15581__$1 = cljs.core.next.call(null, seq15581);
  var G__15583 = cljs.core.first.call(null, seq15581__$1);
  var seq15581__$2 = cljs.core.next.call(null, seq15581__$1);
  var G__15584 = cljs.core.first.call(null, seq15581__$2);
  var seq15581__$3 = cljs.core.next.call(null, seq15581__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15582, G__15583, G__15584, seq15581__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async15760 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async15760 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta15761) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta15761 = meta15761;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15762, meta15761__$1) {
          var self__ = this;
          var _15762__$1 = this;
          return new cljs.core.async.t_cljs$core$async15760(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta15761__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15762) {
          var self__ = this;
          var _15762__$1 = this;
          return self__.meta15761;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str("(solo-modes mode)")].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta15761", "meta15761", -31551578, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async15760.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async15760.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async15760";
      cljs.core.async.t_cljs$core$async15760.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
          return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async15760");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async15760 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async15760(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta15761) {
          return new cljs.core.async.t_cljs$core$async15760(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta15761);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async15760(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__14210__auto___15923 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___15923, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___15923, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_15860) {
            var state_val_15861 = state_15860[1];
            if (state_val_15861 === 7) {
              var inst_15778 = state_15860[2];
              var state_15860__$1 = state_15860;
              var statearr_15862_15924 = state_15860__$1;
              statearr_15862_15924[2] = inst_15778;
              statearr_15862_15924[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15861 === 20) {
                var inst_15790 = state_15860[7];
                var state_15860__$1 = state_15860;
                var statearr_15863_15925 = state_15860__$1;
                statearr_15863_15925[2] = inst_15790;
                statearr_15863_15925[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15861 === 27) {
                  var state_15860__$1 = state_15860;
                  var statearr_15864_15926 = state_15860__$1;
                  statearr_15864_15926[2] = null;
                  statearr_15864_15926[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15861 === 1) {
                    var inst_15766 = state_15860[8];
                    var inst_15766__$1 = calc_state.call(null);
                    var inst_15768 = inst_15766__$1 == null;
                    var inst_15769 = cljs.core.not.call(null, inst_15768);
                    var state_15860__$1 = function() {
                      var statearr_15865 = state_15860;
                      statearr_15865[8] = inst_15766__$1;
                      return statearr_15865;
                    }();
                    if (inst_15769) {
                      var statearr_15866_15927 = state_15860__$1;
                      statearr_15866_15927[1] = 2;
                    } else {
                      var statearr_15867_15928 = state_15860__$1;
                      statearr_15867_15928[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15861 === 24) {
                      var inst_15834 = state_15860[9];
                      var inst_15813 = state_15860[10];
                      var inst_15820 = state_15860[11];
                      var inst_15834__$1 = inst_15813.call(null, inst_15820);
                      var state_15860__$1 = function() {
                        var statearr_15868 = state_15860;
                        statearr_15868[9] = inst_15834__$1;
                        return statearr_15868;
                      }();
                      if (cljs.core.truth_(inst_15834__$1)) {
                        var statearr_15869_15929 = state_15860__$1;
                        statearr_15869_15929[1] = 29;
                      } else {
                        var statearr_15870_15930 = state_15860__$1;
                        statearr_15870_15930[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15861 === 4) {
                        var inst_15781 = state_15860[2];
                        var state_15860__$1 = state_15860;
                        if (cljs.core.truth_(inst_15781)) {
                          var statearr_15871_15931 = state_15860__$1;
                          statearr_15871_15931[1] = 8;
                        } else {
                          var statearr_15872_15932 = state_15860__$1;
                          statearr_15872_15932[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15861 === 15) {
                          var inst_15807 = state_15860[2];
                          var state_15860__$1 = state_15860;
                          if (cljs.core.truth_(inst_15807)) {
                            var statearr_15873_15933 = state_15860__$1;
                            statearr_15873_15933[1] = 19;
                          } else {
                            var statearr_15874_15934 = state_15860__$1;
                            statearr_15874_15934[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15861 === 21) {
                            var inst_15812 = state_15860[12];
                            var inst_15812__$1 = state_15860[2];
                            var inst_15813 = cljs.core.get.call(null, inst_15812__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_15814 = cljs.core.get.call(null, inst_15812__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_15815 = cljs.core.get.call(null, inst_15812__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_15860__$1 = function() {
                              var statearr_15875 = state_15860;
                              statearr_15875[13] = inst_15814;
                              statearr_15875[10] = inst_15813;
                              statearr_15875[12] = inst_15812__$1;
                              return statearr_15875;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_15860__$1, 22, inst_15815);
                          } else {
                            if (state_val_15861 === 31) {
                              var inst_15842 = state_15860[2];
                              var state_15860__$1 = state_15860;
                              if (cljs.core.truth_(inst_15842)) {
                                var statearr_15876_15935 = state_15860__$1;
                                statearr_15876_15935[1] = 32;
                              } else {
                                var statearr_15877_15936 = state_15860__$1;
                                statearr_15877_15936[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15861 === 32) {
                                var inst_15819 = state_15860[14];
                                var state_15860__$1 = state_15860;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15860__$1, 35, out, inst_15819);
                              } else {
                                if (state_val_15861 === 33) {
                                  var inst_15812 = state_15860[12];
                                  var inst_15790 = inst_15812;
                                  var state_15860__$1 = function() {
                                    var statearr_15878 = state_15860;
                                    statearr_15878[7] = inst_15790;
                                    return statearr_15878;
                                  }();
                                  var statearr_15879_15937 = state_15860__$1;
                                  statearr_15879_15937[2] = null;
                                  statearr_15879_15937[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15861 === 13) {
                                    var inst_15790 = state_15860[7];
                                    var inst_15797 = inst_15790.cljs$lang$protocol_mask$partition0$;
                                    var inst_15798 = inst_15797 & 64;
                                    var inst_15799 = inst_15790.cljs$core$ISeq$;
                                    var inst_15800 = inst_15798 || inst_15799;
                                    var state_15860__$1 = state_15860;
                                    if (cljs.core.truth_(inst_15800)) {
                                      var statearr_15880_15938 = state_15860__$1;
                                      statearr_15880_15938[1] = 16;
                                    } else {
                                      var statearr_15881_15939 = state_15860__$1;
                                      statearr_15881_15939[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15861 === 22) {
                                      var inst_15819 = state_15860[14];
                                      var inst_15820 = state_15860[11];
                                      var inst_15818 = state_15860[2];
                                      var inst_15819__$1 = cljs.core.nth.call(null, inst_15818, 0, null);
                                      var inst_15820__$1 = cljs.core.nth.call(null, inst_15818, 1, null);
                                      var inst_15821 = inst_15819__$1 == null;
                                      var inst_15822 = cljs.core._EQ_.call(null, inst_15820__$1, change);
                                      var inst_15823 = inst_15821 || inst_15822;
                                      var state_15860__$1 = function() {
                                        var statearr_15882 = state_15860;
                                        statearr_15882[14] = inst_15819__$1;
                                        statearr_15882[11] = inst_15820__$1;
                                        return statearr_15882;
                                      }();
                                      if (cljs.core.truth_(inst_15823)) {
                                        var statearr_15883_15940 = state_15860__$1;
                                        statearr_15883_15940[1] = 23;
                                      } else {
                                        var statearr_15884_15941 = state_15860__$1;
                                        statearr_15884_15941[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15861 === 36) {
                                        var inst_15812 = state_15860[12];
                                        var inst_15790 = inst_15812;
                                        var state_15860__$1 = function() {
                                          var statearr_15885 = state_15860;
                                          statearr_15885[7] = inst_15790;
                                          return statearr_15885;
                                        }();
                                        var statearr_15886_15942 = state_15860__$1;
                                        statearr_15886_15942[2] = null;
                                        statearr_15886_15942[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15861 === 29) {
                                          var inst_15834 = state_15860[9];
                                          var state_15860__$1 = state_15860;
                                          var statearr_15887_15943 = state_15860__$1;
                                          statearr_15887_15943[2] = inst_15834;
                                          statearr_15887_15943[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15861 === 6) {
                                            var state_15860__$1 = state_15860;
                                            var statearr_15888_15944 = state_15860__$1;
                                            statearr_15888_15944[2] = false;
                                            statearr_15888_15944[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_15861 === 28) {
                                              var inst_15830 = state_15860[2];
                                              var inst_15831 = calc_state.call(null);
                                              var inst_15790 = inst_15831;
                                              var state_15860__$1 = function() {
                                                var statearr_15889 = state_15860;
                                                statearr_15889[15] = inst_15830;
                                                statearr_15889[7] = inst_15790;
                                                return statearr_15889;
                                              }();
                                              var statearr_15890_15945 = state_15860__$1;
                                              statearr_15890_15945[2] = null;
                                              statearr_15890_15945[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_15861 === 25) {
                                                var inst_15856 = state_15860[2];
                                                var state_15860__$1 = state_15860;
                                                var statearr_15891_15946 = state_15860__$1;
                                                statearr_15891_15946[2] = inst_15856;
                                                statearr_15891_15946[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_15861 === 34) {
                                                  var inst_15854 = state_15860[2];
                                                  var state_15860__$1 = state_15860;
                                                  var statearr_15892_15947 = state_15860__$1;
                                                  statearr_15892_15947[2] = inst_15854;
                                                  statearr_15892_15947[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_15861 === 17) {
                                                    var state_15860__$1 = state_15860;
                                                    var statearr_15893_15948 = state_15860__$1;
                                                    statearr_15893_15948[2] = false;
                                                    statearr_15893_15948[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_15861 === 3) {
                                                      var state_15860__$1 = state_15860;
                                                      var statearr_15894_15949 = state_15860__$1;
                                                      statearr_15894_15949[2] = false;
                                                      statearr_15894_15949[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_15861 === 12) {
                                                        var inst_15858 = state_15860[2];
                                                        var state_15860__$1 = state_15860;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15860__$1, inst_15858);
                                                      } else {
                                                        if (state_val_15861 === 2) {
                                                          var inst_15766 = state_15860[8];
                                                          var inst_15771 = inst_15766.cljs$lang$protocol_mask$partition0$;
                                                          var inst_15772 = inst_15771 & 64;
                                                          var inst_15773 = inst_15766.cljs$core$ISeq$;
                                                          var inst_15774 = inst_15772 || inst_15773;
                                                          var state_15860__$1 = state_15860;
                                                          if (cljs.core.truth_(inst_15774)) {
                                                            var statearr_15895_15950 = state_15860__$1;
                                                            statearr_15895_15950[1] = 5;
                                                          } else {
                                                            var statearr_15896_15951 = state_15860__$1;
                                                            statearr_15896_15951[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_15861 === 23) {
                                                            var inst_15819 = state_15860[14];
                                                            var inst_15825 = inst_15819 == null;
                                                            var state_15860__$1 = state_15860;
                                                            if (cljs.core.truth_(inst_15825)) {
                                                              var statearr_15897_15952 = state_15860__$1;
                                                              statearr_15897_15952[1] = 26;
                                                            } else {
                                                              var statearr_15898_15953 = state_15860__$1;
                                                              statearr_15898_15953[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_15861 === 35) {
                                                              var inst_15845 = state_15860[2];
                                                              var state_15860__$1 = state_15860;
                                                              if (cljs.core.truth_(inst_15845)) {
                                                                var statearr_15899_15954 = state_15860__$1;
                                                                statearr_15899_15954[1] = 36;
                                                              } else {
                                                                var statearr_15900_15955 = state_15860__$1;
                                                                statearr_15900_15955[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_15861 === 19) {
                                                                var inst_15790 = state_15860[7];
                                                                var inst_15809 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15790);
                                                                var state_15860__$1 = state_15860;
                                                                var statearr_15901_15956 = state_15860__$1;
                                                                statearr_15901_15956[2] = inst_15809;
                                                                statearr_15901_15956[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_15861 === 11) {
                                                                  var inst_15790 = state_15860[7];
                                                                  var inst_15794 = inst_15790 == null;
                                                                  var inst_15795 = cljs.core.not.call(null, inst_15794);
                                                                  var state_15860__$1 = state_15860;
                                                                  if (inst_15795) {
                                                                    var statearr_15902_15957 = state_15860__$1;
                                                                    statearr_15902_15957[1] = 13;
                                                                  } else {
                                                                    var statearr_15903_15958 = state_15860__$1;
                                                                    statearr_15903_15958[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_15861 === 9) {
                                                                    var inst_15766 = state_15860[8];
                                                                    var state_15860__$1 = state_15860;
                                                                    var statearr_15904_15959 = state_15860__$1;
                                                                    statearr_15904_15959[2] = inst_15766;
                                                                    statearr_15904_15959[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_15861 === 5) {
                                                                      var state_15860__$1 = state_15860;
                                                                      var statearr_15905_15960 = state_15860__$1;
                                                                      statearr_15905_15960[2] = true;
                                                                      statearr_15905_15960[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_15861 === 14) {
                                                                        var state_15860__$1 = state_15860;
                                                                        var statearr_15906_15961 = state_15860__$1;
                                                                        statearr_15906_15961[2] = false;
                                                                        statearr_15906_15961[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_15861 === 26) {
                                                                          var inst_15820 = state_15860[11];
                                                                          var inst_15827 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_15820);
                                                                          var state_15860__$1 = state_15860;
                                                                          var statearr_15907_15962 = state_15860__$1;
                                                                          statearr_15907_15962[2] = inst_15827;
                                                                          statearr_15907_15962[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_15861 === 16) {
                                                                            var state_15860__$1 = state_15860;
                                                                            var statearr_15908_15963 = state_15860__$1;
                                                                            statearr_15908_15963[2] = true;
                                                                            statearr_15908_15963[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_15861 === 38) {
                                                                              var inst_15850 = state_15860[2];
                                                                              var state_15860__$1 = state_15860;
                                                                              var statearr_15909_15964 = state_15860__$1;
                                                                              statearr_15909_15964[2] = inst_15850;
                                                                              statearr_15909_15964[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_15861 === 30) {
                                                                                var inst_15814 = state_15860[13];
                                                                                var inst_15813 = state_15860[10];
                                                                                var inst_15820 = state_15860[11];
                                                                                var inst_15837 = cljs.core.empty_QMARK_.call(null, inst_15813);
                                                                                var inst_15838 = inst_15814.call(null, inst_15820);
                                                                                var inst_15839 = cljs.core.not.call(null, inst_15838);
                                                                                var inst_15840 = inst_15837 && inst_15839;
                                                                                var state_15860__$1 = state_15860;
                                                                                var statearr_15910_15965 = state_15860__$1;
                                                                                statearr_15910_15965[2] = inst_15840;
                                                                                statearr_15910_15965[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_15861 === 10) {
                                                                                  var inst_15766 = state_15860[8];
                                                                                  var inst_15786 = state_15860[2];
                                                                                  var inst_15787 = cljs.core.get.call(null, inst_15786, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_15788 = cljs.core.get.call(null, inst_15786, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_15789 = cljs.core.get.call(null, inst_15786, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_15790 = inst_15766;
                                                                                  var state_15860__$1 = function() {
                                                                                    var statearr_15911 = state_15860;
                                                                                    statearr_15911[16] = inst_15789;
                                                                                    statearr_15911[17] = inst_15787;
                                                                                    statearr_15911[7] = inst_15790;
                                                                                    statearr_15911[18] = inst_15788;
                                                                                    return statearr_15911;
                                                                                  }();
                                                                                  var statearr_15912_15966 = state_15860__$1;
                                                                                  statearr_15912_15966[2] = null;
                                                                                  statearr_15912_15966[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_15861 === 18) {
                                                                                    var inst_15804 = state_15860[2];
                                                                                    var state_15860__$1 = state_15860;
                                                                                    var statearr_15913_15967 = state_15860__$1;
                                                                                    statearr_15913_15967[2] = inst_15804;
                                                                                    statearr_15913_15967[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_15861 === 37) {
                                                                                      var state_15860__$1 = state_15860;
                                                                                      var statearr_15914_15968 = state_15860__$1;
                                                                                      statearr_15914_15968[2] = null;
                                                                                      statearr_15914_15968[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_15861 === 8) {
                                                                                        var inst_15766 = state_15860[8];
                                                                                        var inst_15783 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15766);
                                                                                        var state_15860__$1 = state_15860;
                                                                                        var statearr_15915_15969 = state_15860__$1;
                                                                                        statearr_15915_15969[2] = inst_15783;
                                                                                        statearr_15915_15969[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___15923, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__14098__auto__, c__14210__auto___15923, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__14099__auto__ = null;
            var cljs$core$async$mix_$_state_machine__14099__auto____0 = function() {
              var statearr_15919 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15919[0] = cljs$core$async$mix_$_state_machine__14099__auto__;
              statearr_15919[1] = 1;
              return statearr_15919;
            };
            var cljs$core$async$mix_$_state_machine__14099__auto____1 = function(state_15860) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_15860);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e15920) {
                    if (e15920 instanceof Object) {
                      var ex__14102__auto__ = e15920;
                      var statearr_15921_15970 = state_15860;
                      statearr_15921_15970[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15860);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e15920;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__15971 = state_15860;
                  state_15860 = G__15971;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__14099__auto__ = function(state_15860) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__14099__auto____1.call(this, state_15860);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__14099__auto____0;
            cljs$core$async$mix_$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__14099__auto____1;
            return cljs$core$async$mix_$_state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___15923, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__14212__auto__ = function() {
        var statearr_15922 = f__14211__auto__.call(null);
        statearr_15922[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___15923;
        return statearr_15922;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___15923, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__6873__auto__ = p == null ? null : p;
    var m__6874__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__6874__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__6873__auto__ = p == null ? null : p;
    var m__6874__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, p, v, ch);
    } else {
      var m__6874__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var args15972 = [];
  var len__7279__auto___15975 = arguments.length;
  var i__7280__auto___15976 = 0;
  while (true) {
    if (i__7280__auto___15976 < len__7279__auto___15975) {
      args15972.push(arguments[i__7280__auto___15976]);
      var G__15977 = i__7280__auto___15976 + 1;
      i__7280__auto___15976 = G__15977;
      continue;
    } else {
    }
    break;
  }
  var G__15974 = args15972.length;
  switch(G__15974) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15972.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__6873__auto__ = p == null ? null : p;
    var m__6874__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, p);
    } else {
      var m__6874__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__6873__auto__ = p == null ? null : p;
    var m__6874__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__6873__auto__)];
    if (!(m__6874__auto__ == null)) {
      return m__6874__auto__.call(null, p, v);
    } else {
      var m__6874__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__6874__auto____$1 == null)) {
        return m__6874__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var args15980 = [];
  var len__7279__auto___16105 = arguments.length;
  var i__7280__auto___16106 = 0;
  while (true) {
    if (i__7280__auto___16106 < len__7279__auto___16105) {
      args15980.push(arguments[i__7280__auto___16106]);
      var G__16107 = i__7280__auto___16106 + 1;
      i__7280__auto___16106 = G__16107;
      continue;
    } else {
    }
    break;
  }
  var G__15982 = args15980.length;
  switch(G__15982) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args15980.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__6210__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__6210__auto__)) {
        return or__6210__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__6210__auto__, mults) {
          return function(p1__15979_SHARP_) {
            if (cljs.core.truth_(p1__15979_SHARP_.call(null, topic))) {
              return p1__15979_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__15979_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__6210__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async15983 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async15983 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta15984) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta15984 = meta15984;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_15985, meta15984__$1) {
          var self__ = this;
          var _15985__$1 = this;
          return new cljs.core.async.t_cljs$core$async15983(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta15984__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_15985) {
          var self__ = this;
          var _15985__$1 = this;
          return self__.meta15984;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4657__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var m = temp__4657__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta15984", "meta15984", -1120852599, 
          null)], null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async15983.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async15983.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async15983";
      cljs.core.async.t_cljs$core$async15983.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
          return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async15983");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async15983 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async15983(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta15984) {
          return new cljs.core.async.t_cljs$core$async15983(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta15984);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async15983(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__14210__auto___16109 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16109, mults, ensure_mult, p) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16109, mults, ensure_mult, p) {
          return function(state_16057) {
            var state_val_16058 = state_16057[1];
            if (state_val_16058 === 7) {
              var inst_16053 = state_16057[2];
              var state_16057__$1 = state_16057;
              var statearr_16059_16110 = state_16057__$1;
              statearr_16059_16110[2] = inst_16053;
              statearr_16059_16110[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16058 === 20) {
                var state_16057__$1 = state_16057;
                var statearr_16060_16111 = state_16057__$1;
                statearr_16060_16111[2] = null;
                statearr_16060_16111[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16058 === 1) {
                  var state_16057__$1 = state_16057;
                  var statearr_16061_16112 = state_16057__$1;
                  statearr_16061_16112[2] = null;
                  statearr_16061_16112[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16058 === 24) {
                    var inst_16036 = state_16057[7];
                    var inst_16045 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_16036);
                    var state_16057__$1 = state_16057;
                    var statearr_16062_16113 = state_16057__$1;
                    statearr_16062_16113[2] = inst_16045;
                    statearr_16062_16113[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16058 === 4) {
                      var inst_15988 = state_16057[8];
                      var inst_15988__$1 = state_16057[2];
                      var inst_15989 = inst_15988__$1 == null;
                      var state_16057__$1 = function() {
                        var statearr_16063 = state_16057;
                        statearr_16063[8] = inst_15988__$1;
                        return statearr_16063;
                      }();
                      if (cljs.core.truth_(inst_15989)) {
                        var statearr_16064_16114 = state_16057__$1;
                        statearr_16064_16114[1] = 5;
                      } else {
                        var statearr_16065_16115 = state_16057__$1;
                        statearr_16065_16115[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16058 === 15) {
                        var inst_16030 = state_16057[2];
                        var state_16057__$1 = state_16057;
                        var statearr_16066_16116 = state_16057__$1;
                        statearr_16066_16116[2] = inst_16030;
                        statearr_16066_16116[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16058 === 21) {
                          var inst_16050 = state_16057[2];
                          var state_16057__$1 = function() {
                            var statearr_16067 = state_16057;
                            statearr_16067[9] = inst_16050;
                            return statearr_16067;
                          }();
                          var statearr_16068_16117 = state_16057__$1;
                          statearr_16068_16117[2] = null;
                          statearr_16068_16117[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16058 === 13) {
                            var inst_16012 = state_16057[10];
                            var inst_16014 = cljs.core.chunked_seq_QMARK_.call(null, inst_16012);
                            var state_16057__$1 = state_16057;
                            if (inst_16014) {
                              var statearr_16069_16118 = state_16057__$1;
                              statearr_16069_16118[1] = 16;
                            } else {
                              var statearr_16070_16119 = state_16057__$1;
                              statearr_16070_16119[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16058 === 22) {
                              var inst_16042 = state_16057[2];
                              var state_16057__$1 = state_16057;
                              if (cljs.core.truth_(inst_16042)) {
                                var statearr_16071_16120 = state_16057__$1;
                                statearr_16071_16120[1] = 23;
                              } else {
                                var statearr_16072_16121 = state_16057__$1;
                                statearr_16072_16121[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16058 === 6) {
                                var inst_15988 = state_16057[8];
                                var inst_16038 = state_16057[11];
                                var inst_16036 = state_16057[7];
                                var inst_16036__$1 = topic_fn.call(null, inst_15988);
                                var inst_16037 = cljs.core.deref.call(null, mults);
                                var inst_16038__$1 = cljs.core.get.call(null, inst_16037, inst_16036__$1);
                                var state_16057__$1 = function() {
                                  var statearr_16073 = state_16057;
                                  statearr_16073[11] = inst_16038__$1;
                                  statearr_16073[7] = inst_16036__$1;
                                  return statearr_16073;
                                }();
                                if (cljs.core.truth_(inst_16038__$1)) {
                                  var statearr_16074_16122 = state_16057__$1;
                                  statearr_16074_16122[1] = 19;
                                } else {
                                  var statearr_16075_16123 = state_16057__$1;
                                  statearr_16075_16123[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16058 === 25) {
                                  var inst_16047 = state_16057[2];
                                  var state_16057__$1 = state_16057;
                                  var statearr_16076_16124 = state_16057__$1;
                                  statearr_16076_16124[2] = inst_16047;
                                  statearr_16076_16124[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16058 === 17) {
                                    var inst_16012 = state_16057[10];
                                    var inst_16021 = cljs.core.first.call(null, inst_16012);
                                    var inst_16022 = cljs.core.async.muxch_STAR_.call(null, inst_16021);
                                    var inst_16023 = cljs.core.async.close_BANG_.call(null, inst_16022);
                                    var inst_16024 = cljs.core.next.call(null, inst_16012);
                                    var inst_15998 = inst_16024;
                                    var inst_15999 = null;
                                    var inst_16000 = 0;
                                    var inst_16001 = 0;
                                    var state_16057__$1 = function() {
                                      var statearr_16077 = state_16057;
                                      statearr_16077[12] = inst_15999;
                                      statearr_16077[13] = inst_16001;
                                      statearr_16077[14] = inst_16023;
                                      statearr_16077[15] = inst_16000;
                                      statearr_16077[16] = inst_15998;
                                      return statearr_16077;
                                    }();
                                    var statearr_16078_16125 = state_16057__$1;
                                    statearr_16078_16125[2] = null;
                                    statearr_16078_16125[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16058 === 3) {
                                      var inst_16055 = state_16057[2];
                                      var state_16057__$1 = state_16057;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16057__$1, inst_16055);
                                    } else {
                                      if (state_val_16058 === 12) {
                                        var inst_16032 = state_16057[2];
                                        var state_16057__$1 = state_16057;
                                        var statearr_16079_16126 = state_16057__$1;
                                        statearr_16079_16126[2] = inst_16032;
                                        statearr_16079_16126[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16058 === 2) {
                                          var state_16057__$1 = state_16057;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16057__$1, 4, ch);
                                        } else {
                                          if (state_val_16058 === 23) {
                                            var state_16057__$1 = state_16057;
                                            var statearr_16080_16127 = state_16057__$1;
                                            statearr_16080_16127[2] = null;
                                            statearr_16080_16127[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16058 === 19) {
                                              var inst_15988 = state_16057[8];
                                              var inst_16038 = state_16057[11];
                                              var inst_16040 = cljs.core.async.muxch_STAR_.call(null, inst_16038);
                                              var state_16057__$1 = state_16057;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16057__$1, 22, inst_16040, inst_15988);
                                            } else {
                                              if (state_val_16058 === 11) {
                                                var inst_16012 = state_16057[10];
                                                var inst_15998 = state_16057[16];
                                                var inst_16012__$1 = cljs.core.seq.call(null, inst_15998);
                                                var state_16057__$1 = function() {
                                                  var statearr_16081 = state_16057;
                                                  statearr_16081[10] = inst_16012__$1;
                                                  return statearr_16081;
                                                }();
                                                if (inst_16012__$1) {
                                                  var statearr_16082_16128 = state_16057__$1;
                                                  statearr_16082_16128[1] = 13;
                                                } else {
                                                  var statearr_16083_16129 = state_16057__$1;
                                                  statearr_16083_16129[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_16058 === 9) {
                                                  var inst_16034 = state_16057[2];
                                                  var state_16057__$1 = state_16057;
                                                  var statearr_16084_16130 = state_16057__$1;
                                                  statearr_16084_16130[2] = inst_16034;
                                                  statearr_16084_16130[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_16058 === 5) {
                                                    var inst_15995 = cljs.core.deref.call(null, mults);
                                                    var inst_15996 = cljs.core.vals.call(null, inst_15995);
                                                    var inst_15997 = cljs.core.seq.call(null, inst_15996);
                                                    var inst_15998 = inst_15997;
                                                    var inst_15999 = null;
                                                    var inst_16000 = 0;
                                                    var inst_16001 = 0;
                                                    var state_16057__$1 = function() {
                                                      var statearr_16085 = state_16057;
                                                      statearr_16085[12] = inst_15999;
                                                      statearr_16085[13] = inst_16001;
                                                      statearr_16085[15] = inst_16000;
                                                      statearr_16085[16] = inst_15998;
                                                      return statearr_16085;
                                                    }();
                                                    var statearr_16086_16131 = state_16057__$1;
                                                    statearr_16086_16131[2] = null;
                                                    statearr_16086_16131[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_16058 === 14) {
                                                      var state_16057__$1 = state_16057;
                                                      var statearr_16090_16132 = state_16057__$1;
                                                      statearr_16090_16132[2] = null;
                                                      statearr_16090_16132[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_16058 === 16) {
                                                        var inst_16012 = state_16057[10];
                                                        var inst_16016 = cljs.core.chunk_first.call(null, inst_16012);
                                                        var inst_16017 = cljs.core.chunk_rest.call(null, inst_16012);
                                                        var inst_16018 = cljs.core.count.call(null, inst_16016);
                                                        var inst_15998 = inst_16017;
                                                        var inst_15999 = inst_16016;
                                                        var inst_16000 = inst_16018;
                                                        var inst_16001 = 0;
                                                        var state_16057__$1 = function() {
                                                          var statearr_16091 = state_16057;
                                                          statearr_16091[12] = inst_15999;
                                                          statearr_16091[13] = inst_16001;
                                                          statearr_16091[15] = inst_16000;
                                                          statearr_16091[16] = inst_15998;
                                                          return statearr_16091;
                                                        }();
                                                        var statearr_16092_16133 = state_16057__$1;
                                                        statearr_16092_16133[2] = null;
                                                        statearr_16092_16133[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_16058 === 10) {
                                                          var inst_15999 = state_16057[12];
                                                          var inst_16001 = state_16057[13];
                                                          var inst_16000 = state_16057[15];
                                                          var inst_15998 = state_16057[16];
                                                          var inst_16006 = cljs.core._nth.call(null, inst_15999, inst_16001);
                                                          var inst_16007 = cljs.core.async.muxch_STAR_.call(null, inst_16006);
                                                          var inst_16008 = cljs.core.async.close_BANG_.call(null, inst_16007);
                                                          var inst_16009 = inst_16001 + 1;
                                                          var tmp16087 = inst_15999;
                                                          var tmp16088 = inst_16000;
                                                          var tmp16089 = inst_15998;
                                                          var inst_15998__$1 = tmp16089;
                                                          var inst_15999__$1 = tmp16087;
                                                          var inst_16000__$1 = tmp16088;
                                                          var inst_16001__$1 = inst_16009;
                                                          var state_16057__$1 = function() {
                                                            var statearr_16093 = state_16057;
                                                            statearr_16093[12] = inst_15999__$1;
                                                            statearr_16093[13] = inst_16001__$1;
                                                            statearr_16093[15] = inst_16000__$1;
                                                            statearr_16093[17] = inst_16008;
                                                            statearr_16093[16] = inst_15998__$1;
                                                            return statearr_16093;
                                                          }();
                                                          var statearr_16094_16134 = state_16057__$1;
                                                          statearr_16094_16134[2] = null;
                                                          statearr_16094_16134[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_16058 === 18) {
                                                            var inst_16027 = state_16057[2];
                                                            var state_16057__$1 = state_16057;
                                                            var statearr_16095_16135 = state_16057__$1;
                                                            statearr_16095_16135[2] = inst_16027;
                                                            statearr_16095_16135[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_16058 === 8) {
                                                              var inst_16001 = state_16057[13];
                                                              var inst_16000 = state_16057[15];
                                                              var inst_16003 = inst_16001 < inst_16000;
                                                              var inst_16004 = inst_16003;
                                                              var state_16057__$1 = state_16057;
                                                              if (cljs.core.truth_(inst_16004)) {
                                                                var statearr_16096_16136 = state_16057__$1;
                                                                statearr_16096_16136[1] = 10;
                                                              } else {
                                                                var statearr_16097_16137 = state_16057__$1;
                                                                statearr_16097_16137[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16109, mults, ensure_mult, p);
        return function(switch__14098__auto__, c__14210__auto___16109, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16101 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16101[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16101[1] = 1;
              return statearr_16101;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16057) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16057);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16102) {
                    if (e16102 instanceof Object) {
                      var ex__14102__auto__ = e16102;
                      var statearr_16103_16138 = state_16057;
                      statearr_16103_16138[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16057);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16102;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16139 = state_16057;
                  state_16057 = G__16139;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16057) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16057);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16109, mults, ensure_mult, p);
      }();
      var state__14212__auto__ = function() {
        var statearr_16104 = f__14211__auto__.call(null);
        statearr_16104[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16109;
        return statearr_16104;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16109, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var args16140 = [];
  var len__7279__auto___16143 = arguments.length;
  var i__7280__auto___16144 = 0;
  while (true) {
    if (i__7280__auto___16144 < len__7279__auto___16143) {
      args16140.push(arguments[i__7280__auto___16144]);
      var G__16145 = i__7280__auto___16144 + 1;
      i__7280__auto___16144 = G__16145;
      continue;
    } else {
    }
    break;
  }
  var G__16142 = args16140.length;
  switch(G__16142) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16140.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var args16147 = [];
  var len__7279__auto___16150 = arguments.length;
  var i__7280__auto___16151 = 0;
  while (true) {
    if (i__7280__auto___16151 < len__7279__auto___16150) {
      args16147.push(arguments[i__7280__auto___16151]);
      var G__16152 = i__7280__auto___16151 + 1;
      i__7280__auto___16151 = G__16152;
      continue;
    } else {
    }
    break;
  }
  var G__16149 = args16147.length;
  switch(G__16149) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16147.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var args16154 = [];
  var len__7279__auto___16225 = arguments.length;
  var i__7280__auto___16226 = 0;
  while (true) {
    if (i__7280__auto___16226 < len__7279__auto___16225) {
      args16154.push(arguments[i__7280__auto___16226]);
      var G__16227 = i__7280__auto___16226 + 1;
      i__7280__auto___16226 = G__16227;
      continue;
    } else {
    }
    break;
  }
  var G__16156 = args16154.length;
  switch(G__16156) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16154.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__14210__auto___16229 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16229, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16229, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_16195) {
            var state_val_16196 = state_16195[1];
            if (state_val_16196 === 7) {
              var state_16195__$1 = state_16195;
              var statearr_16197_16230 = state_16195__$1;
              statearr_16197_16230[2] = null;
              statearr_16197_16230[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16196 === 1) {
                var state_16195__$1 = state_16195;
                var statearr_16198_16231 = state_16195__$1;
                statearr_16198_16231[2] = null;
                statearr_16198_16231[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16196 === 4) {
                  var inst_16159 = state_16195[7];
                  var inst_16161 = inst_16159 < cnt;
                  var state_16195__$1 = state_16195;
                  if (cljs.core.truth_(inst_16161)) {
                    var statearr_16199_16232 = state_16195__$1;
                    statearr_16199_16232[1] = 6;
                  } else {
                    var statearr_16200_16233 = state_16195__$1;
                    statearr_16200_16233[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16196 === 15) {
                    var inst_16191 = state_16195[2];
                    var state_16195__$1 = state_16195;
                    var statearr_16201_16234 = state_16195__$1;
                    statearr_16201_16234[2] = inst_16191;
                    statearr_16201_16234[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16196 === 13) {
                      var inst_16184 = cljs.core.async.close_BANG_.call(null, out);
                      var state_16195__$1 = state_16195;
                      var statearr_16202_16235 = state_16195__$1;
                      statearr_16202_16235[2] = inst_16184;
                      statearr_16202_16235[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16196 === 6) {
                        var state_16195__$1 = state_16195;
                        var statearr_16203_16236 = state_16195__$1;
                        statearr_16203_16236[2] = null;
                        statearr_16203_16236[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16196 === 3) {
                          var inst_16193 = state_16195[2];
                          var state_16195__$1 = state_16195;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16195__$1, inst_16193);
                        } else {
                          if (state_val_16196 === 12) {
                            var inst_16181 = state_16195[8];
                            var inst_16181__$1 = state_16195[2];
                            var inst_16182 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_16181__$1);
                            var state_16195__$1 = function() {
                              var statearr_16204 = state_16195;
                              statearr_16204[8] = inst_16181__$1;
                              return statearr_16204;
                            }();
                            if (cljs.core.truth_(inst_16182)) {
                              var statearr_16205_16237 = state_16195__$1;
                              statearr_16205_16237[1] = 13;
                            } else {
                              var statearr_16206_16238 = state_16195__$1;
                              statearr_16206_16238[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16196 === 2) {
                              var inst_16158 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_16159 = 0;
                              var state_16195__$1 = function() {
                                var statearr_16207 = state_16195;
                                statearr_16207[9] = inst_16158;
                                statearr_16207[7] = inst_16159;
                                return statearr_16207;
                              }();
                              var statearr_16208_16239 = state_16195__$1;
                              statearr_16208_16239[2] = null;
                              statearr_16208_16239[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16196 === 11) {
                                var inst_16159 = state_16195[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_16195, 10, Object, null, 9);
                                var inst_16168 = chs__$1.call(null, inst_16159);
                                var inst_16169 = done.call(null, inst_16159);
                                var inst_16170 = cljs.core.async.take_BANG_.call(null, inst_16168, inst_16169);
                                var state_16195__$1 = state_16195;
                                var statearr_16209_16240 = state_16195__$1;
                                statearr_16209_16240[2] = inst_16170;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16195__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16196 === 9) {
                                  var inst_16159 = state_16195[7];
                                  var inst_16172 = state_16195[2];
                                  var inst_16173 = inst_16159 + 1;
                                  var inst_16159__$1 = inst_16173;
                                  var state_16195__$1 = function() {
                                    var statearr_16210 = state_16195;
                                    statearr_16210[10] = inst_16172;
                                    statearr_16210[7] = inst_16159__$1;
                                    return statearr_16210;
                                  }();
                                  var statearr_16211_16241 = state_16195__$1;
                                  statearr_16211_16241[2] = null;
                                  statearr_16211_16241[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16196 === 5) {
                                    var inst_16179 = state_16195[2];
                                    var state_16195__$1 = function() {
                                      var statearr_16212 = state_16195;
                                      statearr_16212[11] = inst_16179;
                                      return statearr_16212;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16195__$1, 12, dchan);
                                  } else {
                                    if (state_val_16196 === 14) {
                                      var inst_16181 = state_16195[8];
                                      var inst_16186 = cljs.core.apply.call(null, f, inst_16181);
                                      var state_16195__$1 = state_16195;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16195__$1, 16, out, inst_16186);
                                    } else {
                                      if (state_val_16196 === 16) {
                                        var inst_16188 = state_16195[2];
                                        var state_16195__$1 = function() {
                                          var statearr_16213 = state_16195;
                                          statearr_16213[12] = inst_16188;
                                          return statearr_16213;
                                        }();
                                        var statearr_16214_16242 = state_16195__$1;
                                        statearr_16214_16242[2] = null;
                                        statearr_16214_16242[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16196 === 10) {
                                          var inst_16163 = state_16195[2];
                                          var inst_16164 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_16195__$1 = function() {
                                            var statearr_16215 = state_16195;
                                            statearr_16215[13] = inst_16163;
                                            return statearr_16215;
                                          }();
                                          var statearr_16216_16243 = state_16195__$1;
                                          statearr_16216_16243[2] = inst_16164;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16195__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16196 === 8) {
                                            var inst_16177 = state_16195[2];
                                            var state_16195__$1 = state_16195;
                                            var statearr_16217_16244 = state_16195__$1;
                                            statearr_16217_16244[2] = inst_16177;
                                            statearr_16217_16244[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16229, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__14098__auto__, c__14210__auto___16229, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16221 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16221[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16221[1] = 1;
              return statearr_16221;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16195) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16195);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16222) {
                    if (e16222 instanceof Object) {
                      var ex__14102__auto__ = e16222;
                      var statearr_16223_16245 = state_16195;
                      statearr_16223_16245[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16195);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16222;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16246 = state_16195;
                  state_16195 = G__16246;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16195) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16195);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16229, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__14212__auto__ = function() {
        var statearr_16224 = f__14211__auto__.call(null);
        statearr_16224[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16229;
        return statearr_16224;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16229, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var args16248 = [];
  var len__7279__auto___16304 = arguments.length;
  var i__7280__auto___16305 = 0;
  while (true) {
    if (i__7280__auto___16305 < len__7279__auto___16304) {
      args16248.push(arguments[i__7280__auto___16305]);
      var G__16306 = i__7280__auto___16305 + 1;
      i__7280__auto___16305 = G__16306;
      continue;
    } else {
    }
    break;
  }
  var G__16250 = args16248.length;
  switch(G__16250) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16248.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14210__auto___16308 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16308, out) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16308, out) {
          return function(state_16280) {
            var state_val_16281 = state_16280[1];
            if (state_val_16281 === 7) {
              var inst_16259 = state_16280[7];
              var inst_16260 = state_16280[8];
              var inst_16259__$1 = state_16280[2];
              var inst_16260__$1 = cljs.core.nth.call(null, inst_16259__$1, 0, null);
              var inst_16261 = cljs.core.nth.call(null, inst_16259__$1, 1, null);
              var inst_16262 = inst_16260__$1 == null;
              var state_16280__$1 = function() {
                var statearr_16282 = state_16280;
                statearr_16282[7] = inst_16259__$1;
                statearr_16282[9] = inst_16261;
                statearr_16282[8] = inst_16260__$1;
                return statearr_16282;
              }();
              if (cljs.core.truth_(inst_16262)) {
                var statearr_16283_16309 = state_16280__$1;
                statearr_16283_16309[1] = 8;
              } else {
                var statearr_16284_16310 = state_16280__$1;
                statearr_16284_16310[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16281 === 1) {
                var inst_16251 = cljs.core.vec.call(null, chs);
                var inst_16252 = inst_16251;
                var state_16280__$1 = function() {
                  var statearr_16285 = state_16280;
                  statearr_16285[10] = inst_16252;
                  return statearr_16285;
                }();
                var statearr_16286_16311 = state_16280__$1;
                statearr_16286_16311[2] = null;
                statearr_16286_16311[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16281 === 4) {
                  var inst_16252 = state_16280[10];
                  var state_16280__$1 = state_16280;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_16280__$1, 7, inst_16252);
                } else {
                  if (state_val_16281 === 6) {
                    var inst_16276 = state_16280[2];
                    var state_16280__$1 = state_16280;
                    var statearr_16287_16312 = state_16280__$1;
                    statearr_16287_16312[2] = inst_16276;
                    statearr_16287_16312[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16281 === 3) {
                      var inst_16278 = state_16280[2];
                      var state_16280__$1 = state_16280;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16280__$1, inst_16278);
                    } else {
                      if (state_val_16281 === 2) {
                        var inst_16252 = state_16280[10];
                        var inst_16254 = cljs.core.count.call(null, inst_16252);
                        var inst_16255 = inst_16254 > 0;
                        var state_16280__$1 = state_16280;
                        if (cljs.core.truth_(inst_16255)) {
                          var statearr_16289_16313 = state_16280__$1;
                          statearr_16289_16313[1] = 4;
                        } else {
                          var statearr_16290_16314 = state_16280__$1;
                          statearr_16290_16314[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16281 === 11) {
                          var inst_16252 = state_16280[10];
                          var inst_16269 = state_16280[2];
                          var tmp16288 = inst_16252;
                          var inst_16252__$1 = tmp16288;
                          var state_16280__$1 = function() {
                            var statearr_16291 = state_16280;
                            statearr_16291[11] = inst_16269;
                            statearr_16291[10] = inst_16252__$1;
                            return statearr_16291;
                          }();
                          var statearr_16292_16315 = state_16280__$1;
                          statearr_16292_16315[2] = null;
                          statearr_16292_16315[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16281 === 9) {
                            var inst_16260 = state_16280[8];
                            var state_16280__$1 = state_16280;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16280__$1, 11, out, inst_16260);
                          } else {
                            if (state_val_16281 === 5) {
                              var inst_16274 = cljs.core.async.close_BANG_.call(null, out);
                              var state_16280__$1 = state_16280;
                              var statearr_16293_16316 = state_16280__$1;
                              statearr_16293_16316[2] = inst_16274;
                              statearr_16293_16316[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16281 === 10) {
                                var inst_16272 = state_16280[2];
                                var state_16280__$1 = state_16280;
                                var statearr_16294_16317 = state_16280__$1;
                                statearr_16294_16317[2] = inst_16272;
                                statearr_16294_16317[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16281 === 8) {
                                  var inst_16259 = state_16280[7];
                                  var inst_16261 = state_16280[9];
                                  var inst_16260 = state_16280[8];
                                  var inst_16252 = state_16280[10];
                                  var inst_16264 = function() {
                                    var cs = inst_16252;
                                    var vec__16257 = inst_16259;
                                    var v = inst_16260;
                                    var c = inst_16261;
                                    return function(cs, vec__16257, v, c, inst_16259, inst_16261, inst_16260, inst_16252, state_val_16281, c__14210__auto___16308, out) {
                                      return function(p1__16247_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__16247_SHARP_);
                                      };
                                    }(cs, vec__16257, v, c, inst_16259, inst_16261, inst_16260, inst_16252, state_val_16281, c__14210__auto___16308, out);
                                  }();
                                  var inst_16265 = cljs.core.filterv.call(null, inst_16264, inst_16252);
                                  var inst_16252__$1 = inst_16265;
                                  var state_16280__$1 = function() {
                                    var statearr_16295 = state_16280;
                                    statearr_16295[10] = inst_16252__$1;
                                    return statearr_16295;
                                  }();
                                  var statearr_16296_16318 = state_16280__$1;
                                  statearr_16296_16318[2] = null;
                                  statearr_16296_16318[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16308, out);
        return function(switch__14098__auto__, c__14210__auto___16308, out) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16300 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16300[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16300[1] = 1;
              return statearr_16300;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16280) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16280);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16301) {
                    if (e16301 instanceof Object) {
                      var ex__14102__auto__ = e16301;
                      var statearr_16302_16319 = state_16280;
                      statearr_16302_16319[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16280);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16301;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16320 = state_16280;
                  state_16280 = G__16320;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16280) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16280);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16308, out);
      }();
      var state__14212__auto__ = function() {
        var statearr_16303 = f__14211__auto__.call(null);
        statearr_16303[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16308;
        return statearr_16303;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16308, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var args16321 = [];
  var len__7279__auto___16370 = arguments.length;
  var i__7280__auto___16371 = 0;
  while (true) {
    if (i__7280__auto___16371 < len__7279__auto___16370) {
      args16321.push(arguments[i__7280__auto___16371]);
      var G__16372 = i__7280__auto___16371 + 1;
      i__7280__auto___16371 = G__16372;
      continue;
    } else {
    }
    break;
  }
  var G__16323 = args16321.length;
  switch(G__16323) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16321.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14210__auto___16374 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16374, out) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16374, out) {
          return function(state_16347) {
            var state_val_16348 = state_16347[1];
            if (state_val_16348 === 7) {
              var inst_16329 = state_16347[7];
              var inst_16329__$1 = state_16347[2];
              var inst_16330 = inst_16329__$1 == null;
              var inst_16331 = cljs.core.not.call(null, inst_16330);
              var state_16347__$1 = function() {
                var statearr_16349 = state_16347;
                statearr_16349[7] = inst_16329__$1;
                return statearr_16349;
              }();
              if (inst_16331) {
                var statearr_16350_16375 = state_16347__$1;
                statearr_16350_16375[1] = 8;
              } else {
                var statearr_16351_16376 = state_16347__$1;
                statearr_16351_16376[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16348 === 1) {
                var inst_16324 = 0;
                var state_16347__$1 = function() {
                  var statearr_16352 = state_16347;
                  statearr_16352[8] = inst_16324;
                  return statearr_16352;
                }();
                var statearr_16353_16377 = state_16347__$1;
                statearr_16353_16377[2] = null;
                statearr_16353_16377[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16348 === 4) {
                  var state_16347__$1 = state_16347;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16347__$1, 7, ch);
                } else {
                  if (state_val_16348 === 6) {
                    var inst_16342 = state_16347[2];
                    var state_16347__$1 = state_16347;
                    var statearr_16354_16378 = state_16347__$1;
                    statearr_16354_16378[2] = inst_16342;
                    statearr_16354_16378[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16348 === 3) {
                      var inst_16344 = state_16347[2];
                      var inst_16345 = cljs.core.async.close_BANG_.call(null, out);
                      var state_16347__$1 = function() {
                        var statearr_16355 = state_16347;
                        statearr_16355[9] = inst_16344;
                        return statearr_16355;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16347__$1, inst_16345);
                    } else {
                      if (state_val_16348 === 2) {
                        var inst_16324 = state_16347[8];
                        var inst_16326 = inst_16324 < n;
                        var state_16347__$1 = state_16347;
                        if (cljs.core.truth_(inst_16326)) {
                          var statearr_16356_16379 = state_16347__$1;
                          statearr_16356_16379[1] = 4;
                        } else {
                          var statearr_16357_16380 = state_16347__$1;
                          statearr_16357_16380[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16348 === 11) {
                          var inst_16324 = state_16347[8];
                          var inst_16334 = state_16347[2];
                          var inst_16335 = inst_16324 + 1;
                          var inst_16324__$1 = inst_16335;
                          var state_16347__$1 = function() {
                            var statearr_16358 = state_16347;
                            statearr_16358[8] = inst_16324__$1;
                            statearr_16358[10] = inst_16334;
                            return statearr_16358;
                          }();
                          var statearr_16359_16381 = state_16347__$1;
                          statearr_16359_16381[2] = null;
                          statearr_16359_16381[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16348 === 9) {
                            var state_16347__$1 = state_16347;
                            var statearr_16360_16382 = state_16347__$1;
                            statearr_16360_16382[2] = null;
                            statearr_16360_16382[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16348 === 5) {
                              var state_16347__$1 = state_16347;
                              var statearr_16361_16383 = state_16347__$1;
                              statearr_16361_16383[2] = null;
                              statearr_16361_16383[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16348 === 10) {
                                var inst_16339 = state_16347[2];
                                var state_16347__$1 = state_16347;
                                var statearr_16362_16384 = state_16347__$1;
                                statearr_16362_16384[2] = inst_16339;
                                statearr_16362_16384[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16348 === 8) {
                                  var inst_16329 = state_16347[7];
                                  var state_16347__$1 = state_16347;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16347__$1, 11, out, inst_16329);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16374, out);
        return function(switch__14098__auto__, c__14210__auto___16374, out) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16366 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_16366[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16366[1] = 1;
              return statearr_16366;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16347) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16347);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16367) {
                    if (e16367 instanceof Object) {
                      var ex__14102__auto__ = e16367;
                      var statearr_16368_16385 = state_16347;
                      statearr_16368_16385[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16347);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16367;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16386 = state_16347;
                  state_16347 = G__16386;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16347) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16347);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16374, out);
      }();
      var state__14212__auto__ = function() {
        var statearr_16369 = f__14211__auto__.call(null);
        statearr_16369[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16374;
        return statearr_16369;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16374, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async16394 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async16394 = function(map_LT_, f, ch, meta16395) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta16395 = meta16395;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16396, meta16395__$1) {
      var self__ = this;
      var _16396__$1 = this;
      return new cljs.core.async.t_cljs$core$async16394(self__.map_LT_, self__.f, self__.ch, meta16395__$1);
    };
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16396) {
      var self__ = this;
      var _16396__$1 = this;
      return self__.meta16395;
    };
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async16397 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async16397 = function(map_LT_, f, ch, meta16395, _, fn1, meta16398) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta16395 = meta16395;
            this._ = _;
            this.fn1 = fn1;
            this.meta16398 = meta16398;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async16397.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_16399, meta16398__$1) {
              var self__ = this;
              var _16399__$1 = this;
              return new cljs.core.async.t_cljs$core$async16397(self__.map_LT_, self__.f, self__.ch, self__.meta16395, self__._, self__.fn1, meta16398__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async16397.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_16399) {
              var self__ = this;
              var _16399__$1 = this;
              return self__.meta16398;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async16397.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t_cljs$core$async16397.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async16397.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return true;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async16397.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__16387_SHARP_) {
                  return f1.call(null, p1__16387_SHARP_ == null ? null : self__.f.call(null, p1__16387_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async16397.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta16395", "meta16395", -2140182270, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async16394", "cljs.core.async/t_cljs$core$async16394", 523031419, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta16398", "meta16398", -607823600, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async16397.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async16397.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async16397";
          cljs.core.async.t_cljs$core$async16397.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
              return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async16397");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async16397 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async16397(map_LT___$1, f__$1, ch__$1, meta16395__$1, ___$2, fn1__$1, meta16398) {
              return new cljs.core.async.t_cljs$core$async16397(map_LT___$1, f__$1, ch__$1, meta16395__$1, ___$2, fn1__$1, meta16398);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async16397(self__.map_LT_, self__.f, self__.ch, self__.meta16395, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__6198__auto__ = ret;
        if (cljs.core.truth_(and__6198__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__6198__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async16394.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async16394.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta16395", "meta16395", -2140182270, null)], null);
    };
    cljs.core.async.t_cljs$core$async16394.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async16394.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async16394";
    cljs.core.async.t_cljs$core$async16394.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async16394");
    };
    cljs.core.async.__GT_t_cljs$core$async16394 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async16394(map_LT___$1, f__$1, ch__$1, meta16395) {
      return new cljs.core.async.t_cljs$core$async16394(map_LT___$1, f__$1, ch__$1, meta16395);
    };
  }
  return new cljs.core.async.t_cljs$core$async16394(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async16403 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async16403 = function(map_GT_, f, ch, meta16404) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta16404 = meta16404;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16405, meta16404__$1) {
      var self__ = this;
      var _16405__$1 = this;
      return new cljs.core.async.t_cljs$core$async16403(self__.map_GT_, self__.f, self__.ch, meta16404__$1);
    };
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16405) {
      var self__ = this;
      var _16405__$1 = this;
      return self__.meta16404;
    };
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async16403.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async16403.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta16404", "meta16404", -782482359, null)], null);
    };
    cljs.core.async.t_cljs$core$async16403.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async16403.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async16403";
    cljs.core.async.t_cljs$core$async16403.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async16403");
    };
    cljs.core.async.__GT_t_cljs$core$async16403 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async16403(map_GT___$1, f__$1, ch__$1, meta16404) {
      return new cljs.core.async.t_cljs$core$async16403(map_GT___$1, f__$1, ch__$1, meta16404);
    };
  }
  return new cljs.core.async.t_cljs$core$async16403(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async16409 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async16409 = function(filter_GT_, p, ch, meta16410) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta16410 = meta16410;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16411, meta16410__$1) {
      var self__ = this;
      var _16411__$1 = this;
      return new cljs.core.async.t_cljs$core$async16409(self__.filter_GT_, self__.p, self__.ch, meta16410__$1);
    };
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16411) {
      var self__ = this;
      var _16411__$1 = this;
      return self__.meta16410;
    };
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async16409.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async16409.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta16410", "meta16410", -1116109658, null)], null);
    };
    cljs.core.async.t_cljs$core$async16409.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async16409.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async16409";
    cljs.core.async.t_cljs$core$async16409.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "cljs.core.async/t_cljs$core$async16409");
    };
    cljs.core.async.__GT_t_cljs$core$async16409 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async16409(filter_GT___$1, p__$1, ch__$1, meta16410) {
      return new cljs.core.async.t_cljs$core$async16409(filter_GT___$1, p__$1, ch__$1, meta16410);
    };
  }
  return new cljs.core.async.t_cljs$core$async16409(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var args16412 = [];
  var len__7279__auto___16456 = arguments.length;
  var i__7280__auto___16457 = 0;
  while (true) {
    if (i__7280__auto___16457 < len__7279__auto___16456) {
      args16412.push(arguments[i__7280__auto___16457]);
      var G__16458 = i__7280__auto___16457 + 1;
      i__7280__auto___16457 = G__16458;
      continue;
    } else {
    }
    break;
  }
  var G__16414 = args16412.length;
  switch(G__16414) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16412.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14210__auto___16460 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16460, out) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16460, out) {
          return function(state_16435) {
            var state_val_16436 = state_16435[1];
            if (state_val_16436 === 7) {
              var inst_16431 = state_16435[2];
              var state_16435__$1 = state_16435;
              var statearr_16437_16461 = state_16435__$1;
              statearr_16437_16461[2] = inst_16431;
              statearr_16437_16461[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16436 === 1) {
                var state_16435__$1 = state_16435;
                var statearr_16438_16462 = state_16435__$1;
                statearr_16438_16462[2] = null;
                statearr_16438_16462[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16436 === 4) {
                  var inst_16417 = state_16435[7];
                  var inst_16417__$1 = state_16435[2];
                  var inst_16418 = inst_16417__$1 == null;
                  var state_16435__$1 = function() {
                    var statearr_16439 = state_16435;
                    statearr_16439[7] = inst_16417__$1;
                    return statearr_16439;
                  }();
                  if (cljs.core.truth_(inst_16418)) {
                    var statearr_16440_16463 = state_16435__$1;
                    statearr_16440_16463[1] = 5;
                  } else {
                    var statearr_16441_16464 = state_16435__$1;
                    statearr_16441_16464[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16436 === 6) {
                    var inst_16417 = state_16435[7];
                    var inst_16422 = p.call(null, inst_16417);
                    var state_16435__$1 = state_16435;
                    if (cljs.core.truth_(inst_16422)) {
                      var statearr_16442_16465 = state_16435__$1;
                      statearr_16442_16465[1] = 8;
                    } else {
                      var statearr_16443_16466 = state_16435__$1;
                      statearr_16443_16466[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16436 === 3) {
                      var inst_16433 = state_16435[2];
                      var state_16435__$1 = state_16435;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16435__$1, inst_16433);
                    } else {
                      if (state_val_16436 === 2) {
                        var state_16435__$1 = state_16435;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16435__$1, 4, ch);
                      } else {
                        if (state_val_16436 === 11) {
                          var inst_16425 = state_16435[2];
                          var state_16435__$1 = state_16435;
                          var statearr_16444_16467 = state_16435__$1;
                          statearr_16444_16467[2] = inst_16425;
                          statearr_16444_16467[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16436 === 9) {
                            var state_16435__$1 = state_16435;
                            var statearr_16445_16468 = state_16435__$1;
                            statearr_16445_16468[2] = null;
                            statearr_16445_16468[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16436 === 5) {
                              var inst_16420 = cljs.core.async.close_BANG_.call(null, out);
                              var state_16435__$1 = state_16435;
                              var statearr_16446_16469 = state_16435__$1;
                              statearr_16446_16469[2] = inst_16420;
                              statearr_16446_16469[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16436 === 10) {
                                var inst_16428 = state_16435[2];
                                var state_16435__$1 = function() {
                                  var statearr_16447 = state_16435;
                                  statearr_16447[8] = inst_16428;
                                  return statearr_16447;
                                }();
                                var statearr_16448_16470 = state_16435__$1;
                                statearr_16448_16470[2] = null;
                                statearr_16448_16470[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16436 === 8) {
                                  var inst_16417 = state_16435[7];
                                  var state_16435__$1 = state_16435;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16435__$1, 11, out, inst_16417);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16460, out);
        return function(switch__14098__auto__, c__14210__auto___16460, out) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16452 = [null, null, null, null, null, null, null, null, null];
              statearr_16452[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16452[1] = 1;
              return statearr_16452;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16435) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16435);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16453) {
                    if (e16453 instanceof Object) {
                      var ex__14102__auto__ = e16453;
                      var statearr_16454_16471 = state_16435;
                      statearr_16454_16471[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16435);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16453;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16472 = state_16435;
                  state_16435 = G__16472;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16435) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16435);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16460, out);
      }();
      var state__14212__auto__ = function() {
        var statearr_16455 = f__14211__auto__.call(null);
        statearr_16455[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16460;
        return statearr_16455;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16460, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var args16473 = [];
  var len__7279__auto___16476 = arguments.length;
  var i__7280__auto___16477 = 0;
  while (true) {
    if (i__7280__auto___16477 < len__7279__auto___16476) {
      args16473.push(arguments[i__7280__auto___16477]);
      var G__16478 = i__7280__auto___16477 + 1;
      i__7280__auto___16477 = G__16478;
      continue;
    } else {
    }
    break;
  }
  var G__16475 = args16473.length;
  switch(G__16475) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16473.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__14210__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto__) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto__) {
          return function(state_16645) {
            var state_val_16646 = state_16645[1];
            if (state_val_16646 === 7) {
              var inst_16641 = state_16645[2];
              var state_16645__$1 = state_16645;
              var statearr_16647_16688 = state_16645__$1;
              statearr_16647_16688[2] = inst_16641;
              statearr_16647_16688[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16646 === 20) {
                var inst_16611 = state_16645[7];
                var inst_16622 = state_16645[2];
                var inst_16623 = cljs.core.next.call(null, inst_16611);
                var inst_16597 = inst_16623;
                var inst_16598 = null;
                var inst_16599 = 0;
                var inst_16600 = 0;
                var state_16645__$1 = function() {
                  var statearr_16648 = state_16645;
                  statearr_16648[8] = inst_16600;
                  statearr_16648[9] = inst_16598;
                  statearr_16648[10] = inst_16599;
                  statearr_16648[11] = inst_16622;
                  statearr_16648[12] = inst_16597;
                  return statearr_16648;
                }();
                var statearr_16649_16689 = state_16645__$1;
                statearr_16649_16689[2] = null;
                statearr_16649_16689[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16646 === 1) {
                  var state_16645__$1 = state_16645;
                  var statearr_16650_16690 = state_16645__$1;
                  statearr_16650_16690[2] = null;
                  statearr_16650_16690[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16646 === 4) {
                    var inst_16586 = state_16645[13];
                    var inst_16586__$1 = state_16645[2];
                    var inst_16587 = inst_16586__$1 == null;
                    var state_16645__$1 = function() {
                      var statearr_16651 = state_16645;
                      statearr_16651[13] = inst_16586__$1;
                      return statearr_16651;
                    }();
                    if (cljs.core.truth_(inst_16587)) {
                      var statearr_16652_16691 = state_16645__$1;
                      statearr_16652_16691[1] = 5;
                    } else {
                      var statearr_16653_16692 = state_16645__$1;
                      statearr_16653_16692[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16646 === 15) {
                      var state_16645__$1 = state_16645;
                      var statearr_16657_16693 = state_16645__$1;
                      statearr_16657_16693[2] = null;
                      statearr_16657_16693[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16646 === 21) {
                        var state_16645__$1 = state_16645;
                        var statearr_16658_16694 = state_16645__$1;
                        statearr_16658_16694[2] = null;
                        statearr_16658_16694[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16646 === 13) {
                          var inst_16600 = state_16645[8];
                          var inst_16598 = state_16645[9];
                          var inst_16599 = state_16645[10];
                          var inst_16597 = state_16645[12];
                          var inst_16607 = state_16645[2];
                          var inst_16608 = inst_16600 + 1;
                          var tmp16654 = inst_16598;
                          var tmp16655 = inst_16599;
                          var tmp16656 = inst_16597;
                          var inst_16597__$1 = tmp16656;
                          var inst_16598__$1 = tmp16654;
                          var inst_16599__$1 = tmp16655;
                          var inst_16600__$1 = inst_16608;
                          var state_16645__$1 = function() {
                            var statearr_16659 = state_16645;
                            statearr_16659[14] = inst_16607;
                            statearr_16659[8] = inst_16600__$1;
                            statearr_16659[9] = inst_16598__$1;
                            statearr_16659[10] = inst_16599__$1;
                            statearr_16659[12] = inst_16597__$1;
                            return statearr_16659;
                          }();
                          var statearr_16660_16695 = state_16645__$1;
                          statearr_16660_16695[2] = null;
                          statearr_16660_16695[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16646 === 22) {
                            var state_16645__$1 = state_16645;
                            var statearr_16661_16696 = state_16645__$1;
                            statearr_16661_16696[2] = null;
                            statearr_16661_16696[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16646 === 6) {
                              var inst_16586 = state_16645[13];
                              var inst_16595 = f.call(null, inst_16586);
                              var inst_16596 = cljs.core.seq.call(null, inst_16595);
                              var inst_16597 = inst_16596;
                              var inst_16598 = null;
                              var inst_16599 = 0;
                              var inst_16600 = 0;
                              var state_16645__$1 = function() {
                                var statearr_16662 = state_16645;
                                statearr_16662[8] = inst_16600;
                                statearr_16662[9] = inst_16598;
                                statearr_16662[10] = inst_16599;
                                statearr_16662[12] = inst_16597;
                                return statearr_16662;
                              }();
                              var statearr_16663_16697 = state_16645__$1;
                              statearr_16663_16697[2] = null;
                              statearr_16663_16697[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16646 === 17) {
                                var inst_16611 = state_16645[7];
                                var inst_16615 = cljs.core.chunk_first.call(null, inst_16611);
                                var inst_16616 = cljs.core.chunk_rest.call(null, inst_16611);
                                var inst_16617 = cljs.core.count.call(null, inst_16615);
                                var inst_16597 = inst_16616;
                                var inst_16598 = inst_16615;
                                var inst_16599 = inst_16617;
                                var inst_16600 = 0;
                                var state_16645__$1 = function() {
                                  var statearr_16664 = state_16645;
                                  statearr_16664[8] = inst_16600;
                                  statearr_16664[9] = inst_16598;
                                  statearr_16664[10] = inst_16599;
                                  statearr_16664[12] = inst_16597;
                                  return statearr_16664;
                                }();
                                var statearr_16665_16698 = state_16645__$1;
                                statearr_16665_16698[2] = null;
                                statearr_16665_16698[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16646 === 3) {
                                  var inst_16643 = state_16645[2];
                                  var state_16645__$1 = state_16645;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16645__$1, inst_16643);
                                } else {
                                  if (state_val_16646 === 12) {
                                    var inst_16631 = state_16645[2];
                                    var state_16645__$1 = state_16645;
                                    var statearr_16666_16699 = state_16645__$1;
                                    statearr_16666_16699[2] = inst_16631;
                                    statearr_16666_16699[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16646 === 2) {
                                      var state_16645__$1 = state_16645;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16645__$1, 4, in$);
                                    } else {
                                      if (state_val_16646 === 23) {
                                        var inst_16639 = state_16645[2];
                                        var state_16645__$1 = state_16645;
                                        var statearr_16667_16700 = state_16645__$1;
                                        statearr_16667_16700[2] = inst_16639;
                                        statearr_16667_16700[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16646 === 19) {
                                          var inst_16626 = state_16645[2];
                                          var state_16645__$1 = state_16645;
                                          var statearr_16668_16701 = state_16645__$1;
                                          statearr_16668_16701[2] = inst_16626;
                                          statearr_16668_16701[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16646 === 11) {
                                            var inst_16597 = state_16645[12];
                                            var inst_16611 = state_16645[7];
                                            var inst_16611__$1 = cljs.core.seq.call(null, inst_16597);
                                            var state_16645__$1 = function() {
                                              var statearr_16669 = state_16645;
                                              statearr_16669[7] = inst_16611__$1;
                                              return statearr_16669;
                                            }();
                                            if (inst_16611__$1) {
                                              var statearr_16670_16702 = state_16645__$1;
                                              statearr_16670_16702[1] = 14;
                                            } else {
                                              var statearr_16671_16703 = state_16645__$1;
                                              statearr_16671_16703[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16646 === 9) {
                                              var inst_16633 = state_16645[2];
                                              var inst_16634 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_16645__$1 = function() {
                                                var statearr_16672 = state_16645;
                                                statearr_16672[15] = inst_16633;
                                                return statearr_16672;
                                              }();
                                              if (cljs.core.truth_(inst_16634)) {
                                                var statearr_16673_16704 = state_16645__$1;
                                                statearr_16673_16704[1] = 21;
                                              } else {
                                                var statearr_16674_16705 = state_16645__$1;
                                                statearr_16674_16705[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_16646 === 5) {
                                                var inst_16589 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_16645__$1 = state_16645;
                                                var statearr_16675_16706 = state_16645__$1;
                                                statearr_16675_16706[2] = inst_16589;
                                                statearr_16675_16706[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_16646 === 14) {
                                                  var inst_16611 = state_16645[7];
                                                  var inst_16613 = cljs.core.chunked_seq_QMARK_.call(null, inst_16611);
                                                  var state_16645__$1 = state_16645;
                                                  if (inst_16613) {
                                                    var statearr_16676_16707 = state_16645__$1;
                                                    statearr_16676_16707[1] = 17;
                                                  } else {
                                                    var statearr_16677_16708 = state_16645__$1;
                                                    statearr_16677_16708[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_16646 === 16) {
                                                    var inst_16629 = state_16645[2];
                                                    var state_16645__$1 = state_16645;
                                                    var statearr_16678_16709 = state_16645__$1;
                                                    statearr_16678_16709[2] = inst_16629;
                                                    statearr_16678_16709[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_16646 === 10) {
                                                      var inst_16600 = state_16645[8];
                                                      var inst_16598 = state_16645[9];
                                                      var inst_16605 = cljs.core._nth.call(null, inst_16598, inst_16600);
                                                      var state_16645__$1 = state_16645;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16645__$1, 13, out, inst_16605);
                                                    } else {
                                                      if (state_val_16646 === 18) {
                                                        var inst_16611 = state_16645[7];
                                                        var inst_16620 = cljs.core.first.call(null, inst_16611);
                                                        var state_16645__$1 = state_16645;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16645__$1, 20, out, inst_16620);
                                                      } else {
                                                        if (state_val_16646 === 8) {
                                                          var inst_16600 = state_16645[8];
                                                          var inst_16599 = state_16645[10];
                                                          var inst_16602 = inst_16600 < inst_16599;
                                                          var inst_16603 = inst_16602;
                                                          var state_16645__$1 = state_16645;
                                                          if (cljs.core.truth_(inst_16603)) {
                                                            var statearr_16679_16710 = state_16645__$1;
                                                            statearr_16679_16710[1] = 10;
                                                          } else {
                                                            var statearr_16680_16711 = state_16645__$1;
                                                            statearr_16680_16711[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto__);
        return function(switch__14098__auto__, c__14210__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__14099__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__14099__auto____0 = function() {
              var statearr_16684 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16684[0] = cljs$core$async$mapcat_STAR__$_state_machine__14099__auto__;
              statearr_16684[1] = 1;
              return statearr_16684;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__14099__auto____1 = function(state_16645) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16645);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16685) {
                    if (e16685 instanceof Object) {
                      var ex__14102__auto__ = e16685;
                      var statearr_16686_16712 = state_16645;
                      statearr_16686_16712[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16645);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16685;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16713 = state_16645;
                  state_16645 = G__16713;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__14099__auto__ = function(state_16645) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__14099__auto____1.call(this, state_16645);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__14099__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__14099__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto__);
      }();
      var state__14212__auto__ = function() {
        var statearr_16687 = f__14211__auto__.call(null);
        statearr_16687[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto__;
        return statearr_16687;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto__));
  return c__14210__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var args16714 = [];
  var len__7279__auto___16717 = arguments.length;
  var i__7280__auto___16718 = 0;
  while (true) {
    if (i__7280__auto___16718 < len__7279__auto___16717) {
      args16714.push(arguments[i__7280__auto___16718]);
      var G__16719 = i__7280__auto___16718 + 1;
      i__7280__auto___16718 = G__16719;
      continue;
    } else {
    }
    break;
  }
  var G__16716 = args16714.length;
  switch(G__16716) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16714.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var args16721 = [];
  var len__7279__auto___16724 = arguments.length;
  var i__7280__auto___16725 = 0;
  while (true) {
    if (i__7280__auto___16725 < len__7279__auto___16724) {
      args16721.push(arguments[i__7280__auto___16725]);
      var G__16726 = i__7280__auto___16725 + 1;
      i__7280__auto___16725 = G__16726;
      continue;
    } else {
    }
    break;
  }
  var G__16723 = args16721.length;
  switch(G__16723) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16721.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var args16728 = [];
  var len__7279__auto___16779 = arguments.length;
  var i__7280__auto___16780 = 0;
  while (true) {
    if (i__7280__auto___16780 < len__7279__auto___16779) {
      args16728.push(arguments[i__7280__auto___16780]);
      var G__16781 = i__7280__auto___16780 + 1;
      i__7280__auto___16780 = G__16781;
      continue;
    } else {
    }
    break;
  }
  var G__16730 = args16728.length;
  switch(G__16730) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16728.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14210__auto___16783 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16783, out) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16783, out) {
          return function(state_16754) {
            var state_val_16755 = state_16754[1];
            if (state_val_16755 === 7) {
              var inst_16749 = state_16754[2];
              var state_16754__$1 = state_16754;
              var statearr_16756_16784 = state_16754__$1;
              statearr_16756_16784[2] = inst_16749;
              statearr_16756_16784[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16755 === 1) {
                var inst_16731 = null;
                var state_16754__$1 = function() {
                  var statearr_16757 = state_16754;
                  statearr_16757[7] = inst_16731;
                  return statearr_16757;
                }();
                var statearr_16758_16785 = state_16754__$1;
                statearr_16758_16785[2] = null;
                statearr_16758_16785[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16755 === 4) {
                  var inst_16734 = state_16754[8];
                  var inst_16734__$1 = state_16754[2];
                  var inst_16735 = inst_16734__$1 == null;
                  var inst_16736 = cljs.core.not.call(null, inst_16735);
                  var state_16754__$1 = function() {
                    var statearr_16759 = state_16754;
                    statearr_16759[8] = inst_16734__$1;
                    return statearr_16759;
                  }();
                  if (inst_16736) {
                    var statearr_16760_16786 = state_16754__$1;
                    statearr_16760_16786[1] = 5;
                  } else {
                    var statearr_16761_16787 = state_16754__$1;
                    statearr_16761_16787[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16755 === 6) {
                    var state_16754__$1 = state_16754;
                    var statearr_16762_16788 = state_16754__$1;
                    statearr_16762_16788[2] = null;
                    statearr_16762_16788[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16755 === 3) {
                      var inst_16751 = state_16754[2];
                      var inst_16752 = cljs.core.async.close_BANG_.call(null, out);
                      var state_16754__$1 = function() {
                        var statearr_16763 = state_16754;
                        statearr_16763[9] = inst_16751;
                        return statearr_16763;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16754__$1, inst_16752);
                    } else {
                      if (state_val_16755 === 2) {
                        var state_16754__$1 = state_16754;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16754__$1, 4, ch);
                      } else {
                        if (state_val_16755 === 11) {
                          var inst_16734 = state_16754[8];
                          var inst_16743 = state_16754[2];
                          var inst_16731 = inst_16734;
                          var state_16754__$1 = function() {
                            var statearr_16764 = state_16754;
                            statearr_16764[10] = inst_16743;
                            statearr_16764[7] = inst_16731;
                            return statearr_16764;
                          }();
                          var statearr_16765_16789 = state_16754__$1;
                          statearr_16765_16789[2] = null;
                          statearr_16765_16789[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16755 === 9) {
                            var inst_16734 = state_16754[8];
                            var state_16754__$1 = state_16754;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16754__$1, 11, out, inst_16734);
                          } else {
                            if (state_val_16755 === 5) {
                              var inst_16734 = state_16754[8];
                              var inst_16731 = state_16754[7];
                              var inst_16738 = cljs.core._EQ_.call(null, inst_16734, inst_16731);
                              var state_16754__$1 = state_16754;
                              if (inst_16738) {
                                var statearr_16767_16790 = state_16754__$1;
                                statearr_16767_16790[1] = 8;
                              } else {
                                var statearr_16768_16791 = state_16754__$1;
                                statearr_16768_16791[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16755 === 10) {
                                var inst_16746 = state_16754[2];
                                var state_16754__$1 = state_16754;
                                var statearr_16769_16792 = state_16754__$1;
                                statearr_16769_16792[2] = inst_16746;
                                statearr_16769_16792[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16755 === 8) {
                                  var inst_16731 = state_16754[7];
                                  var tmp16766 = inst_16731;
                                  var inst_16731__$1 = tmp16766;
                                  var state_16754__$1 = function() {
                                    var statearr_16770 = state_16754;
                                    statearr_16770[7] = inst_16731__$1;
                                    return statearr_16770;
                                  }();
                                  var statearr_16771_16793 = state_16754__$1;
                                  statearr_16771_16793[2] = null;
                                  statearr_16771_16793[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16783, out);
        return function(switch__14098__auto__, c__14210__auto___16783, out) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16775 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_16775[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16775[1] = 1;
              return statearr_16775;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16754) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16754);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16776) {
                    if (e16776 instanceof Object) {
                      var ex__14102__auto__ = e16776;
                      var statearr_16777_16794 = state_16754;
                      statearr_16777_16794[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16754);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16776;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16795 = state_16754;
                  state_16754 = G__16795;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16754) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16754);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16783, out);
      }();
      var state__14212__auto__ = function() {
        var statearr_16778 = f__14211__auto__.call(null);
        statearr_16778[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16783;
        return statearr_16778;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16783, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var args16796 = [];
  var len__7279__auto___16866 = arguments.length;
  var i__7280__auto___16867 = 0;
  while (true) {
    if (i__7280__auto___16867 < len__7279__auto___16866) {
      args16796.push(arguments[i__7280__auto___16867]);
      var G__16868 = i__7280__auto___16867 + 1;
      i__7280__auto___16867 = G__16868;
      continue;
    } else {
    }
    break;
  }
  var G__16798 = args16796.length;
  switch(G__16798) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16796.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14210__auto___16870 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16870, out) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16870, out) {
          return function(state_16836) {
            var state_val_16837 = state_16836[1];
            if (state_val_16837 === 7) {
              var inst_16832 = state_16836[2];
              var state_16836__$1 = state_16836;
              var statearr_16838_16871 = state_16836__$1;
              statearr_16838_16871[2] = inst_16832;
              statearr_16838_16871[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16837 === 1) {
                var inst_16799 = new Array(n);
                var inst_16800 = inst_16799;
                var inst_16801 = 0;
                var state_16836__$1 = function() {
                  var statearr_16839 = state_16836;
                  statearr_16839[7] = inst_16800;
                  statearr_16839[8] = inst_16801;
                  return statearr_16839;
                }();
                var statearr_16840_16872 = state_16836__$1;
                statearr_16840_16872[2] = null;
                statearr_16840_16872[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16837 === 4) {
                  var inst_16804 = state_16836[9];
                  var inst_16804__$1 = state_16836[2];
                  var inst_16805 = inst_16804__$1 == null;
                  var inst_16806 = cljs.core.not.call(null, inst_16805);
                  var state_16836__$1 = function() {
                    var statearr_16841 = state_16836;
                    statearr_16841[9] = inst_16804__$1;
                    return statearr_16841;
                  }();
                  if (inst_16806) {
                    var statearr_16842_16873 = state_16836__$1;
                    statearr_16842_16873[1] = 5;
                  } else {
                    var statearr_16843_16874 = state_16836__$1;
                    statearr_16843_16874[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16837 === 15) {
                    var inst_16826 = state_16836[2];
                    var state_16836__$1 = state_16836;
                    var statearr_16844_16875 = state_16836__$1;
                    statearr_16844_16875[2] = inst_16826;
                    statearr_16844_16875[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16837 === 13) {
                      var state_16836__$1 = state_16836;
                      var statearr_16845_16876 = state_16836__$1;
                      statearr_16845_16876[2] = null;
                      statearr_16845_16876[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16837 === 6) {
                        var inst_16801 = state_16836[8];
                        var inst_16822 = inst_16801 > 0;
                        var state_16836__$1 = state_16836;
                        if (cljs.core.truth_(inst_16822)) {
                          var statearr_16846_16877 = state_16836__$1;
                          statearr_16846_16877[1] = 12;
                        } else {
                          var statearr_16847_16878 = state_16836__$1;
                          statearr_16847_16878[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16837 === 3) {
                          var inst_16834 = state_16836[2];
                          var state_16836__$1 = state_16836;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16836__$1, inst_16834);
                        } else {
                          if (state_val_16837 === 12) {
                            var inst_16800 = state_16836[7];
                            var inst_16824 = cljs.core.vec.call(null, inst_16800);
                            var state_16836__$1 = state_16836;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16836__$1, 15, out, inst_16824);
                          } else {
                            if (state_val_16837 === 2) {
                              var state_16836__$1 = state_16836;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16836__$1, 4, ch);
                            } else {
                              if (state_val_16837 === 11) {
                                var inst_16816 = state_16836[2];
                                var inst_16817 = new Array(n);
                                var inst_16800 = inst_16817;
                                var inst_16801 = 0;
                                var state_16836__$1 = function() {
                                  var statearr_16848 = state_16836;
                                  statearr_16848[7] = inst_16800;
                                  statearr_16848[10] = inst_16816;
                                  statearr_16848[8] = inst_16801;
                                  return statearr_16848;
                                }();
                                var statearr_16849_16879 = state_16836__$1;
                                statearr_16849_16879[2] = null;
                                statearr_16849_16879[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16837 === 9) {
                                  var inst_16800 = state_16836[7];
                                  var inst_16814 = cljs.core.vec.call(null, inst_16800);
                                  var state_16836__$1 = state_16836;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16836__$1, 11, out, inst_16814);
                                } else {
                                  if (state_val_16837 === 5) {
                                    var inst_16809 = state_16836[11];
                                    var inst_16800 = state_16836[7];
                                    var inst_16804 = state_16836[9];
                                    var inst_16801 = state_16836[8];
                                    var inst_16808 = inst_16800[inst_16801] = inst_16804;
                                    var inst_16809__$1 = inst_16801 + 1;
                                    var inst_16810 = inst_16809__$1 < n;
                                    var state_16836__$1 = function() {
                                      var statearr_16850 = state_16836;
                                      statearr_16850[11] = inst_16809__$1;
                                      statearr_16850[12] = inst_16808;
                                      return statearr_16850;
                                    }();
                                    if (cljs.core.truth_(inst_16810)) {
                                      var statearr_16851_16880 = state_16836__$1;
                                      statearr_16851_16880[1] = 8;
                                    } else {
                                      var statearr_16852_16881 = state_16836__$1;
                                      statearr_16852_16881[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16837 === 14) {
                                      var inst_16829 = state_16836[2];
                                      var inst_16830 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_16836__$1 = function() {
                                        var statearr_16854 = state_16836;
                                        statearr_16854[13] = inst_16829;
                                        return statearr_16854;
                                      }();
                                      var statearr_16855_16882 = state_16836__$1;
                                      statearr_16855_16882[2] = inst_16830;
                                      statearr_16855_16882[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16837 === 10) {
                                        var inst_16820 = state_16836[2];
                                        var state_16836__$1 = state_16836;
                                        var statearr_16856_16883 = state_16836__$1;
                                        statearr_16856_16883[2] = inst_16820;
                                        statearr_16856_16883[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16837 === 8) {
                                          var inst_16809 = state_16836[11];
                                          var inst_16800 = state_16836[7];
                                          var tmp16853 = inst_16800;
                                          var inst_16800__$1 = tmp16853;
                                          var inst_16801 = inst_16809;
                                          var state_16836__$1 = function() {
                                            var statearr_16857 = state_16836;
                                            statearr_16857[7] = inst_16800__$1;
                                            statearr_16857[8] = inst_16801;
                                            return statearr_16857;
                                          }();
                                          var statearr_16858_16884 = state_16836__$1;
                                          statearr_16858_16884[2] = null;
                                          statearr_16858_16884[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16870, out);
        return function(switch__14098__auto__, c__14210__auto___16870, out) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16862 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16862[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16862[1] = 1;
              return statearr_16862;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16836) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16836);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16863) {
                    if (e16863 instanceof Object) {
                      var ex__14102__auto__ = e16863;
                      var statearr_16864_16885 = state_16836;
                      statearr_16864_16885[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16836);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16863;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16886 = state_16836;
                  state_16836 = G__16886;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16836) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16836);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16870, out);
      }();
      var state__14212__auto__ = function() {
        var statearr_16865 = f__14211__auto__.call(null);
        statearr_16865[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16870;
        return statearr_16865;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16870, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var args16887 = [];
  var len__7279__auto___16961 = arguments.length;
  var i__7280__auto___16962 = 0;
  while (true) {
    if (i__7280__auto___16962 < len__7279__auto___16961) {
      args16887.push(arguments[i__7280__auto___16962]);
      var G__16963 = i__7280__auto___16962 + 1;
      i__7280__auto___16962 = G__16963;
      continue;
    } else {
    }
    break;
  }
  var G__16889 = args16887.length;
  switch(G__16889) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args16887.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__14210__auto___16965 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__14210__auto___16965, out) {
    return function() {
      var f__14211__auto__ = function() {
        var switch__14098__auto__ = function(c__14210__auto___16965, out) {
          return function(state_16931) {
            var state_val_16932 = state_16931[1];
            if (state_val_16932 === 7) {
              var inst_16927 = state_16931[2];
              var state_16931__$1 = state_16931;
              var statearr_16933_16966 = state_16931__$1;
              statearr_16933_16966[2] = inst_16927;
              statearr_16933_16966[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16932 === 1) {
                var inst_16890 = [];
                var inst_16891 = inst_16890;
                var inst_16892 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_16931__$1 = function() {
                  var statearr_16934 = state_16931;
                  statearr_16934[7] = inst_16892;
                  statearr_16934[8] = inst_16891;
                  return statearr_16934;
                }();
                var statearr_16935_16967 = state_16931__$1;
                statearr_16935_16967[2] = null;
                statearr_16935_16967[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16932 === 4) {
                  var inst_16895 = state_16931[9];
                  var inst_16895__$1 = state_16931[2];
                  var inst_16896 = inst_16895__$1 == null;
                  var inst_16897 = cljs.core.not.call(null, inst_16896);
                  var state_16931__$1 = function() {
                    var statearr_16936 = state_16931;
                    statearr_16936[9] = inst_16895__$1;
                    return statearr_16936;
                  }();
                  if (inst_16897) {
                    var statearr_16937_16968 = state_16931__$1;
                    statearr_16937_16968[1] = 5;
                  } else {
                    var statearr_16938_16969 = state_16931__$1;
                    statearr_16938_16969[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16932 === 15) {
                    var inst_16921 = state_16931[2];
                    var state_16931__$1 = state_16931;
                    var statearr_16939_16970 = state_16931__$1;
                    statearr_16939_16970[2] = inst_16921;
                    statearr_16939_16970[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16932 === 13) {
                      var state_16931__$1 = state_16931;
                      var statearr_16940_16971 = state_16931__$1;
                      statearr_16940_16971[2] = null;
                      statearr_16940_16971[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16932 === 6) {
                        var inst_16891 = state_16931[8];
                        var inst_16916 = inst_16891.length;
                        var inst_16917 = inst_16916 > 0;
                        var state_16931__$1 = state_16931;
                        if (cljs.core.truth_(inst_16917)) {
                          var statearr_16941_16972 = state_16931__$1;
                          statearr_16941_16972[1] = 12;
                        } else {
                          var statearr_16942_16973 = state_16931__$1;
                          statearr_16942_16973[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16932 === 3) {
                          var inst_16929 = state_16931[2];
                          var state_16931__$1 = state_16931;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16931__$1, inst_16929);
                        } else {
                          if (state_val_16932 === 12) {
                            var inst_16891 = state_16931[8];
                            var inst_16919 = cljs.core.vec.call(null, inst_16891);
                            var state_16931__$1 = state_16931;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16931__$1, 15, out, inst_16919);
                          } else {
                            if (state_val_16932 === 2) {
                              var state_16931__$1 = state_16931;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16931__$1, 4, ch);
                            } else {
                              if (state_val_16932 === 11) {
                                var inst_16895 = state_16931[9];
                                var inst_16899 = state_16931[10];
                                var inst_16909 = state_16931[2];
                                var inst_16910 = [];
                                var inst_16911 = inst_16910.push(inst_16895);
                                var inst_16891 = inst_16910;
                                var inst_16892 = inst_16899;
                                var state_16931__$1 = function() {
                                  var statearr_16943 = state_16931;
                                  statearr_16943[7] = inst_16892;
                                  statearr_16943[11] = inst_16911;
                                  statearr_16943[8] = inst_16891;
                                  statearr_16943[12] = inst_16909;
                                  return statearr_16943;
                                }();
                                var statearr_16944_16974 = state_16931__$1;
                                statearr_16944_16974[2] = null;
                                statearr_16944_16974[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16932 === 9) {
                                  var inst_16891 = state_16931[8];
                                  var inst_16907 = cljs.core.vec.call(null, inst_16891);
                                  var state_16931__$1 = state_16931;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16931__$1, 11, out, inst_16907);
                                } else {
                                  if (state_val_16932 === 5) {
                                    var inst_16892 = state_16931[7];
                                    var inst_16895 = state_16931[9];
                                    var inst_16899 = state_16931[10];
                                    var inst_16899__$1 = f.call(null, inst_16895);
                                    var inst_16900 = cljs.core._EQ_.call(null, inst_16899__$1, inst_16892);
                                    var inst_16901 = cljs.core.keyword_identical_QMARK_.call(null, inst_16892, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_16902 = inst_16900 || inst_16901;
                                    var state_16931__$1 = function() {
                                      var statearr_16945 = state_16931;
                                      statearr_16945[10] = inst_16899__$1;
                                      return statearr_16945;
                                    }();
                                    if (cljs.core.truth_(inst_16902)) {
                                      var statearr_16946_16975 = state_16931__$1;
                                      statearr_16946_16975[1] = 8;
                                    } else {
                                      var statearr_16947_16976 = state_16931__$1;
                                      statearr_16947_16976[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16932 === 14) {
                                      var inst_16924 = state_16931[2];
                                      var inst_16925 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_16931__$1 = function() {
                                        var statearr_16949 = state_16931;
                                        statearr_16949[13] = inst_16924;
                                        return statearr_16949;
                                      }();
                                      var statearr_16950_16977 = state_16931__$1;
                                      statearr_16950_16977[2] = inst_16925;
                                      statearr_16950_16977[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16932 === 10) {
                                        var inst_16914 = state_16931[2];
                                        var state_16931__$1 = state_16931;
                                        var statearr_16951_16978 = state_16931__$1;
                                        statearr_16951_16978[2] = inst_16914;
                                        statearr_16951_16978[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16932 === 8) {
                                          var inst_16891 = state_16931[8];
                                          var inst_16895 = state_16931[9];
                                          var inst_16899 = state_16931[10];
                                          var inst_16904 = inst_16891.push(inst_16895);
                                          var tmp16948 = inst_16891;
                                          var inst_16891__$1 = tmp16948;
                                          var inst_16892 = inst_16899;
                                          var state_16931__$1 = function() {
                                            var statearr_16952 = state_16931;
                                            statearr_16952[7] = inst_16892;
                                            statearr_16952[8] = inst_16891__$1;
                                            statearr_16952[14] = inst_16904;
                                            return statearr_16952;
                                          }();
                                          var statearr_16953_16979 = state_16931__$1;
                                          statearr_16953_16979[2] = null;
                                          statearr_16953_16979[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__14210__auto___16965, out);
        return function(switch__14098__auto__, c__14210__auto___16965, out) {
          return function() {
            var cljs$core$async$state_machine__14099__auto__ = null;
            var cljs$core$async$state_machine__14099__auto____0 = function() {
              var statearr_16957 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16957[0] = cljs$core$async$state_machine__14099__auto__;
              statearr_16957[1] = 1;
              return statearr_16957;
            };
            var cljs$core$async$state_machine__14099__auto____1 = function(state_16931) {
              while (true) {
                var ret_value__14100__auto__ = function() {
                  try {
                    while (true) {
                      var result__14101__auto__ = switch__14098__auto__.call(null, state_16931);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__14101__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__14101__auto__;
                      }
                      break;
                    }
                  } catch (e16958) {
                    if (e16958 instanceof Object) {
                      var ex__14102__auto__ = e16958;
                      var statearr_16959_16980 = state_16931;
                      statearr_16959_16980[5] = ex__14102__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16931);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16958;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__14100__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16981 = state_16931;
                  state_16931 = G__16981;
                  continue;
                } else {
                  return ret_value__14100__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__14099__auto__ = function(state_16931) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__14099__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__14099__auto____1.call(this, state_16931);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__14099__auto____0;
            cljs$core$async$state_machine__14099__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__14099__auto____1;
            return cljs$core$async$state_machine__14099__auto__;
          }();
        }(switch__14098__auto__, c__14210__auto___16965, out);
      }();
      var state__14212__auto__ = function() {
        var statearr_16960 = f__14211__auto__.call(null);
        statearr_16960[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__14210__auto___16965;
        return statearr_16960;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__14212__auto__);
    };
  }(c__14210__auto___16965, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("kierros.quiescent_DOM_driver");
goog.require("cljs.core");
goog.require("cljs.core.async");
kierros.quiescent_DOM_driver.create_quiescent_DOM_driver = function kierros$quiescent_DOM_driver$create_quiescent_DOM_driver(container) {
  return function() {
    var G__23073__delegate = function(vtree$, args) {
      return null;
    };
    var G__23073 = function(vtree$, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__23074__i = 0, G__23074__a = new Array(arguments.length - 1);
        while (G__23074__i < G__23074__a.length) {
          G__23074__a[G__23074__i] = arguments[G__23074__i + 1];
          ++G__23074__i;
        }
        args = new cljs.core.IndexedSeq(G__23074__a, 0);
      }
      return G__23073__delegate.call(this, vtree$, args);
    };
    G__23073.cljs$lang$maxFixedArity = 1;
    G__23073.cljs$lang$applyTo = function(arglist__23075) {
      var vtree$ = cljs.core.first(arglist__23075);
      var args = cljs.core.rest(arglist__23075);
      return G__23073__delegate(vtree$, args);
    };
    G__23073.cljs$core$IFn$_invoke$arity$variadic = G__23073__delegate;
    return G__23073;
  }();
};
goog.provide("kierros.core");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("plumbing.core");
kierros.core.make_sink_proxies = function kierros$core$make_sink_proxies(driver_map) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(name) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, cljs.core.async.chan.call(null)], null);
  }, cljs.core.keys.call(null, driver_map)));
};
kierros.core.call_drivers = function kierros$core$call_drivers(driver_map, sink_proxy_map) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__23789) {
    var vec__23790 = p__23789;
    var name = cljs.core.nth.call(null, vec__23790, 0, null);
    var driver = cljs.core.nth.call(null, vec__23790, 1, null);
    var sink_proxy = sink_proxy_map.call(null, name);
    var source = driver.call(null, sink_proxy, name);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, source], null);
  }, driver_map));
};
kierros.core.replicate_many = function kierros$core$replicate_many(sink_map, sink_proxy_map) {
  return null;
};
kierros.core.run = function kierros$core$run(main, driver_map) {
  var sink_proxy_map = kierros.core.make_sink_proxies.call(null, driver_map);
  var source_map = kierros.core.call_drivers.call(null, driver_map, sink_proxy_map);
  var sink_map = main.call(null, source_map);
  var _ = kierros.core.replicate_many.call(null, sink_map, sink_proxy_map);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "sources", "sources", -321166424), source_map, new cljs.core.Keyword(null, "sinks", "sinks", 1410826277), sink_map], null);
};
goog.provide("kierros.core_test");
goog.require("cljs.core");
goog.require("kierros.core");
goog.require("cljs.test");
cljs.core.enable_console_print_BANG_.call(null);
kierros.core_test.make_sink_proxies_test = function kierros$core_test$make_sink_proxies_test() {
  return cljs.test.test_var.call(null, kierros$core_test$make_sink_proxies_test.cljs$lang$var);
};
kierros.core_test.make_sink_proxies_test.cljs$lang$test = function() {
  try {
    var values__24602__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 2);
    var result__24603__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__24602__auto__);
    if (cljs.core.truth_(result__24603__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 3), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__24602__auto__), new cljs.core.Keyword(null, "message", 
      "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 3), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__24602__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__24603__auto__;
  } catch (e24806) {
    var t__24640__auto__ = e24806;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 3), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__24640__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
kierros.core_test.make_sink_proxies_test.cljs$lang$var = new cljs.core.Var(function() {
  return kierros.core_test.make_sink_proxies_test;
}, new cljs.core.Symbol("kierros.core-test", "make-sink-proxies-test", "kierros.core-test/make-sink-proxies-test", -1963049751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.core-test", "kierros.core-test", 5175467, null), new cljs.core.Symbol(null, "make-sink-proxies-test", "make-sink-proxies-test", -769666780, null), "test/kierros/core_test.cljs", 32, 1, 7, 7, cljs.core.List.EMPTY, 
null, cljs.core.truth_(kierros.core_test.make_sink_proxies_test) ? kierros.core_test.make_sink_proxies_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env24807 = cljs.test.empty_env.call(null);
  var summary24808 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env24807, summary24808) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env24807);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "kierros.core-test", "kierros.core-test", 5175467, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__24706__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__24706__auto__, env24807, summary24808) {
          return function() {
            if (env__24706__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__24706__auto__, env24807, summary24808)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return kierros.core_test.make_sink_proxies_test;
        }, new cljs.core.Symbol("kierros.core-test", "make-sink-proxies-test", "kierros.core-test/make-sink-proxies-test", -1963049751, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.core-test", "kierros.core-test", 5175467, null), new cljs.core.Symbol(null, "make-sink-proxies-test", "make-sink-proxies-test", -769666780, null), "test/kierros/core_test.cljs", 32, 1, 7, 
        7, cljs.core.List.EMPTY, null, cljs.core.truth_(kierros.core_test.make_sink_proxies_test) ? kierros.core_test.make_sink_proxies_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__24706__auto__, env24807, summary24808) {
          return function() {
            if (env__24706__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__24706__auto__, env24807, summary24808)], null));
      }());
    };
  }(env24807, summary24808), function(env24807, summary24808) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "kierros.core-test", "kierros.core-test", 5175467, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env24807, summary24808)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env24807, summary24808) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary24808, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary24808), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env24807, summary24808)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env24807, summary24808) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env24807);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary24808));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary24808), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env24807, summary24808)], null));
}());
goog.provide("kierros.util");
goog.require("cljs.core");
goog.require("cljs.core.async");
kierros.util.scan = function kierros$util$scan(f) {
  return function(xf) {
    var state = cljs.core.volatile_BANG_.call(null, new cljs.core.Keyword("kierros.util", "none", "kierros.util/none", -2027714407));
    return function(state) {
      return function() {
        var G__23793 = null;
        var G__23793__0 = function() {
          return xf.call(null);
        };
        var G__23793__1 = function(result) {
          return xf.call(null, result);
        };
        var G__23793__2 = function(result, input) {
          var prev = cljs.core.deref.call(null, state);
          var next = cljs.core._EQ_.call(null, prev, new cljs.core.Keyword("kierros.util", "none", "kierros.util/none", -2027714407)) ? input : f.call(null, prev, input);
          cljs.core.vreset_BANG_.call(null, state, next);
          return xf.call(null, result, next);
        };
        G__23793 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23793__0.call(this);
            case 1:
              return G__23793__1.call(this, result);
            case 2:
              return G__23793__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23793.cljs$core$IFn$_invoke$arity$0 = G__23793__0;
        G__23793.cljs$core$IFn$_invoke$arity$1 = G__23793__1;
        G__23793.cljs$core$IFn$_invoke$arity$2 = G__23793__2;
        return G__23793;
      }();
    }(state);
  };
};
goog.provide("kierros.util_test");
goog.require("cljs.core");
goog.require("kierros.util");
goog.require("cljs.core.async");
goog.require("cljs.test");
kierros.util_test.amend_state = function kierros$util_test$amend_state(state, f) {
  return f.call(null, state);
};
kierros.util_test.sequence_scan_empty = function kierros$util_test$sequence_scan_empty() {
  return cljs.test.test_var.call(null, kierros$util_test$sequence_scan_empty.cljs$lang$var);
};
kierros.util_test.sequence_scan_empty.cljs$lang$test = function() {
  var s = cljs.core.sequence.call(null, kierros.util.scan.call(null, kierros.util_test.amend_state), cljs.core.PersistentVector.EMPTY);
  try {
    var values__9163__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.PersistentVector.EMPTY), s);
    var result__9164__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9163__auto__);
    if (cljs.core.truth_(result__9164__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.PersistentVector.EMPTY), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__9163__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.PersistentVector.EMPTY), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9163__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9164__auto__;
  } catch (e12934) {
    var t__9201__auto__ = e12934;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.PersistentVector.EMPTY), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9201__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
kierros.util_test.sequence_scan_empty.cljs$lang$var = new cljs.core.Var(function() {
  return kierros.util_test.sequence_scan_empty;
}, new cljs.core.Symbol("kierros.util-test", "sequence-scan-empty", "kierros.util-test/sequence-scan-empty", -234516681, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "sequence-scan-empty", "sequence-scan-empty", 154513521, null), "test/kierros/util_test.cljs", 29, 1, 10, 10, cljs.core.List.EMPTY, 
null, cljs.core.truth_(kierros.util_test.sequence_scan_empty) ? kierros.util_test.sequence_scan_empty.cljs$lang$test : null]));
kierros.util_test.sequence_scan_singleton = function kierros$util_test$sequence_scan_singleton() {
  return cljs.test.test_var.call(null, kierros$util_test$sequence_scan_singleton.cljs$lang$var);
};
kierros.util_test.sequence_scan_singleton.cljs$lang$test = function() {
  var s = cljs.core.sequence.call(null, kierros.util.scan.call(null, kierros.util_test.amend_state), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null)], null));
  try {
    var values__9163__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null)], null)), s);
    var result__9164__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9163__auto__);
    if (cljs.core.truth_(result__9164__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null)], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9163__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null)], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9163__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9164__auto__;
  } catch (e12935) {
    var t__9201__auto__ = e12935;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null)], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9201__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
kierros.util_test.sequence_scan_singleton.cljs$lang$var = new cljs.core.Var(function() {
  return kierros.util_test.sequence_scan_singleton;
}, new cljs.core.Symbol("kierros.util-test", "sequence-scan-singleton", "kierros.util-test/sequence-scan-singleton", 746187083, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "sequence-scan-singleton", "sequence-scan-singleton", 189384717, null), "test/kierros/util_test.cljs", 33, 1, 15, 15, cljs.core.List.EMPTY, 
null, cljs.core.truth_(kierros.util_test.sequence_scan_singleton) ? kierros.util_test.sequence_scan_singleton.cljs$lang$test : null]));
kierros.util_test.sequence_scan_one_amendment = function kierros$util_test$sequence_scan_one_amendment() {
  return cljs.test.test_var.call(null, kierros$util_test$sequence_scan_one_amendment.cljs$lang$var);
};
kierros.util_test.sequence_scan_one_amendment.cljs$lang$test = function() {
  var s = cljs.core.sequence.call(null, kierros.util.scan.call(null, kierros.util_test.amend_state), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), function(p1__12936_SHARP_) {
    return cljs.core.assoc.call(null, p1__12936_SHARP_, new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2);
  }], null));
  try {
    var values__9163__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1, new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2], null)], null)), s);
    var result__9164__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9163__auto__);
    if (cljs.core.truth_(result__9164__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1, new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2], null)], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9163__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1, new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2], null)], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9163__auto__)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9164__auto__;
  } catch (e12937) {
    var t__9201__auto__ = e12937;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1, new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2], null)], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9201__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
kierros.util_test.sequence_scan_one_amendment.cljs$lang$var = new cljs.core.Var(function() {
  return kierros.util_test.sequence_scan_one_amendment;
}, new cljs.core.Symbol("kierros.util-test", "sequence-scan-one-amendment", "kierros.util-test/sequence-scan-one-amendment", 588485599, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "sequence-scan-one-amendment", "sequence-scan-one-amendment", 1550020625, null), "test/kierros/util_test.cljs", 37, 
1, 20, 20, cljs.core.List.EMPTY, null, cljs.core.truth_(kierros.util_test.sequence_scan_one_amendment) ? kierros.util_test.sequence_scan_one_amendment.cljs$lang$test : null]));
kierros.util_test.init_PLUS_amendments = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), function(p1__12938_SHARP_) {
  return cljs.core.assoc.call(null, p1__12938_SHARP_, new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2);
}, function(p1__12939_SHARP_) {
  return cljs.core.assoc.call(null, p1__12939_SHARP_, new cljs.core.Keyword(null, "key", "key", -1516042587), "one");
}], null);
kierros.util_test.expected_states = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), 1, new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), "one", 
new cljs.core.Keyword(null, "foo", "foo", 1268894036), 2], null)], null);
kierros.util_test.scan_amendments = function kierros$util_test$scan_amendments() {
  return cljs.test.test_var.call(null, kierros$util_test$scan_amendments.cljs$lang$var);
};
kierros.util_test.scan_amendments.cljs$lang$test = function() {
  var s = cljs.core.sequence.call(null, kierros.util.scan.call(null, kierros.util_test.amend_state), kierros.util_test.init_PLUS_amendments);
  try {
    var values__9163__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, kierros.util_test.expected_states), s);
    var result__9164__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9163__auto__);
    if (cljs.core.truth_(result__9164__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9163__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9163__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9164__auto__;
  } catch (e12940) {
    var t__9201__auto__ = e12940;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9201__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
kierros.util_test.scan_amendments.cljs$lang$var = new cljs.core.Var(function() {
  return kierros.util_test.scan_amendments;
}, new cljs.core.Symbol("kierros.util-test", "scan-amendments", "kierros.util-test/scan-amendments", 612872768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "scan-amendments", "scan-amendments", 257397382, null), "test/kierros/util_test.cljs", 25, 1, 29, 29, cljs.core.List.EMPTY, null, cljs.core.truth_(kierros.util_test.scan_amendments) ? 
kierros.util_test.scan_amendments.cljs$lang$test : null]));
kierros.util_test.scan_amendments_async = function kierros$util_test$scan_amendments_async() {
  return cljs.test.test_var.call(null, kierros$util_test$scan_amendments_async.cljs$lang$var);
};
kierros.util_test.scan_amendments_async.cljs$lang$test = function() {
  if (typeof kierros.util_test.t_kierros$util_test12941 !== "undefined") {
  } else {
    kierros.util_test.t_kierros$util_test12941 = function(meta12942) {
      this.meta12942 = meta12942;
      this.cljs$lang$protocol_mask$partition0$ = 393217;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    kierros.util_test.t_kierros$util_test12941.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12943, meta12942__$1) {
      var self__ = this;
      var _12943__$1 = this;
      return new kierros.util_test.t_kierros$util_test12941(meta12942__$1);
    };
    kierros.util_test.t_kierros$util_test12941.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12943) {
      var self__ = this;
      var _12943__$1 = this;
      return self__.meta12942;
    };
    kierros.util_test.t_kierros$util_test12941.prototype.cljs$test$IAsyncTest$ = true;
    kierros.util_test.t_kierros$util_test12941.prototype.call = function(self__, done) {
      var self__ = this;
      var self____$1 = this;
      var ___9231__auto__ = self____$1;
      var c = cljs.core.async.chan.call(null, 1, kierros.util.scan.call(null, kierros.util_test.amend_state));
      var _ = cljs.core.async.onto_chan.call(null, c, kierros.util_test.init_PLUS_amendments);
      var r = cljs.core.async.into.call(null, cljs.core.PersistentVector.EMPTY, c);
      var c__10663__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__10663__auto__, c, _, r, ___9231__auto__, self____$1) {
        return function() {
          var f__10664__auto__ = function() {
            var switch__10598__auto__ = function(c__10663__auto__, c, _, r, ___9231__auto__, self____$1) {
              return function(state_12985) {
                var state_val_12986 = state_12985[1];
                if (state_val_12986 === 1) {
                  var state_12985__$1 = state_12985;
                  var statearr_12987_13065 = state_12985__$1;
                  statearr_12987_13065[2] = null;
                  statearr_12987_13065[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12986 === 2) {
                    var inst_12982 = state_12985[2];
                    var inst_12983 = done.call(null);
                    var state_12985__$1 = function() {
                      var statearr_12988 = state_12985;
                      statearr_12988[7] = inst_12982;
                      return statearr_12988;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12985__$1, inst_12983);
                  } else {
                    if (state_val_12986 === 3) {
                      var inst_12945 = state_12985[2];
                      var inst_12946 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                      var inst_12947 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null)), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null));
                      var inst_12948 = [new cljs.core.Keyword(null, "error", "error", -978969032), inst_12947, inst_12945, null];
                      var inst_12949 = cljs.core.PersistentHashMap.fromArrays(inst_12946, inst_12948);
                      var inst_12950 = cljs.test.do_report.call(null, inst_12949);
                      var state_12985__$1 = state_12985;
                      var statearr_12989_13066 = state_12985__$1;
                      statearr_12989_13066[2] = inst_12950;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12985__$1);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12986 === 4) {
                        var ___$1 = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12985, 3, new cljs.core.Keyword(null, "default", "default", -1987822328), null, 2);
                        var inst_12954 = cljs.core.List.EMPTY;
                        var inst_12955 = cljs.core._conj.call(null, inst_12954, kierros.util_test.expected_states);
                        var state_12985__$1 = function() {
                          var statearr_12990 = state_12985;
                          statearr_12990[8] = inst_12955;
                          return statearr_12990;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12985__$1, 5, r);
                      } else {
                        if (state_val_12986 === 5) {
                          var inst_12959 = state_12985[9];
                          var inst_12955 = state_12985[8];
                          var inst_12958 = state_12985[10];
                          var inst_12957 = state_12985[2];
                          var inst_12958__$1 = cljs.core._conj.call(null, inst_12955, inst_12957);
                          var inst_12959__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_12958__$1);
                          var state_12985__$1 = function() {
                            var statearr_12991 = state_12985;
                            statearr_12991[9] = inst_12959__$1;
                            statearr_12991[10] = inst_12958__$1;
                            return statearr_12991;
                          }();
                          if (cljs.core.truth_(inst_12959__$1)) {
                            var statearr_12992_13067 = state_12985__$1;
                            statearr_12992_13067[1] = 6;
                          } else {
                            var statearr_12993_13068 = state_12985__$1;
                            statearr_12993_13068[1] = 7;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12986 === 6) {
                            var inst_12958 = state_12985[10];
                            var inst_12961 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                            var inst_12962 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null)), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null));
                            var inst_12963 = cljs.core.cons.call(null, cljs.core._EQ_, inst_12958);
                            var inst_12964 = [new cljs.core.Keyword(null, "pass", "pass", 1574159993), inst_12962, inst_12963, null];
                            var inst_12965 = cljs.core.PersistentHashMap.fromArrays(inst_12961, inst_12964);
                            var inst_12966 = cljs.test.do_report.call(null, inst_12965);
                            var state_12985__$1 = state_12985;
                            var statearr_12994_13069 = state_12985__$1;
                            statearr_12994_13069[2] = inst_12966;
                            statearr_12994_13069[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12986 === 7) {
                              var inst_12958 = state_12985[10];
                              var inst_12968 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                              var inst_12969 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null)), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null));
                              var inst_12970 = cljs.core.List.EMPTY;
                              var inst_12971 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null);
                              var inst_12972 = cljs.core.cons.call(null, inst_12971, inst_12958);
                              var inst_12973 = cljs.core._conj.call(null, inst_12970, inst_12972);
                              var inst_12974 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                              var inst_12975 = cljs.core._conj.call(null, inst_12973, inst_12974);
                              var inst_12976 = [new cljs.core.Keyword(null, "fail", "fail", 1706214930), inst_12969, inst_12975, null];
                              var inst_12977 = cljs.core.PersistentHashMap.fromArrays(inst_12968, inst_12976);
                              var inst_12978 = cljs.test.do_report.call(null, inst_12977);
                              var state_12985__$1 = state_12985;
                              var statearr_12995_13070 = state_12985__$1;
                              statearr_12995_13070[2] = inst_12978;
                              statearr_12995_13070[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12986 === 8) {
                                var inst_12959 = state_12985[9];
                                var inst_12980 = state_12985[2];
                                var state_12985__$1 = function() {
                                  var statearr_12996 = state_12985;
                                  statearr_12996[11] = inst_12980;
                                  return statearr_12996;
                                }();
                                var statearr_12997_13071 = state_12985__$1;
                                statearr_12997_13071[2] = inst_12959;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12985__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__10663__auto__, c, _, r, ___9231__auto__, self____$1);
            return function(switch__10598__auto__, c__10663__auto__, c, _, r, ___9231__auto__, self____$1) {
              return function() {
                var kierros$util_test$state_machine__10599__auto__ = null;
                var kierros$util_test$state_machine__10599__auto____0 = function() {
                  var statearr_13001 = [null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_13001[0] = kierros$util_test$state_machine__10599__auto__;
                  statearr_13001[1] = 1;
                  return statearr_13001;
                };
                var kierros$util_test$state_machine__10599__auto____1 = function(state_12985) {
                  while (true) {
                    var ret_value__10600__auto__ = function() {
                      try {
                        while (true) {
                          var result__10601__auto__ = switch__10598__auto__.call(null, state_12985);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__10601__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__10601__auto__;
                          }
                          break;
                        }
                      } catch (e13002) {
                        if (e13002 instanceof Object) {
                          var ex__10602__auto__ = e13002;
                          var statearr_13003_13072 = state_12985;
                          statearr_13003_13072[5] = ex__10602__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12985);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e13002;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10600__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__13073 = state_12985;
                      state_12985 = G__13073;
                      continue;
                    } else {
                      return ret_value__10600__auto__;
                    }
                    break;
                  }
                };
                kierros$util_test$state_machine__10599__auto__ = function(state_12985) {
                  switch(arguments.length) {
                    case 0:
                      return kierros$util_test$state_machine__10599__auto____0.call(this);
                    case 1:
                      return kierros$util_test$state_machine__10599__auto____1.call(this, state_12985);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                kierros$util_test$state_machine__10599__auto__.cljs$core$IFn$_invoke$arity$0 = kierros$util_test$state_machine__10599__auto____0;
                kierros$util_test$state_machine__10599__auto__.cljs$core$IFn$_invoke$arity$1 = kierros$util_test$state_machine__10599__auto____1;
                return kierros$util_test$state_machine__10599__auto__;
              }();
            }(switch__10598__auto__, c__10663__auto__, c, _, r, ___9231__auto__, self____$1);
          }();
          var state__10665__auto__ = function() {
            var statearr_13004 = f__10664__auto__.call(null);
            statearr_13004[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10663__auto__;
            return statearr_13004;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10665__auto__);
        };
      }(c__10663__auto__, c, _, r, ___9231__auto__, self____$1));
      return c__10663__auto__;
    };
    kierros.util_test.t_kierros$util_test12941.prototype.apply = function(self__, args12944) {
      var self__ = this;
      var self____$1 = this;
      return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args12944)));
    };
    kierros.util_test.t_kierros$util_test12941.prototype.cljs$core$IFn$_invoke$arity$1 = function(done) {
      var self__ = this;
      var ___9231__auto__ = this;
      var c = cljs.core.async.chan.call(null, 1, kierros.util.scan.call(null, kierros.util_test.amend_state));
      var _ = cljs.core.async.onto_chan.call(null, c, kierros.util_test.init_PLUS_amendments);
      var r = cljs.core.async.into.call(null, cljs.core.PersistentVector.EMPTY, c);
      var c__10663__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__10663__auto__, c, _, r, ___9231__auto__) {
        return function() {
          var f__10664__auto__ = function() {
            var switch__10598__auto__ = function(c__10663__auto__, c, _, r, ___9231__auto__) {
              return function(state_13045) {
                var state_val_13046 = state_13045[1];
                if (state_val_13046 === 1) {
                  var state_13045__$1 = state_13045;
                  var statearr_13047_13074 = state_13045__$1;
                  statearr_13047_13074[2] = null;
                  statearr_13047_13074[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13046 === 2) {
                    var inst_13042 = state_13045[2];
                    var inst_13043 = done.call(null);
                    var state_13045__$1 = function() {
                      var statearr_13048 = state_13045;
                      statearr_13048[7] = inst_13042;
                      return statearr_13048;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13045__$1, inst_13043);
                  } else {
                    if (state_val_13046 === 3) {
                      var inst_13005 = state_13045[2];
                      var inst_13006 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                      var inst_13007 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null)), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null));
                      var inst_13008 = [new cljs.core.Keyword(null, "error", "error", -978969032), inst_13007, inst_13005, null];
                      var inst_13009 = cljs.core.PersistentHashMap.fromArrays(inst_13006, inst_13008);
                      var inst_13010 = cljs.test.do_report.call(null, inst_13009);
                      var state_13045__$1 = state_13045;
                      var statearr_13049_13075 = state_13045__$1;
                      statearr_13049_13075[2] = inst_13010;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13045__$1);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13046 === 4) {
                        var ___$1 = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_13045, 3, new cljs.core.Keyword(null, "default", "default", -1987822328), null, 2);
                        var inst_13014 = cljs.core.List.EMPTY;
                        var inst_13015 = cljs.core._conj.call(null, inst_13014, kierros.util_test.expected_states);
                        var state_13045__$1 = function() {
                          var statearr_13050 = state_13045;
                          statearr_13050[8] = inst_13015;
                          return statearr_13050;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13045__$1, 5, r);
                      } else {
                        if (state_val_13046 === 5) {
                          var inst_13019 = state_13045[9];
                          var inst_13015 = state_13045[8];
                          var inst_13018 = state_13045[10];
                          var inst_13017 = state_13045[2];
                          var inst_13018__$1 = cljs.core._conj.call(null, inst_13015, inst_13017);
                          var inst_13019__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_13018__$1);
                          var state_13045__$1 = function() {
                            var statearr_13051 = state_13045;
                            statearr_13051[9] = inst_13019__$1;
                            statearr_13051[10] = inst_13018__$1;
                            return statearr_13051;
                          }();
                          if (cljs.core.truth_(inst_13019__$1)) {
                            var statearr_13052_13076 = state_13045__$1;
                            statearr_13052_13076[1] = 6;
                          } else {
                            var statearr_13053_13077 = state_13045__$1;
                            statearr_13053_13077[1] = 7;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13046 === 6) {
                            var inst_13018 = state_13045[10];
                            var inst_13021 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                            var inst_13022 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null)), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null));
                            var inst_13023 = cljs.core.cons.call(null, cljs.core._EQ_, inst_13018);
                            var inst_13024 = [new cljs.core.Keyword(null, "pass", "pass", 1574159993), inst_13022, inst_13023, null];
                            var inst_13025 = cljs.core.PersistentHashMap.fromArrays(inst_13021, inst_13024);
                            var inst_13026 = cljs.test.do_report.call(null, inst_13025);
                            var state_13045__$1 = state_13045;
                            var statearr_13054_13078 = state_13045__$1;
                            statearr_13054_13078[2] = inst_13026;
                            statearr_13054_13078[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13046 === 7) {
                              var inst_13018 = state_13045[10];
                              var inst_13028 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                              var inst_13029 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "r", "r", 1169147337, null)), new cljs.core.Symbol(null, "expected-states", "expected-states", 1332478011, null));
                              var inst_13030 = cljs.core.List.EMPTY;
                              var inst_13031 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null);
                              var inst_13032 = cljs.core.cons.call(null, inst_13031, inst_13018);
                              var inst_13033 = cljs.core._conj.call(null, inst_13030, inst_13032);
                              var inst_13034 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                              var inst_13035 = cljs.core._conj.call(null, inst_13033, inst_13034);
                              var inst_13036 = [new cljs.core.Keyword(null, "fail", "fail", 1706214930), inst_13029, inst_13035, null];
                              var inst_13037 = cljs.core.PersistentHashMap.fromArrays(inst_13028, inst_13036);
                              var inst_13038 = cljs.test.do_report.call(null, inst_13037);
                              var state_13045__$1 = state_13045;
                              var statearr_13055_13079 = state_13045__$1;
                              statearr_13055_13079[2] = inst_13038;
                              statearr_13055_13079[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13046 === 8) {
                                var inst_13019 = state_13045[9];
                                var inst_13040 = state_13045[2];
                                var state_13045__$1 = function() {
                                  var statearr_13056 = state_13045;
                                  statearr_13056[11] = inst_13040;
                                  return statearr_13056;
                                }();
                                var statearr_13057_13080 = state_13045__$1;
                                statearr_13057_13080[2] = inst_13019;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13045__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__10663__auto__, c, _, r, ___9231__auto__);
            return function(switch__10598__auto__, c__10663__auto__, c, _, r, ___9231__auto__) {
              return function() {
                var kierros$util_test$state_machine__10599__auto__ = null;
                var kierros$util_test$state_machine__10599__auto____0 = function() {
                  var statearr_13061 = [null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_13061[0] = kierros$util_test$state_machine__10599__auto__;
                  statearr_13061[1] = 1;
                  return statearr_13061;
                };
                var kierros$util_test$state_machine__10599__auto____1 = function(state_13045) {
                  while (true) {
                    var ret_value__10600__auto__ = function() {
                      try {
                        while (true) {
                          var result__10601__auto__ = switch__10598__auto__.call(null, state_13045);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__10601__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__10601__auto__;
                          }
                          break;
                        }
                      } catch (e13062) {
                        if (e13062 instanceof Object) {
                          var ex__10602__auto__ = e13062;
                          var statearr_13063_13081 = state_13045;
                          statearr_13063_13081[5] = ex__10602__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13045);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e13062;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10600__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__13082 = state_13045;
                      state_13045 = G__13082;
                      continue;
                    } else {
                      return ret_value__10600__auto__;
                    }
                    break;
                  }
                };
                kierros$util_test$state_machine__10599__auto__ = function(state_13045) {
                  switch(arguments.length) {
                    case 0:
                      return kierros$util_test$state_machine__10599__auto____0.call(this);
                    case 1:
                      return kierros$util_test$state_machine__10599__auto____1.call(this, state_13045);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                kierros$util_test$state_machine__10599__auto__.cljs$core$IFn$_invoke$arity$0 = kierros$util_test$state_machine__10599__auto____0;
                kierros$util_test$state_machine__10599__auto__.cljs$core$IFn$_invoke$arity$1 = kierros$util_test$state_machine__10599__auto____1;
                return kierros$util_test$state_machine__10599__auto__;
              }();
            }(switch__10598__auto__, c__10663__auto__, c, _, r, ___9231__auto__);
          }();
          var state__10665__auto__ = function() {
            var statearr_13064 = f__10664__auto__.call(null);
            statearr_13064[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10663__auto__;
            return statearr_13064;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10665__auto__);
        };
      }(c__10663__auto__, c, _, r, ___9231__auto__));
      return c__10663__auto__;
    };
    kierros.util_test.t_kierros$util_test12941.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta12942", "meta12942", -545778386, null)], null);
    };
    kierros.util_test.t_kierros$util_test12941.cljs$lang$type = true;
    kierros.util_test.t_kierros$util_test12941.cljs$lang$ctorStr = "kierros.util-test/t_kierros$util_test12941";
    kierros.util_test.t_kierros$util_test12941.cljs$lang$ctorPrWriter = function(this__6816__auto__, writer__6817__auto__, opt__6818__auto__) {
      return cljs.core._write.call(null, writer__6817__auto__, "kierros.util-test/t_kierros$util_test12941");
    };
    kierros.util_test.__GT_t_kierros$util_test12941 = function kierros$util_test$__GT_t_kierros$util_test12941(meta12942) {
      return new kierros.util_test.t_kierros$util_test12941(meta12942);
    };
  }
  return new kierros.util_test.t_kierros$util_test12941(null);
};
kierros.util_test.scan_amendments_async.cljs$lang$var = new cljs.core.Var(function() {
  return kierros.util_test.scan_amendments_async;
}, new cljs.core.Symbol("kierros.util-test", "scan-amendments-async", "kierros.util-test/scan-amendments-async", -1313423603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "scan-amendments-async", "scan-amendments-async", -353986485, null), "test/kierros/util_test.cljs", 31, 1, 33, 33, cljs.core.List.EMPTY, 
null, cljs.core.truth_(kierros.util_test.scan_amendments_async) ? kierros.util_test.scan_amendments_async.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env13083 = cljs.test.empty_env.call(null);
  var summary13084 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13083, summary13084) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env13083);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9267__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9267__auto__, env13083, summary13084) {
          return function() {
            if (env__9267__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9267__auto__, env13083, summary13084)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return kierros.util_test.sequence_scan_empty;
        }, new cljs.core.Symbol("kierros.util-test", "sequence-scan-empty", "kierros.util-test/sequence-scan-empty", -234516681, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "sequence-scan-empty", "sequence-scan-empty", 154513521, null), "test/kierros/util_test.cljs", 29, 1, 10, 10, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(kierros.util_test.sequence_scan_empty) ? kierros.util_test.sequence_scan_empty.cljs$lang$test : null])), new cljs.core.Var(function() {
          return kierros.util_test.sequence_scan_singleton;
        }, new cljs.core.Symbol("kierros.util-test", "sequence-scan-singleton", "kierros.util-test/sequence-scan-singleton", 746187083, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "sequence-scan-singleton", "sequence-scan-singleton", 189384717, null), "test/kierros/util_test.cljs", 33, 1, 
        15, 15, cljs.core.List.EMPTY, null, cljs.core.truth_(kierros.util_test.sequence_scan_singleton) ? kierros.util_test.sequence_scan_singleton.cljs$lang$test : null])), new cljs.core.Var(function() {
          return kierros.util_test.sequence_scan_one_amendment;
        }, new cljs.core.Symbol("kierros.util-test", "sequence-scan-one-amendment", "kierros.util-test/sequence-scan-one-amendment", 588485599, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "sequence-scan-one-amendment", "sequence-scan-one-amendment", 1550020625, null), "test/kierros/util_test.cljs", 
        37, 1, 20, 20, cljs.core.List.EMPTY, null, cljs.core.truth_(kierros.util_test.sequence_scan_one_amendment) ? kierros.util_test.sequence_scan_one_amendment.cljs$lang$test : null])), new cljs.core.Var(function() {
          return kierros.util_test.scan_amendments;
        }, new cljs.core.Symbol("kierros.util-test", "scan-amendments", "kierros.util-test/scan-amendments", 612872768, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "scan-amendments", "scan-amendments", 257397382, null), "test/kierros/util_test.cljs", 25, 1, 29, 29, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(kierros.util_test.scan_amendments) ? kierros.util_test.scan_amendments.cljs$lang$test : null])), new cljs.core.Var(function() {
          return kierros.util_test.scan_amendments_async;
        }, new cljs.core.Symbol("kierros.util-test", "scan-amendments-async", "kierros.util-test/scan-amendments-async", -1313423603, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Symbol(null, "scan-amendments-async", "scan-amendments-async", -353986485, null), "test/kierros/util_test.cljs", 31, 1, 33, 
        33, cljs.core.List.EMPTY, null, cljs.core.truth_(kierros.util_test.scan_amendments_async) ? kierros.util_test.scan_amendments_async.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9267__auto__, env13083, summary13084) {
          return function() {
            if (env__9267__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9267__auto__, env13083, summary13084)], null));
      }());
    };
  }(env13083, summary13084), function(env13083, summary13084) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "kierros.util-test", "kierros.util-test", -56858064, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env13083, summary13084)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13083, summary13084) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary13084, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary13084), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env13083, summary13084)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env13083, summary13084) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env13083);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary13084));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary13084), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env13083, summary13084)], null));
}());
goog.provide("todomvc_kierros.view");
goog.require("cljs.core");
goog.provide("todomvc_kierros.model");
goog.require("cljs.core");
goog.require("cljs_uuid_utils");
goog.require("kierros.util");
todomvc_kierros.model.new_item = function todomvc_kierros$model$new_item(text) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), cljs_uuid_utils.uuid_string.call(null, cljs_uuid_utils.make_random_uuid.call(null)), new cljs.core.Keyword(null, "text", "text", -1790561697), text], null);
};
todomvc_kierros.model.add_item = function todomvc_kierros$model$add_item(text, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "items", "items", 1031954938)], null), function(items) {
    return cljs.core.conj.call(null, items, todomvc_kierros.model.new_item.call(null, text));
  });
};
todomvc_kierros.model.drop_item = function todomvc_kierros$model$drop_item(id, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "items", "items", 1031954938)], null), function(items) {
    return cljs.core.remove.call(null, function(item) {
      return cljs.core._EQ_.call(null, id, item.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092)));
    }, items);
  });
};
todomvc_kierros.model.modify = function todomvc_kierros$model$modify(id, update_fn, items) {
  return cljs.core.map.call(null, function(item) {
    if (cljs.core._EQ_.call(null, id, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(item))) {
      return update_fn.call(null, item);
    } else {
      return item;
    }
  }, items);
};
todomvc_kierros.model.toggle_completed = function todomvc_kierros$model$toggle_completed(id, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "items", "items", 1031954938)], null), function(items) {
    return todomvc_kierros.model.modify.call(null, id, function(item) {
      return cljs.core.assoc.call(null, item, new cljs.core.Keyword(null, "completed", "completed", -486056503), cljs.core.not.call(null, (new cljs.core.Keyword(null, "completed", "completed", -486056503)).cljs$core$IFn$_invoke$arity$1(item)));
    }, items);
  });
};
todomvc_kierros.model.start_edit = function todomvc_kierros$model$start_edit(id, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "items", "items", 1031954938)], null), function(items) {
    return todomvc_kierros.model.modify.call(null, id, function(item) {
      return cljs.core.assoc.call(null, item, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
    }, items);
  });
};
todomvc_kierros.model.end_edit = function todomvc_kierros$model$end_edit(p__24822, state) {
  var vec__24824 = p__24822;
  var id = cljs.core.nth.call(null, vec__24824, 0, null);
  var text = cljs.core.nth.call(null, vec__24824, 1, null);
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "items", "items", 1031954938)], null), function(vec__24824, id, text) {
    return function(items) {
      return todomvc_kierros.model.modify.call(null, id, function(vec__24824, id, text) {
        return function(item) {
          return cljs.core.assoc.call(null, item, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false, new cljs.core.Keyword(null, "text", "text", -1790561697), text);
        };
      }(vec__24824, id, text), items);
    };
  }(vec__24824, id, text));
};
todomvc_kierros.model.fresh = function todomvc_kierros$model$fresh() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "filter", "filter", -948537934), new cljs.core.Keyword(null, "all", "all", 892129742), new cljs.core.Keyword(null, "items", "items", 1031954938), cljs.core.PersistentVector.EMPTY], null);
};
goog.provide("todomvc_kierros.core");
goog.require("cljs.core");
goog.require("kierros.core");
goog.require("kierros.util");
goog.require("kierros.quiescent_DOM_driver");
cljs.core.enable_console_print_BANG_.call(null);
cljs.core.println.call(null, "Figgin' around like there's no tomorrow!");
todomvc_kierros.core.on_js_reload = function todomvc_kierros$core$on_js_reload() {
  return null;
};
todomvc_kierros.core.todos_cycle_main = function todomvc_kierros$core$todos_cycle_main() {
  return null;
};
kierros.core.run.call(null, todomvc_kierros.core.todos_cycle_main, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "DOM", "DOM", 256811640), kierros.quiescent_DOM_driver.create_quiescent_DOM_driver], null));
